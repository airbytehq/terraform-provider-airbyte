// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/models/shared"
	customTypes "github.com/airbytehq/terraform-provider-airbyte/internal/sdk/types"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SourceGoogleAdsResourceModel) ToSharedSourceGoogleAdsCreateRequest() *shared.SourceGoogleAdsCreateRequest {
	conversionWindowDays := new(int64)
	if !r.Configuration.ConversionWindowDays.IsUnknown() && !r.Configuration.ConversionWindowDays.IsNull() {
		*conversionWindowDays = r.Configuration.ConversionWindowDays.ValueInt64()
	} else {
		conversionWindowDays = nil
	}
	accessToken := new(string)
	if !r.Configuration.Credentials.AccessToken.IsUnknown() && !r.Configuration.Credentials.AccessToken.IsNull() {
		*accessToken = r.Configuration.Credentials.AccessToken.ValueString()
	} else {
		accessToken = nil
	}
	clientID := r.Configuration.Credentials.ClientID.ValueString()
	clientSecret := r.Configuration.Credentials.ClientSecret.ValueString()
	developerToken := r.Configuration.Credentials.DeveloperToken.ValueString()
	refreshToken := r.Configuration.Credentials.RefreshToken.ValueString()
	credentials := shared.SourceGoogleAdsGoogleCredentials{
		AccessToken:    accessToken,
		ClientID:       clientID,
		ClientSecret:   clientSecret,
		DeveloperToken: developerToken,
		RefreshToken:   refreshToken,
	}
	var customQueriesArray []shared.SourceGoogleAdsCustomQueriesArray = []shared.SourceGoogleAdsCustomQueriesArray{}
	for _, customQueriesArrayItem := range r.Configuration.CustomQueriesArray {
		query := customQueriesArrayItem.Query.ValueString()
		tableName := customQueriesArrayItem.TableName.ValueString()
		customQueriesArray = append(customQueriesArray, shared.SourceGoogleAdsCustomQueriesArray{
			Query:     query,
			TableName: tableName,
		})
	}
	customerID := new(string)
	if !r.Configuration.CustomerID.IsUnknown() && !r.Configuration.CustomerID.IsNull() {
		*customerID = r.Configuration.CustomerID.ValueString()
	} else {
		customerID = nil
	}
	var customerStatusFilter []shared.SourceGoogleAdsCustomerStatus = []shared.SourceGoogleAdsCustomerStatus{}
	for _, customerStatusFilterItem := range r.Configuration.CustomerStatusFilter {
		customerStatusFilter = append(customerStatusFilter, shared.SourceGoogleAdsCustomerStatus(customerStatusFilterItem.ValueString()))
	}
	endDate := new(customTypes.Date)
	if !r.Configuration.EndDate.IsUnknown() && !r.Configuration.EndDate.IsNull() {
		endDate = customTypes.MustNewDateFromString(r.Configuration.EndDate.ValueString())
	} else {
		endDate = nil
	}
	startDate := new(customTypes.Date)
	if !r.Configuration.StartDate.IsUnknown() && !r.Configuration.StartDate.IsNull() {
		startDate = customTypes.MustNewDateFromString(r.Configuration.StartDate.ValueString())
	} else {
		startDate = nil
	}
	configuration := shared.SourceGoogleAds{
		ConversionWindowDays: conversionWindowDays,
		Credentials:          credentials,
		CustomQueriesArray:   customQueriesArray,
		CustomerID:           customerID,
		CustomerStatusFilter: customerStatusFilter,
		EndDate:              endDate,
		StartDate:            startDate,
	}
	definitionID := new(string)
	if !r.DefinitionID.IsUnknown() && !r.DefinitionID.IsNull() {
		*definitionID = r.DefinitionID.ValueString()
	} else {
		definitionID = nil
	}
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceGoogleAdsCreateRequest{
		Configuration: configuration,
		DefinitionID:  definitionID,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceGoogleAdsResourceModel) RefreshFromSharedSourceResponse(resp *shared.SourceResponse) {
	if resp != nil {
		r.Name = types.StringValue(resp.Name)
		r.SourceID = types.StringValue(resp.SourceID)
		r.SourceType = types.StringValue(resp.SourceType)
		r.WorkspaceID = types.StringValue(resp.WorkspaceID)
	}
}

func (r *SourceGoogleAdsResourceModel) ToSharedSourceGoogleAdsPutRequest() *shared.SourceGoogleAdsPutRequest {
	conversionWindowDays := new(int64)
	if !r.Configuration.ConversionWindowDays.IsUnknown() && !r.Configuration.ConversionWindowDays.IsNull() {
		*conversionWindowDays = r.Configuration.ConversionWindowDays.ValueInt64()
	} else {
		conversionWindowDays = nil
	}
	accessToken := new(string)
	if !r.Configuration.Credentials.AccessToken.IsUnknown() && !r.Configuration.Credentials.AccessToken.IsNull() {
		*accessToken = r.Configuration.Credentials.AccessToken.ValueString()
	} else {
		accessToken = nil
	}
	clientID := r.Configuration.Credentials.ClientID.ValueString()
	clientSecret := r.Configuration.Credentials.ClientSecret.ValueString()
	developerToken := r.Configuration.Credentials.DeveloperToken.ValueString()
	refreshToken := r.Configuration.Credentials.RefreshToken.ValueString()
	credentials := shared.GoogleCredentials{
		AccessToken:    accessToken,
		ClientID:       clientID,
		ClientSecret:   clientSecret,
		DeveloperToken: developerToken,
		RefreshToken:   refreshToken,
	}
	var customQueriesArray []shared.CustomQueriesArray = []shared.CustomQueriesArray{}
	for _, customQueriesArrayItem := range r.Configuration.CustomQueriesArray {
		query := customQueriesArrayItem.Query.ValueString()
		tableName := customQueriesArrayItem.TableName.ValueString()
		customQueriesArray = append(customQueriesArray, shared.CustomQueriesArray{
			Query:     query,
			TableName: tableName,
		})
	}
	customerID := new(string)
	if !r.Configuration.CustomerID.IsUnknown() && !r.Configuration.CustomerID.IsNull() {
		*customerID = r.Configuration.CustomerID.ValueString()
	} else {
		customerID = nil
	}
	var customerStatusFilter []shared.CustomerStatus = []shared.CustomerStatus{}
	for _, customerStatusFilterItem := range r.Configuration.CustomerStatusFilter {
		customerStatusFilter = append(customerStatusFilter, shared.CustomerStatus(customerStatusFilterItem.ValueString()))
	}
	endDate := new(customTypes.Date)
	if !r.Configuration.EndDate.IsUnknown() && !r.Configuration.EndDate.IsNull() {
		endDate = customTypes.MustNewDateFromString(r.Configuration.EndDate.ValueString())
	} else {
		endDate = nil
	}
	startDate := new(customTypes.Date)
	if !r.Configuration.StartDate.IsUnknown() && !r.Configuration.StartDate.IsNull() {
		startDate = customTypes.MustNewDateFromString(r.Configuration.StartDate.ValueString())
	} else {
		startDate = nil
	}
	configuration := shared.SourceGoogleAdsUpdate{
		ConversionWindowDays: conversionWindowDays,
		Credentials:          credentials,
		CustomQueriesArray:   customQueriesArray,
		CustomerID:           customerID,
		CustomerStatusFilter: customerStatusFilter,
		EndDate:              endDate,
		StartDate:            startDate,
	}
	name := r.Name.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceGoogleAdsPutRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}
