// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *DestinationFirestoreResourceModel) ToCreateSDKType() *shared.DestinationFirestoreCreateRequest {
	credentialsJSON := new(string)
	if !r.Configuration.CredentialsJSON.IsUnknown() && !r.Configuration.CredentialsJSON.IsNull() {
		*credentialsJSON = r.Configuration.CredentialsJSON.ValueString()
	} else {
		credentialsJSON = nil
	}
	destinationType := shared.DestinationFirestoreFirestore(r.Configuration.DestinationType.ValueString())
	projectID := r.Configuration.ProjectID.ValueString()
	configuration := shared.DestinationFirestore{
		CredentialsJSON: credentialsJSON,
		DestinationType: destinationType,
		ProjectID:       projectID,
	}
	name := r.Name.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.DestinationFirestoreCreateRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *DestinationFirestoreResourceModel) ToGetSDKType() *shared.DestinationFirestoreCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *DestinationFirestoreResourceModel) ToUpdateSDKType() *shared.DestinationFirestorePutRequest {
	credentialsJSON := new(string)
	if !r.Configuration.CredentialsJSON.IsUnknown() && !r.Configuration.CredentialsJSON.IsNull() {
		*credentialsJSON = r.Configuration.CredentialsJSON.ValueString()
	} else {
		credentialsJSON = nil
	}
	projectID := r.Configuration.ProjectID.ValueString()
	configuration := shared.DestinationFirestoreUpdate{
		CredentialsJSON: credentialsJSON,
		ProjectID:       projectID,
	}
	name := r.Name.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.DestinationFirestorePutRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *DestinationFirestoreResourceModel) ToDeleteSDKType() *shared.DestinationFirestoreCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *DestinationFirestoreResourceModel) RefreshFromGetResponse(resp *shared.DestinationFirestoreGetResponse) {
	if resp.Configuration.CredentialsJSON != nil {
		r.Configuration.CredentialsJSON = types.StringValue(*resp.Configuration.CredentialsJSON)
	} else {
		r.Configuration.CredentialsJSON = types.StringNull()
	}
	r.Configuration.DestinationType = types.StringValue(string(resp.Configuration.DestinationType))
	r.Configuration.ProjectID = types.StringValue(resp.Configuration.ProjectID)
	if resp.DestinationID != nil {
		r.DestinationID = types.StringValue(*resp.DestinationID)
	} else {
		r.DestinationID = types.StringNull()
	}
	r.Name = types.StringValue(resp.Name)
	r.WorkspaceID = types.StringValue(resp.WorkspaceID)
}

func (r *DestinationFirestoreResourceModel) RefreshFromCreateResponse(resp *shared.DestinationFirestoreGetResponse) {
	r.RefreshFromGetResponse(resp)
}
