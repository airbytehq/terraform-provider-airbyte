// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SourceYouniumResourceModel) ToCreateSDKType() *shared.SourceYouniumCreateRequest {
	legalEntity := r.Configuration.LegalEntity.ValueString()
	password := r.Configuration.Password.ValueString()
	playground := new(bool)
	if !r.Configuration.Playground.IsUnknown() && !r.Configuration.Playground.IsNull() {
		*playground = r.Configuration.Playground.ValueBool()
	} else {
		playground = nil
	}
	sourceType := shared.SourceYouniumYounium(r.Configuration.SourceType.ValueString())
	username := r.Configuration.Username.ValueString()
	configuration := shared.SourceYounium{
		LegalEntity: legalEntity,
		Password:    password,
		Playground:  playground,
		SourceType:  sourceType,
		Username:    username,
	}
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceYouniumCreateRequest{
		Configuration: configuration,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceYouniumResourceModel) ToGetSDKType() *shared.SourceYouniumCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *SourceYouniumResourceModel) ToUpdateSDKType() *shared.SourceYouniumPutRequest {
	legalEntity := r.Configuration.LegalEntity.ValueString()
	password := r.Configuration.Password.ValueString()
	playground := new(bool)
	if !r.Configuration.Playground.IsUnknown() && !r.Configuration.Playground.IsNull() {
		*playground = r.Configuration.Playground.ValueBool()
	} else {
		playground = nil
	}
	username := r.Configuration.Username.ValueString()
	configuration := shared.SourceYouniumUpdate{
		LegalEntity: legalEntity,
		Password:    password,
		Playground:  playground,
		Username:    username,
	}
	name := r.Name.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceYouniumPutRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceYouniumResourceModel) ToDeleteSDKType() *shared.SourceYouniumCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *SourceYouniumResourceModel) RefreshFromGetResponse(resp *shared.SourceYouniumGetResponse) {
	r.Configuration.LegalEntity = types.StringValue(resp.Configuration.LegalEntity)
	r.Configuration.Password = types.StringValue(resp.Configuration.Password)
	if resp.Configuration.Playground != nil {
		r.Configuration.Playground = types.BoolValue(*resp.Configuration.Playground)
	} else {
		r.Configuration.Playground = types.BoolNull()
	}
	r.Configuration.SourceType = types.StringValue(string(resp.Configuration.SourceType))
	r.Configuration.Username = types.StringValue(resp.Configuration.Username)
	r.Name = types.StringValue(resp.Name)
	if resp.SecretID != nil {
		r.SecretID = types.StringValue(*resp.SecretID)
	} else {
		r.SecretID = types.StringNull()
	}
	if resp.SourceID != nil {
		r.SourceID = types.StringValue(*resp.SourceID)
	} else {
		r.SourceID = types.StringNull()
	}
	r.WorkspaceID = types.StringValue(resp.WorkspaceID)
}

func (r *SourceYouniumResourceModel) RefreshFromCreateResponse(resp *shared.SourceYouniumGetResponse) {
	r.RefreshFromGetResponse(resp)
}
