// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/models/shared"
	customTypes "github.com/airbytehq/terraform-provider-airbyte/internal/sdk/types"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SourceBrazeResourceModel) ToSharedSourceBrazeCreateRequest() *shared.SourceBrazeCreateRequest {
	var apiKey string
	apiKey = r.Configuration.APIKey.ValueString()

	startDate := customTypes.MustDateFromString(r.Configuration.StartDate.ValueString())
	var url string
	url = r.Configuration.URL.ValueString()

	configuration := shared.SourceBraze{
		APIKey:    apiKey,
		StartDate: startDate,
		URL:       url,
	}
	definitionID := new(string)
	if !r.DefinitionID.IsUnknown() && !r.DefinitionID.IsNull() {
		*definitionID = r.DefinitionID.ValueString()
	} else {
		definitionID = nil
	}
	var name string
	name = r.Name.ValueString()

	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	var workspaceID string
	workspaceID = r.WorkspaceID.ValueString()

	out := shared.SourceBrazeCreateRequest{
		Configuration: configuration,
		DefinitionID:  definitionID,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceBrazeResourceModel) RefreshFromSharedSourceResponse(resp *shared.SourceResponse) {
	if resp != nil {
		r.Name = types.StringValue(resp.Name)
		r.SourceID = types.StringValue(resp.SourceID)
		r.SourceType = types.StringValue(resp.SourceType)
		r.WorkspaceID = types.StringValue(resp.WorkspaceID)
	}
}

func (r *SourceBrazeResourceModel) ToSharedSourceBrazePutRequest() *shared.SourceBrazePutRequest {
	var apiKey string
	apiKey = r.Configuration.APIKey.ValueString()

	startDate := customTypes.MustDateFromString(r.Configuration.StartDate.ValueString())
	var url string
	url = r.Configuration.URL.ValueString()

	configuration := shared.SourceBrazeUpdate{
		APIKey:    apiKey,
		StartDate: startDate,
		URL:       url,
	}
	var name string
	name = r.Name.ValueString()

	var workspaceID string
	workspaceID = r.WorkspaceID.ValueString()

	out := shared.SourceBrazePutRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}
