// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SourceTvmazeScheduleResourceModel) ToCreateSDKType() *shared.SourceTvmazeScheduleCreateRequest {
	domesticScheduleCountryCode := r.Configuration.DomesticScheduleCountryCode.ValueString()
	endDate := new(string)
	if !r.Configuration.EndDate.IsUnknown() && !r.Configuration.EndDate.IsNull() {
		*endDate = r.Configuration.EndDate.ValueString()
	} else {
		endDate = nil
	}
	sourceType := shared.SourceTvmazeScheduleTvmazeSchedule(r.Configuration.SourceType.ValueString())
	startDate := r.Configuration.StartDate.ValueString()
	webScheduleCountryCode := new(string)
	if !r.Configuration.WebScheduleCountryCode.IsUnknown() && !r.Configuration.WebScheduleCountryCode.IsNull() {
		*webScheduleCountryCode = r.Configuration.WebScheduleCountryCode.ValueString()
	} else {
		webScheduleCountryCode = nil
	}
	configuration := shared.SourceTvmazeSchedule{
		DomesticScheduleCountryCode: domesticScheduleCountryCode,
		EndDate:                     endDate,
		SourceType:                  sourceType,
		StartDate:                   startDate,
		WebScheduleCountryCode:      webScheduleCountryCode,
	}
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceTvmazeScheduleCreateRequest{
		Configuration: configuration,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceTvmazeScheduleResourceModel) ToGetSDKType() *shared.SourceTvmazeScheduleCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *SourceTvmazeScheduleResourceModel) ToUpdateSDKType() *shared.SourceTvmazeSchedulePutRequest {
	domesticScheduleCountryCode := r.Configuration.DomesticScheduleCountryCode.ValueString()
	endDate := new(string)
	if !r.Configuration.EndDate.IsUnknown() && !r.Configuration.EndDate.IsNull() {
		*endDate = r.Configuration.EndDate.ValueString()
	} else {
		endDate = nil
	}
	startDate := r.Configuration.StartDate.ValueString()
	webScheduleCountryCode := new(string)
	if !r.Configuration.WebScheduleCountryCode.IsUnknown() && !r.Configuration.WebScheduleCountryCode.IsNull() {
		*webScheduleCountryCode = r.Configuration.WebScheduleCountryCode.ValueString()
	} else {
		webScheduleCountryCode = nil
	}
	configuration := shared.SourceTvmazeScheduleUpdate{
		DomesticScheduleCountryCode: domesticScheduleCountryCode,
		EndDate:                     endDate,
		StartDate:                   startDate,
		WebScheduleCountryCode:      webScheduleCountryCode,
	}
	name := r.Name.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceTvmazeSchedulePutRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceTvmazeScheduleResourceModel) ToDeleteSDKType() *shared.SourceTvmazeScheduleCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *SourceTvmazeScheduleResourceModel) RefreshFromGetResponse(resp *shared.SourceTvmazeScheduleGetResponse) {
	r.Configuration.DomesticScheduleCountryCode = types.StringValue(resp.Configuration.DomesticScheduleCountryCode)
	if resp.Configuration.EndDate != nil {
		r.Configuration.EndDate = types.StringValue(*resp.Configuration.EndDate)
	} else {
		r.Configuration.EndDate = types.StringNull()
	}
	r.Configuration.SourceType = types.StringValue(string(resp.Configuration.SourceType))
	r.Configuration.StartDate = types.StringValue(resp.Configuration.StartDate)
	if resp.Configuration.WebScheduleCountryCode != nil {
		r.Configuration.WebScheduleCountryCode = types.StringValue(*resp.Configuration.WebScheduleCountryCode)
	} else {
		r.Configuration.WebScheduleCountryCode = types.StringNull()
	}
	r.Name = types.StringValue(resp.Name)
	if resp.SecretID != nil {
		r.SecretID = types.StringValue(*resp.SecretID)
	} else {
		r.SecretID = types.StringNull()
	}
	if resp.SourceID != nil {
		r.SourceID = types.StringValue(*resp.SourceID)
	} else {
		r.SourceID = types.StringNull()
	}
	r.WorkspaceID = types.StringValue(resp.WorkspaceID)
}

func (r *SourceTvmazeScheduleResourceModel) RefreshFromCreateResponse(resp *shared.SourceTvmazeScheduleGetResponse) {
	r.RefreshFromGetResponse(resp)
}
