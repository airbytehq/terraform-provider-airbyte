// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *DestinationSftpJSONResourceModel) ToCreateSDKType() *shared.DestinationSftpJSONCreateRequest {
	destinationType := shared.DestinationSftpJSONSftpJSON(r.Configuration.DestinationType.ValueString())
	destinationPath := r.Configuration.DestinationPath.ValueString()
	host := r.Configuration.Host.ValueString()
	password := r.Configuration.Password.ValueString()
	port := new(int64)
	if !r.Configuration.Port.IsUnknown() && !r.Configuration.Port.IsNull() {
		*port = r.Configuration.Port.ValueInt64()
	} else {
		port = nil
	}
	username := r.Configuration.Username.ValueString()
	configuration := shared.DestinationSftpJSON{
		DestinationType: destinationType,
		DestinationPath: destinationPath,
		Host:            host,
		Password:        password,
		Port:            port,
		Username:        username,
	}
	name := r.Name.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.DestinationSftpJSONCreateRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *DestinationSftpJSONResourceModel) ToGetSDKType() *shared.DestinationSftpJSONCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *DestinationSftpJSONResourceModel) ToUpdateSDKType() *shared.DestinationSftpJSONPutRequest {
	destinationPath := r.Configuration.DestinationPath.ValueString()
	host := r.Configuration.Host.ValueString()
	password := r.Configuration.Password.ValueString()
	port := new(int64)
	if !r.Configuration.Port.IsUnknown() && !r.Configuration.Port.IsNull() {
		*port = r.Configuration.Port.ValueInt64()
	} else {
		port = nil
	}
	username := r.Configuration.Username.ValueString()
	configuration := shared.DestinationSftpJSONUpdate{
		DestinationPath: destinationPath,
		Host:            host,
		Password:        password,
		Port:            port,
		Username:        username,
	}
	name := r.Name.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.DestinationSftpJSONPutRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *DestinationSftpJSONResourceModel) ToDeleteSDKType() *shared.DestinationSftpJSONCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *DestinationSftpJSONResourceModel) RefreshFromGetResponse(resp *shared.DestinationSftpJSONGetResponse) {
	r.Configuration.DestinationPath = types.StringValue(resp.Configuration.DestinationPath)
	r.Configuration.DestinationType = types.StringValue(string(resp.Configuration.DestinationType))
	r.Configuration.Host = types.StringValue(resp.Configuration.Host)
	r.Configuration.Password = types.StringValue(resp.Configuration.Password)
	if resp.Configuration.Port != nil {
		r.Configuration.Port = types.Int64Value(*resp.Configuration.Port)
	} else {
		r.Configuration.Port = types.Int64Null()
	}
	r.Configuration.Username = types.StringValue(resp.Configuration.Username)
	if resp.DestinationID != nil {
		r.DestinationID = types.StringValue(*resp.DestinationID)
	} else {
		r.DestinationID = types.StringNull()
	}
	r.Name = types.StringValue(resp.Name)
	r.WorkspaceID = types.StringValue(resp.WorkspaceID)
}

func (r *DestinationSftpJSONResourceModel) RefreshFromCreateResponse(resp *shared.DestinationSftpJSONGetResponse) {
	r.RefreshFromGetResponse(resp)
}
