// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *DestinationMotherduckResourceModel) ToSharedDestinationMotherduckCreateRequest() *shared.DestinationMotherduckCreateRequest {
	var name string
	name = r.Name.ValueString()

	definitionID := new(string)
	if !r.DefinitionID.IsUnknown() && !r.DefinitionID.IsNull() {
		*definitionID = r.DefinitionID.ValueString()
	} else {
		definitionID = nil
	}
	var workspaceID string
	workspaceID = r.WorkspaceID.ValueString()

	var motherduckAPIKey string
	motherduckAPIKey = r.Configuration.MotherduckAPIKey.ValueString()

	destinationPath := new(string)
	if !r.Configuration.DestinationPath.IsUnknown() && !r.Configuration.DestinationPath.IsNull() {
		*destinationPath = r.Configuration.DestinationPath.ValueString()
	} else {
		destinationPath = nil
	}
	schema := new(string)
	if !r.Configuration.Schema.IsUnknown() && !r.Configuration.Schema.IsNull() {
		*schema = r.Configuration.Schema.ValueString()
	} else {
		schema = nil
	}
	configuration := shared.DestinationMotherduck{
		MotherduckAPIKey: motherduckAPIKey,
		DestinationPath:  destinationPath,
		Schema:           schema,
	}
	out := shared.DestinationMotherduckCreateRequest{
		Name:          name,
		DefinitionID:  definitionID,
		WorkspaceID:   workspaceID,
		Configuration: configuration,
	}
	return &out
}

func (r *DestinationMotherduckResourceModel) RefreshFromSharedDestinationResponse(resp *shared.DestinationResponse) {
	if resp != nil {
		r.CreatedAt = types.Int64Value(resp.CreatedAt)
		r.DefinitionID = types.StringValue(resp.DefinitionID)
		r.DestinationID = types.StringValue(resp.DestinationID)
		r.DestinationType = types.StringValue(resp.DestinationType)
		r.Name = types.StringValue(resp.Name)
		r.WorkspaceID = types.StringValue(resp.WorkspaceID)
	}
}

func (r *DestinationMotherduckResourceModel) ToSharedDestinationMotherduckPutRequest() *shared.DestinationMotherduckPutRequest {
	var name string
	name = r.Name.ValueString()

	var workspaceID string
	workspaceID = r.WorkspaceID.ValueString()

	var motherduckAPIKey string
	motherduckAPIKey = r.Configuration.MotherduckAPIKey.ValueString()

	destinationPath := new(string)
	if !r.Configuration.DestinationPath.IsUnknown() && !r.Configuration.DestinationPath.IsNull() {
		*destinationPath = r.Configuration.DestinationPath.ValueString()
	} else {
		destinationPath = nil
	}
	schema := new(string)
	if !r.Configuration.Schema.IsUnknown() && !r.Configuration.Schema.IsNull() {
		*schema = r.Configuration.Schema.ValueString()
	} else {
		schema = nil
	}
	configuration := shared.DestinationMotherduckUpdate{
		MotherduckAPIKey: motherduckAPIKey,
		DestinationPath:  destinationPath,
		Schema:           schema,
	}
	out := shared.DestinationMotherduckPutRequest{
		Name:          name,
		WorkspaceID:   workspaceID,
		Configuration: configuration,
	}
	return &out
}
