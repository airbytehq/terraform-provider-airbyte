// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *SourceSendgridResourceModel) ToCreateSDKType() *shared.SourceSendgridCreateRequest {
	apikey := r.Configuration.Apikey.ValueString()
	sourceType := shared.SourceSendgridSendgrid(r.Configuration.SourceType.ValueString())
	startTime := new(time.Time)
	if !r.Configuration.StartTime.IsUnknown() && !r.Configuration.StartTime.IsNull() {
		*startTime, _ = time.Parse(time.RFC3339Nano, r.Configuration.StartTime.ValueString())
	} else {
		startTime = nil
	}
	configuration := shared.SourceSendgrid{
		Apikey:     apikey,
		SourceType: sourceType,
		StartTime:  startTime,
	}
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceSendgridCreateRequest{
		Configuration: configuration,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceSendgridResourceModel) ToGetSDKType() *shared.SourceSendgridCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *SourceSendgridResourceModel) ToUpdateSDKType() *shared.SourceSendgridPutRequest {
	apikey := r.Configuration.Apikey.ValueString()
	startTime := new(time.Time)
	if !r.Configuration.StartTime.IsUnknown() && !r.Configuration.StartTime.IsNull() {
		*startTime, _ = time.Parse(time.RFC3339Nano, r.Configuration.StartTime.ValueString())
	} else {
		startTime = nil
	}
	configuration := shared.SourceSendgridUpdate{
		Apikey:    apikey,
		StartTime: startTime,
	}
	name := r.Name.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceSendgridPutRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceSendgridResourceModel) ToDeleteSDKType() *shared.SourceSendgridCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *SourceSendgridResourceModel) RefreshFromGetResponse(resp *shared.SourceSendgridGetResponse) {
	r.Configuration.Apikey = types.StringValue(resp.Configuration.Apikey)
	r.Configuration.SourceType = types.StringValue(string(resp.Configuration.SourceType))
	if resp.Configuration.StartTime != nil {
		r.Configuration.StartTime = types.StringValue(resp.Configuration.StartTime.Format(time.RFC3339))
	} else {
		r.Configuration.StartTime = types.StringNull()
	}
	r.Name = types.StringValue(resp.Name)
	if resp.SecretID != nil {
		r.SecretID = types.StringValue(*resp.SecretID)
	} else {
		r.SecretID = types.StringNull()
	}
	if resp.SourceID != nil {
		r.SourceID = types.StringValue(*resp.SourceID)
	} else {
		r.SourceID = types.StringNull()
	}
	r.WorkspaceID = types.StringValue(resp.WorkspaceID)
}

func (r *SourceSendgridResourceModel) RefreshFromCreateResponse(resp *shared.SourceSendgridGetResponse) {
	r.RefreshFromGetResponse(resp)
}
