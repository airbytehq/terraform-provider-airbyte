// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SourceGutendexResourceModel) ToSharedSourceGutendexCreateRequest() *shared.SourceGutendexCreateRequest {
	var name string
	name = r.Name.ValueString()

	definitionID := new(string)
	if !r.DefinitionID.IsUnknown() && !r.DefinitionID.IsNull() {
		*definitionID = r.DefinitionID.ValueString()
	} else {
		definitionID = nil
	}
	var workspaceID string
	workspaceID = r.WorkspaceID.ValueString()

	authorYearEnd := new(string)
	if !r.Configuration.AuthorYearEnd.IsUnknown() && !r.Configuration.AuthorYearEnd.IsNull() {
		*authorYearEnd = r.Configuration.AuthorYearEnd.ValueString()
	} else {
		authorYearEnd = nil
	}
	authorYearStart := new(string)
	if !r.Configuration.AuthorYearStart.IsUnknown() && !r.Configuration.AuthorYearStart.IsNull() {
		*authorYearStart = r.Configuration.AuthorYearStart.ValueString()
	} else {
		authorYearStart = nil
	}
	copyright := new(string)
	if !r.Configuration.Copyright.IsUnknown() && !r.Configuration.Copyright.IsNull() {
		*copyright = r.Configuration.Copyright.ValueString()
	} else {
		copyright = nil
	}
	languages := new(string)
	if !r.Configuration.Languages.IsUnknown() && !r.Configuration.Languages.IsNull() {
		*languages = r.Configuration.Languages.ValueString()
	} else {
		languages = nil
	}
	search := new(string)
	if !r.Configuration.Search.IsUnknown() && !r.Configuration.Search.IsNull() {
		*search = r.Configuration.Search.ValueString()
	} else {
		search = nil
	}
	sort := new(string)
	if !r.Configuration.Sort.IsUnknown() && !r.Configuration.Sort.IsNull() {
		*sort = r.Configuration.Sort.ValueString()
	} else {
		sort = nil
	}
	topic := new(string)
	if !r.Configuration.Topic.IsUnknown() && !r.Configuration.Topic.IsNull() {
		*topic = r.Configuration.Topic.ValueString()
	} else {
		topic = nil
	}
	configuration := shared.SourceGutendex{
		AuthorYearEnd:   authorYearEnd,
		AuthorYearStart: authorYearStart,
		Copyright:       copyright,
		Languages:       languages,
		Search:          search,
		Sort:            sort,
		Topic:           topic,
	}
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	out := shared.SourceGutendexCreateRequest{
		Name:          name,
		DefinitionID:  definitionID,
		WorkspaceID:   workspaceID,
		Configuration: configuration,
		SecretID:      secretID,
	}
	return &out
}

func (r *SourceGutendexResourceModel) RefreshFromSharedSourceResponse(resp *shared.SourceResponse) {
	if resp != nil {
		r.CreatedAt = types.Int64Value(resp.CreatedAt)
		r.DefinitionID = types.StringValue(resp.DefinitionID)
		r.Name = types.StringValue(resp.Name)
		r.SourceID = types.StringValue(resp.SourceID)
		r.SourceType = types.StringValue(resp.SourceType)
		r.WorkspaceID = types.StringValue(resp.WorkspaceID)
	}
}

func (r *SourceGutendexResourceModel) ToSharedSourceGutendexPutRequest() *shared.SourceGutendexPutRequest {
	var name string
	name = r.Name.ValueString()

	var workspaceID string
	workspaceID = r.WorkspaceID.ValueString()

	authorYearEnd := new(string)
	if !r.Configuration.AuthorYearEnd.IsUnknown() && !r.Configuration.AuthorYearEnd.IsNull() {
		*authorYearEnd = r.Configuration.AuthorYearEnd.ValueString()
	} else {
		authorYearEnd = nil
	}
	authorYearStart := new(string)
	if !r.Configuration.AuthorYearStart.IsUnknown() && !r.Configuration.AuthorYearStart.IsNull() {
		*authorYearStart = r.Configuration.AuthorYearStart.ValueString()
	} else {
		authorYearStart = nil
	}
	copyright := new(string)
	if !r.Configuration.Copyright.IsUnknown() && !r.Configuration.Copyright.IsNull() {
		*copyright = r.Configuration.Copyright.ValueString()
	} else {
		copyright = nil
	}
	languages := new(string)
	if !r.Configuration.Languages.IsUnknown() && !r.Configuration.Languages.IsNull() {
		*languages = r.Configuration.Languages.ValueString()
	} else {
		languages = nil
	}
	search := new(string)
	if !r.Configuration.Search.IsUnknown() && !r.Configuration.Search.IsNull() {
		*search = r.Configuration.Search.ValueString()
	} else {
		search = nil
	}
	sort := new(string)
	if !r.Configuration.Sort.IsUnknown() && !r.Configuration.Sort.IsNull() {
		*sort = r.Configuration.Sort.ValueString()
	} else {
		sort = nil
	}
	topic := new(string)
	if !r.Configuration.Topic.IsUnknown() && !r.Configuration.Topic.IsNull() {
		*topic = r.Configuration.Topic.ValueString()
	} else {
		topic = nil
	}
	configuration := shared.SourceGutendexUpdate{
		AuthorYearEnd:   authorYearEnd,
		AuthorYearStart: authorYearStart,
		Copyright:       copyright,
		Languages:       languages,
		Search:          search,
		Sort:            sort,
		Topic:           topic,
	}
	out := shared.SourceGutendexPutRequest{
		Name:          name,
		WorkspaceID:   workspaceID,
		Configuration: configuration,
	}
	return &out
}
