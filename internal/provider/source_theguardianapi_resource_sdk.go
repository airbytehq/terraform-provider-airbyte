// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SourceTheGuardianAPIResourceModel) ToCreateSDKType() *shared.SourceTheGuardianAPICreateRequest {
	apiKey := r.Configuration.APIKey.ValueString()
	endDate := new(string)
	if !r.Configuration.EndDate.IsUnknown() && !r.Configuration.EndDate.IsNull() {
		*endDate = r.Configuration.EndDate.ValueString()
	} else {
		endDate = nil
	}
	query := new(string)
	if !r.Configuration.Query.IsUnknown() && !r.Configuration.Query.IsNull() {
		*query = r.Configuration.Query.ValueString()
	} else {
		query = nil
	}
	section := new(string)
	if !r.Configuration.Section.IsUnknown() && !r.Configuration.Section.IsNull() {
		*section = r.Configuration.Section.ValueString()
	} else {
		section = nil
	}
	startDate := r.Configuration.StartDate.ValueString()
	tag := new(string)
	if !r.Configuration.Tag.IsUnknown() && !r.Configuration.Tag.IsNull() {
		*tag = r.Configuration.Tag.ValueString()
	} else {
		tag = nil
	}
	configuration := shared.SourceTheGuardianAPI{
		APIKey:    apiKey,
		EndDate:   endDate,
		Query:     query,
		Section:   section,
		StartDate: startDate,
		Tag:       tag,
	}
	definitionID := new(string)
	if !r.DefinitionID.IsUnknown() && !r.DefinitionID.IsNull() {
		*definitionID = r.DefinitionID.ValueString()
	} else {
		definitionID = nil
	}
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceTheGuardianAPICreateRequest{
		Configuration: configuration,
		DefinitionID:  definitionID,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceTheGuardianAPIResourceModel) ToGetSDKType() *shared.SourceTheGuardianAPICreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *SourceTheGuardianAPIResourceModel) ToUpdateSDKType() *shared.SourceTheGuardianAPIPutRequest {
	apiKey := r.Configuration.APIKey.ValueString()
	endDate := new(string)
	if !r.Configuration.EndDate.IsUnknown() && !r.Configuration.EndDate.IsNull() {
		*endDate = r.Configuration.EndDate.ValueString()
	} else {
		endDate = nil
	}
	query := new(string)
	if !r.Configuration.Query.IsUnknown() && !r.Configuration.Query.IsNull() {
		*query = r.Configuration.Query.ValueString()
	} else {
		query = nil
	}
	section := new(string)
	if !r.Configuration.Section.IsUnknown() && !r.Configuration.Section.IsNull() {
		*section = r.Configuration.Section.ValueString()
	} else {
		section = nil
	}
	startDate := r.Configuration.StartDate.ValueString()
	tag := new(string)
	if !r.Configuration.Tag.IsUnknown() && !r.Configuration.Tag.IsNull() {
		*tag = r.Configuration.Tag.ValueString()
	} else {
		tag = nil
	}
	configuration := shared.SourceTheGuardianAPIUpdate{
		APIKey:    apiKey,
		EndDate:   endDate,
		Query:     query,
		Section:   section,
		StartDate: startDate,
		Tag:       tag,
	}
	name := r.Name.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceTheGuardianAPIPutRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceTheGuardianAPIResourceModel) ToDeleteSDKType() *shared.SourceTheGuardianAPICreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *SourceTheGuardianAPIResourceModel) RefreshFromGetResponse(resp *shared.SourceResponse) {
	r.Name = types.StringValue(resp.Name)
	r.SourceID = types.StringValue(resp.SourceID)
	r.SourceType = types.StringValue(resp.SourceType)
	r.WorkspaceID = types.StringValue(resp.WorkspaceID)
}

func (r *SourceTheGuardianAPIResourceModel) RefreshFromCreateResponse(resp *shared.SourceResponse) {
	r.RefreshFromGetResponse(resp)
}
