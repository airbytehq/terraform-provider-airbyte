// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SourceGoogleWorkspaceAdminReportsResourceModel) ToCreateSDKType() *shared.SourceGoogleWorkspaceAdminReportsCreateRequest {
	credentialsJSON := r.Configuration.CredentialsJSON.ValueString()
	email := r.Configuration.Email.ValueString()
	lookback := new(int64)
	if !r.Configuration.Lookback.IsUnknown() && !r.Configuration.Lookback.IsNull() {
		*lookback = r.Configuration.Lookback.ValueInt64()
	} else {
		lookback = nil
	}
	sourceType := shared.SourceGoogleWorkspaceAdminReportsGoogleWorkspaceAdminReports(r.Configuration.SourceType.ValueString())
	configuration := shared.SourceGoogleWorkspaceAdminReports{
		CredentialsJSON: credentialsJSON,
		Email:           email,
		Lookback:        lookback,
		SourceType:      sourceType,
	}
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceGoogleWorkspaceAdminReportsCreateRequest{
		Configuration: configuration,
		Name:          name,
		SecretID:      secretID,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceGoogleWorkspaceAdminReportsResourceModel) ToGetSDKType() *shared.SourceGoogleWorkspaceAdminReportsCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *SourceGoogleWorkspaceAdminReportsResourceModel) ToUpdateSDKType() *shared.SourceGoogleWorkspaceAdminReportsPutRequest {
	credentialsJSON := r.Configuration.CredentialsJSON.ValueString()
	email := r.Configuration.Email.ValueString()
	lookback := new(int64)
	if !r.Configuration.Lookback.IsUnknown() && !r.Configuration.Lookback.IsNull() {
		*lookback = r.Configuration.Lookback.ValueInt64()
	} else {
		lookback = nil
	}
	configuration := shared.SourceGoogleWorkspaceAdminReportsUpdate{
		CredentialsJSON: credentialsJSON,
		Email:           email,
		Lookback:        lookback,
	}
	name := r.Name.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceGoogleWorkspaceAdminReportsPutRequest{
		Configuration: configuration,
		Name:          name,
		WorkspaceID:   workspaceID,
	}
	return &out
}

func (r *SourceGoogleWorkspaceAdminReportsResourceModel) ToDeleteSDKType() *shared.SourceGoogleWorkspaceAdminReportsCreateRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *SourceGoogleWorkspaceAdminReportsResourceModel) RefreshFromGetResponse(resp *shared.SourceGoogleWorkspaceAdminReportsGetResponse) {
	r.Configuration.CredentialsJSON = types.StringValue(resp.Configuration.CredentialsJSON)
	r.Configuration.Email = types.StringValue(resp.Configuration.Email)
	if resp.Configuration.Lookback != nil {
		r.Configuration.Lookback = types.Int64Value(*resp.Configuration.Lookback)
	} else {
		r.Configuration.Lookback = types.Int64Null()
	}
	r.Configuration.SourceType = types.StringValue(string(resp.Configuration.SourceType))
	r.Name = types.StringValue(resp.Name)
	if resp.SecretID != nil {
		r.SecretID = types.StringValue(*resp.SecretID)
	} else {
		r.SecretID = types.StringNull()
	}
	if resp.SourceID != nil {
		r.SourceID = types.StringValue(*resp.SourceID)
	} else {
		r.SourceID = types.StringNull()
	}
	r.WorkspaceID = types.StringValue(resp.WorkspaceID)
}

func (r *SourceGoogleWorkspaceAdminReportsResourceModel) RefreshFromCreateResponse(resp *shared.SourceGoogleWorkspaceAdminReportsGetResponse) {
	r.RefreshFromGetResponse(resp)
}
