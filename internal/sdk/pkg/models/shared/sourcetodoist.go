// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type SourceTodoistTodoist string

const (
	SourceTodoistTodoistTodoist SourceTodoistTodoist = "todoist"
)

func (e SourceTodoistTodoist) ToPointer() *SourceTodoistTodoist {
	return &e
}

func (e *SourceTodoistTodoist) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "todoist":
		*e = SourceTodoistTodoist(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceTodoistTodoist: %v", v)
	}
}

type SourceTodoist struct {
	sourceType SourceTodoistTodoist `const:"todoist" json:"sourceType"`
	// Your API Token. See <a href="https://todoist.com/app/settings/integrations/">here</a>. The token is case sensitive.
	Token string `json:"token"`
}

func (s SourceTodoist) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceTodoist) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceTodoist) GetSourceType() SourceTodoistTodoist {
	return SourceTodoistTodoistTodoist
}

func (o *SourceTodoist) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}
