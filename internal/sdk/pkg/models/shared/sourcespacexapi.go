// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type SourceSpacexAPISpacexAPI string

const (
	SourceSpacexAPISpacexAPISpacexAPI SourceSpacexAPISpacexAPI = "spacex-api"
)

func (e SourceSpacexAPISpacexAPI) ToPointer() *SourceSpacexAPISpacexAPI {
	return &e
}

func (e *SourceSpacexAPISpacexAPI) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "spacex-api":
		*e = SourceSpacexAPISpacexAPI(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceSpacexAPISpacexAPI: %v", v)
	}
}

type SourceSpacexAPI struct {
	ID         *string                   `json:"id,omitempty"`
	Options    *string                   `json:"options,omitempty"`
	sourceType *SourceSpacexAPISpacexAPI `const:"spacex-api" json:"sourceType,omitempty"`
}

func (s SourceSpacexAPI) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceSpacexAPI) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceSpacexAPI) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *SourceSpacexAPI) GetOptions() *string {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *SourceSpacexAPI) GetSourceType() *SourceSpacexAPISpacexAPI {
	return SourceSpacexAPISpacexAPISpacexAPI.ToPointer()
}
