// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceAhaAha string

const (
	SourceAhaAhaAha SourceAhaAha = "aha"
)

func (e SourceAhaAha) ToPointer() *SourceAhaAha {
	return &e
}

func (e *SourceAhaAha) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aha":
		*e = SourceAhaAha(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAhaAha: %v", v)
	}
}

type SourceAha struct {
	// API Key
	APIKey     string       `json:"api_key"`
	SourceType SourceAhaAha `json:"sourceType"`
	// URL
	URL string `json:"url"`
}
