// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type SourceAhaAha string

const (
	SourceAhaAhaAha SourceAhaAha = "aha"
)

func (e SourceAhaAha) ToPointer() *SourceAhaAha {
	return &e
}

func (e *SourceAhaAha) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aha":
		*e = SourceAhaAha(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAhaAha: %v", v)
	}
}

type SourceAha struct {
	// API Key
	APIKey     string       `json:"api_key"`
	sourceType SourceAhaAha `const:"aha" json:"sourceType"`
	// URL
	URL string `json:"url"`
}

func (s SourceAha) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceAha) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceAha) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceAha) GetSourceType() SourceAhaAha {
	return SourceAhaAhaAha
}

func (o *SourceAha) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}
