// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type SourceDockerhubDockerhub string

const (
	SourceDockerhubDockerhubDockerhub SourceDockerhubDockerhub = "dockerhub"
)

func (e SourceDockerhubDockerhub) ToPointer() *SourceDockerhubDockerhub {
	return &e
}

func (e *SourceDockerhubDockerhub) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dockerhub":
		*e = SourceDockerhubDockerhub(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceDockerhubDockerhub: %v", v)
	}
}

type SourceDockerhub struct {
	// Username of DockerHub person or organization (for https://hub.docker.com/v2/repositories/USERNAME/ API call)
	DockerUsername string                   `json:"docker_username"`
	sourceType     SourceDockerhubDockerhub `const:"dockerhub" json:"sourceType"`
}

func (s SourceDockerhub) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceDockerhub) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceDockerhub) GetDockerUsername() string {
	if o == nil {
		return ""
	}
	return o.DockerUsername
}

func (o *SourceDockerhub) GetSourceType() SourceDockerhubDockerhub {
	return SourceDockerhubDockerhubDockerhub
}
