// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SourceSalesforceUpdateAuthType string

const (
	SourceSalesforceUpdateAuthTypeClient SourceSalesforceUpdateAuthType = "Client"
)

func (e SourceSalesforceUpdateAuthType) ToPointer() *SourceSalesforceUpdateAuthType {
	return &e
}

func (e *SourceSalesforceUpdateAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Client":
		*e = SourceSalesforceUpdateAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceSalesforceUpdateAuthType: %v", v)
	}
}

type SourceSalesforceUpdateStreamsCriteriaSearchCriteria string

const (
	SourceSalesforceUpdateStreamsCriteriaSearchCriteriaStartsWith    SourceSalesforceUpdateStreamsCriteriaSearchCriteria = "starts with"
	SourceSalesforceUpdateStreamsCriteriaSearchCriteriaEndsWith      SourceSalesforceUpdateStreamsCriteriaSearchCriteria = "ends with"
	SourceSalesforceUpdateStreamsCriteriaSearchCriteriaContains      SourceSalesforceUpdateStreamsCriteriaSearchCriteria = "contains"
	SourceSalesforceUpdateStreamsCriteriaSearchCriteriaExacts        SourceSalesforceUpdateStreamsCriteriaSearchCriteria = "exacts"
	SourceSalesforceUpdateStreamsCriteriaSearchCriteriaStartsNotWith SourceSalesforceUpdateStreamsCriteriaSearchCriteria = "starts not with"
	SourceSalesforceUpdateStreamsCriteriaSearchCriteriaEndsNotWith   SourceSalesforceUpdateStreamsCriteriaSearchCriteria = "ends not with"
	SourceSalesforceUpdateStreamsCriteriaSearchCriteriaNotContains   SourceSalesforceUpdateStreamsCriteriaSearchCriteria = "not contains"
	SourceSalesforceUpdateStreamsCriteriaSearchCriteriaNotExacts     SourceSalesforceUpdateStreamsCriteriaSearchCriteria = "not exacts"
)

func (e SourceSalesforceUpdateStreamsCriteriaSearchCriteria) ToPointer() *SourceSalesforceUpdateStreamsCriteriaSearchCriteria {
	return &e
}

func (e *SourceSalesforceUpdateStreamsCriteriaSearchCriteria) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "starts with":
		fallthrough
	case "ends with":
		fallthrough
	case "contains":
		fallthrough
	case "exacts":
		fallthrough
	case "starts not with":
		fallthrough
	case "ends not with":
		fallthrough
	case "not contains":
		fallthrough
	case "not exacts":
		*e = SourceSalesforceUpdateStreamsCriteriaSearchCriteria(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceSalesforceUpdateStreamsCriteriaSearchCriteria: %v", v)
	}
}

type SourceSalesforceUpdateStreamsCriteria struct {
	Criteria SourceSalesforceUpdateStreamsCriteriaSearchCriteria `json:"criteria"`
	Value    string                                              `json:"value"`
}

type SourceSalesforceUpdate struct {
	AuthType *SourceSalesforceUpdateAuthType `json:"auth_type,omitempty"`
	// Enter your Salesforce developer application's <a href="https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG">Client ID</a>
	ClientID string `json:"client_id"`
	// Enter your Salesforce developer application's <a href="https://developer.salesforce.com/forums/?id=9062I000000DLgbQAG">Client secret</a>
	ClientSecret string `json:"client_secret"`
	// Toggle to use Bulk API (this might cause empty fields for some streams)
	ForceUseBulkAPI *bool `json:"force_use_bulk_api,omitempty"`
	// Toggle if you're using a <a href="https://help.salesforce.com/s/articleView?id=sf.deploy_sandboxes_parent.htm&type=5">Salesforce Sandbox</a>
	IsSandbox *bool `json:"is_sandbox,omitempty"`
	// Enter your application's <a href="https://developer.salesforce.com/docs/atlas.en-us.mobile_sdk.meta/mobile_sdk/oauth_refresh_token_flow.htm">Salesforce Refresh Token</a> used for Airbyte to access your Salesforce account.
	RefreshToken string `json:"refresh_token"`
	// Enter the date (or date-time) in the YYYY-MM-DD or YYYY-MM-DDTHH:mm:ssZ format. Airbyte will replicate the data updated on and after this date. If this field is blank, Airbyte will replicate the data for last two years.
	StartDate *time.Time `json:"start_date,omitempty"`
	// Add filters to select only required stream based on `SObject` name. Use this field to filter which tables are displayed by this connector. This is useful if your Salesforce account has a large number of tables (>1000), in which case you may find it easier to navigate the UI and speed up the connector's performance if you restrict the tables displayed by this connector.
	StreamsCriteria []SourceSalesforceUpdateStreamsCriteria `json:"streams_criteria,omitempty"`
}
