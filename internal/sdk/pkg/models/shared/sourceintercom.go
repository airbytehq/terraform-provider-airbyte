// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SourceIntercomIntercom string

const (
	SourceIntercomIntercomIntercom SourceIntercomIntercom = "intercom"
)

func (e SourceIntercomIntercom) ToPointer() *SourceIntercomIntercom {
	return &e
}

func (e *SourceIntercomIntercom) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "intercom":
		*e = SourceIntercomIntercom(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceIntercomIntercom: %v", v)
	}
}

type SourceIntercom struct {
	// Access token for making authenticated requests. See the <a href="https://developers.intercom.com/building-apps/docs/authentication-types#how-to-get-your-access-token">Intercom docs</a> for more information.
	AccessToken string `json:"access_token"`
	// Client Id for your Intercom application.
	ClientID *string `json:"client_id,omitempty"`
	// Client Secret for your Intercom application.
	ClientSecret *string                `json:"client_secret,omitempty"`
	SourceType   SourceIntercomIntercom `json:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate time.Time `json:"start_date"`
}
