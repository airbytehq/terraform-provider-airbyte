// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type SourceSecodaSecoda string

const (
	SourceSecodaSecodaSecoda SourceSecodaSecoda = "secoda"
)

func (e SourceSecodaSecoda) ToPointer() *SourceSecodaSecoda {
	return &e
}

func (e *SourceSecodaSecoda) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "secoda":
		*e = SourceSecodaSecoda(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceSecodaSecoda: %v", v)
	}
}

type SourceSecoda struct {
	// Your API Access Key. See <a href="https://docs.secoda.co/secoda-api/authentication">here</a>. The key is case sensitive.
	APIKey     string             `json:"api_key"`
	sourceType SourceSecodaSecoda `const:"secoda" json:"sourceType"`
}

func (s SourceSecoda) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceSecoda) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceSecoda) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceSecoda) GetSourceType() SourceSecodaSecoda {
	return SourceSecodaSecodaSecoda
}
