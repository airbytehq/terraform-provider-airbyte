// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type SourceIp2whoisIp2whois string

const (
	SourceIp2whoisIp2whoisIp2whois SourceIp2whoisIp2whois = "ip2whois"
)

func (e SourceIp2whoisIp2whois) ToPointer() *SourceIp2whoisIp2whois {
	return &e
}

func (e *SourceIp2whoisIp2whois) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ip2whois":
		*e = SourceIp2whoisIp2whois(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceIp2whoisIp2whois: %v", v)
	}
}

type SourceIp2whois struct {
	// Your API Key. See <a href="https://www.ip2whois.com/developers-api">here</a>.
	APIKey *string `json:"api_key,omitempty"`
	// Domain name. See <a href="https://www.ip2whois.com/developers-api">here</a>.
	Domain     *string                 `json:"domain,omitempty"`
	sourceType *SourceIp2whoisIp2whois `const:"ip2whois" json:"sourceType,omitempty"`
}

func (s SourceIp2whois) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceIp2whois) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceIp2whois) GetAPIKey() *string {
	if o == nil {
		return nil
	}
	return o.APIKey
}

func (o *SourceIp2whois) GetDomain() *string {
	if o == nil {
		return nil
	}
	return o.Domain
}

func (o *SourceIp2whois) GetSourceType() *SourceIp2whoisIp2whois {
	return SourceIp2whoisIp2whoisIp2whois.ToPointer()
}
