// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type SourceWhiskyHunterWhiskyHunter string

const (
	SourceWhiskyHunterWhiskyHunterWhiskyHunter SourceWhiskyHunterWhiskyHunter = "whisky-hunter"
)

func (e SourceWhiskyHunterWhiskyHunter) ToPointer() *SourceWhiskyHunterWhiskyHunter {
	return &e
}

func (e *SourceWhiskyHunterWhiskyHunter) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "whisky-hunter":
		*e = SourceWhiskyHunterWhiskyHunter(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceWhiskyHunterWhiskyHunter: %v", v)
	}
}

type SourceWhiskyHunter struct {
	sourceType *SourceWhiskyHunterWhiskyHunter `const:"whisky-hunter" json:"sourceType,omitempty"`
}

func (s SourceWhiskyHunter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceWhiskyHunter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceWhiskyHunter) GetSourceType() *SourceWhiskyHunterWhiskyHunter {
	return SourceWhiskyHunterWhiskyHunterWhiskyHunter.ToPointer()
}
