// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type SourceZoomZoom string

const (
	SourceZoomZoomZoom SourceZoomZoom = "zoom"
)

func (e SourceZoomZoom) ToPointer() *SourceZoomZoom {
	return &e
}

func (e *SourceZoomZoom) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "zoom":
		*e = SourceZoomZoom(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceZoomZoom: %v", v)
	}
}

type SourceZoom struct {
	// JWT Token
	JwtToken   string         `json:"jwt_token"`
	sourceType SourceZoomZoom `const:"zoom" json:"sourceType"`
}

func (s SourceZoom) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceZoom) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceZoom) GetJwtToken() string {
	if o == nil {
		return ""
	}
	return o.JwtToken
}

func (o *SourceZoom) GetSourceType() SourceZoomZoom {
	return SourceZoomZoomZoom
}
