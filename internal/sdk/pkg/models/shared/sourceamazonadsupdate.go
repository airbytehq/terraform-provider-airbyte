// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceAmazonAdsUpdateAuthType string

const (
	SourceAmazonAdsUpdateAuthTypeOauth20 SourceAmazonAdsUpdateAuthType = "oauth2.0"
)

func (e SourceAmazonAdsUpdateAuthType) ToPointer() *SourceAmazonAdsUpdateAuthType {
	return &e
}

func (e *SourceAmazonAdsUpdateAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "oauth2.0":
		*e = SourceAmazonAdsUpdateAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAmazonAdsUpdateAuthType: %v", v)
	}
}

// SourceAmazonAdsUpdateRegion - Region to pull data from (EU/NA/FE). See <a href="https://advertising.amazon.com/API/docs/en-us/info/api-overview#api-endpoints">docs</a> for more details.
type SourceAmazonAdsUpdateRegion string

const (
	SourceAmazonAdsUpdateRegionNa SourceAmazonAdsUpdateRegion = "NA"
	SourceAmazonAdsUpdateRegionEu SourceAmazonAdsUpdateRegion = "EU"
	SourceAmazonAdsUpdateRegionFe SourceAmazonAdsUpdateRegion = "FE"
)

func (e SourceAmazonAdsUpdateRegion) ToPointer() *SourceAmazonAdsUpdateRegion {
	return &e
}

func (e *SourceAmazonAdsUpdateRegion) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NA":
		fallthrough
	case "EU":
		fallthrough
	case "FE":
		*e = SourceAmazonAdsUpdateRegion(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAmazonAdsUpdateRegion: %v", v)
	}
}

type SourceAmazonAdsUpdateReportRecordTypes string

const (
	SourceAmazonAdsUpdateReportRecordTypesAdGroups      SourceAmazonAdsUpdateReportRecordTypes = "adGroups"
	SourceAmazonAdsUpdateReportRecordTypesAsins         SourceAmazonAdsUpdateReportRecordTypes = "asins"
	SourceAmazonAdsUpdateReportRecordTypesAsinsKeywords SourceAmazonAdsUpdateReportRecordTypes = "asins_keywords"
	SourceAmazonAdsUpdateReportRecordTypesAsinsTargets  SourceAmazonAdsUpdateReportRecordTypes = "asins_targets"
	SourceAmazonAdsUpdateReportRecordTypesCampaigns     SourceAmazonAdsUpdateReportRecordTypes = "campaigns"
	SourceAmazonAdsUpdateReportRecordTypesKeywords      SourceAmazonAdsUpdateReportRecordTypes = "keywords"
	SourceAmazonAdsUpdateReportRecordTypesProductAds    SourceAmazonAdsUpdateReportRecordTypes = "productAds"
	SourceAmazonAdsUpdateReportRecordTypesTargets       SourceAmazonAdsUpdateReportRecordTypes = "targets"
)

func (e SourceAmazonAdsUpdateReportRecordTypes) ToPointer() *SourceAmazonAdsUpdateReportRecordTypes {
	return &e
}

func (e *SourceAmazonAdsUpdateReportRecordTypes) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "adGroups":
		fallthrough
	case "asins":
		fallthrough
	case "asins_keywords":
		fallthrough
	case "asins_targets":
		fallthrough
	case "campaigns":
		fallthrough
	case "keywords":
		fallthrough
	case "productAds":
		fallthrough
	case "targets":
		*e = SourceAmazonAdsUpdateReportRecordTypes(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAmazonAdsUpdateReportRecordTypes: %v", v)
	}
}

type SourceAmazonAdsUpdateStateFilter string

const (
	SourceAmazonAdsUpdateStateFilterEnabled  SourceAmazonAdsUpdateStateFilter = "enabled"
	SourceAmazonAdsUpdateStateFilterPaused   SourceAmazonAdsUpdateStateFilter = "paused"
	SourceAmazonAdsUpdateStateFilterArchived SourceAmazonAdsUpdateStateFilter = "archived"
)

func (e SourceAmazonAdsUpdateStateFilter) ToPointer() *SourceAmazonAdsUpdateStateFilter {
	return &e
}

func (e *SourceAmazonAdsUpdateStateFilter) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "enabled":
		fallthrough
	case "paused":
		fallthrough
	case "archived":
		*e = SourceAmazonAdsUpdateStateFilter(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAmazonAdsUpdateStateFilter: %v", v)
	}
}

type SourceAmazonAdsUpdate struct {
	AuthType *SourceAmazonAdsUpdateAuthType `json:"auth_type,omitempty"`
	// The client ID of your Amazon Ads developer application. See the <a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret">docs</a> for more information.
	ClientID string `json:"client_id"`
	// The client secret of your Amazon Ads developer application. See the <a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret">docs</a> for more information.
	ClientSecret string `json:"client_secret"`
	// The amount of days to go back in time to get the updated data from Amazon Ads
	LookBackWindow *int64 `json:"look_back_window,omitempty"`
	// Marketplace IDs you want to fetch data for. Note: If Profile IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
	MarketplaceIds []string `json:"marketplace_ids,omitempty"`
	// Profile IDs you want to fetch data for. See <a href="https://advertising.amazon.com/API/docs/en-us/concepts/authorization/profiles">docs</a> for more details. Note: If Marketplace IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
	Profiles []int64 `json:"profiles,omitempty"`
	// Amazon Ads refresh token. See the <a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens">docs</a> for more information on how to obtain this token.
	RefreshToken string `json:"refresh_token"`
	// Region to pull data from (EU/NA/FE). See <a href="https://advertising.amazon.com/API/docs/en-us/info/api-overview#api-endpoints">docs</a> for more details.
	Region *SourceAmazonAdsUpdateRegion `json:"region,omitempty"`
	// Optional configuration which accepts an array of string of record types. Leave blank for default behaviour to pull all report types. Use this config option only if you want to pull specific report type(s). See <a href="https://advertising.amazon.com/API/docs/en-us/reporting/v2/report-types">docs</a> for more details
	ReportRecordTypes []SourceAmazonAdsUpdateReportRecordTypes `json:"report_record_types,omitempty"`
	// The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format
	StartDate *string `json:"start_date,omitempty"`
	// Reflects the state of the Display, Product, and Brand Campaign streams as enabled, paused, or archived. If you do not populate this field, it will be ignored completely.
	StateFilter []SourceAmazonAdsUpdateStateFilter `json:"state_filter,omitempty"`
}
