// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type SourceTwilioTaskrouterTwilioTaskrouter string

const (
	SourceTwilioTaskrouterTwilioTaskrouterTwilioTaskrouter SourceTwilioTaskrouterTwilioTaskrouter = "twilio-taskrouter"
)

func (e SourceTwilioTaskrouterTwilioTaskrouter) ToPointer() *SourceTwilioTaskrouterTwilioTaskrouter {
	return &e
}

func (e *SourceTwilioTaskrouterTwilioTaskrouter) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "twilio-taskrouter":
		*e = SourceTwilioTaskrouterTwilioTaskrouter(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceTwilioTaskrouterTwilioTaskrouter: %v", v)
	}
}

type SourceTwilioTaskrouter struct {
	// Twilio Account ID
	AccountSid string `json:"account_sid"`
	// Twilio Auth Token
	AuthToken  string                                 `json:"auth_token"`
	sourceType SourceTwilioTaskrouterTwilioTaskrouter `const:"twilio-taskrouter" json:"sourceType"`
}

func (s SourceTwilioTaskrouter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceTwilioTaskrouter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceTwilioTaskrouter) GetAccountSid() string {
	if o == nil {
		return ""
	}
	return o.AccountSid
}

func (o *SourceTwilioTaskrouter) GetAuthToken() string {
	if o == nil {
		return ""
	}
	return o.AuthToken
}

func (o *SourceTwilioTaskrouter) GetSourceType() SourceTwilioTaskrouterTwilioTaskrouter {
	return SourceTwilioTaskrouterTwilioTaskrouterTwilioTaskrouter
}
