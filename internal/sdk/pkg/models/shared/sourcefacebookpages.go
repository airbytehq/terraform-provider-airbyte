// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type SourceFacebookPagesFacebookPages string

const (
	SourceFacebookPagesFacebookPagesFacebookPages SourceFacebookPagesFacebookPages = "facebook-pages"
)

func (e SourceFacebookPagesFacebookPages) ToPointer() *SourceFacebookPagesFacebookPages {
	return &e
}

func (e *SourceFacebookPagesFacebookPages) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "facebook-pages":
		*e = SourceFacebookPagesFacebookPages(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookPagesFacebookPages: %v", v)
	}
}

type SourceFacebookPages struct {
	// Facebook Page Access Token
	AccessToken string `json:"access_token"`
	// Page ID
	PageID     string                           `json:"page_id"`
	sourceType SourceFacebookPagesFacebookPages `const:"facebook-pages" json:"sourceType"`
}

func (s SourceFacebookPages) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceFacebookPages) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceFacebookPages) GetAccessToken() string {
	if o == nil {
		return ""
	}
	return o.AccessToken
}

func (o *SourceFacebookPages) GetPageID() string {
	if o == nil {
		return ""
	}
	return o.PageID
}

func (o *SourceFacebookPages) GetSourceType() SourceFacebookPagesFacebookPages {
	return SourceFacebookPagesFacebookPagesFacebookPages
}
