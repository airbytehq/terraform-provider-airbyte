// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DestinationXataXata string

const (
	DestinationXataXataXata DestinationXataXata = "xata"
)

func (e DestinationXataXata) ToPointer() *DestinationXataXata {
	return &e
}

func (e *DestinationXataXata) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "xata":
		*e = DestinationXataXata(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationXataXata: %v", v)
	}
}

type DestinationXata struct {
	// API Key to connect.
	APIKey string `json:"api_key"`
	// URL pointing to your workspace.
	DbURL           string              `json:"db_url"`
	DestinationType DestinationXataXata `json:"destinationType"`
}
