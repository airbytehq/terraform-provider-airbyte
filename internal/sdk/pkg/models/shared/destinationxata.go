// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type DestinationXataXata string

const (
	DestinationXataXataXata DestinationXataXata = "xata"
)

func (e DestinationXataXata) ToPointer() *DestinationXataXata {
	return &e
}

func (e *DestinationXataXata) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "xata":
		*e = DestinationXataXata(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationXataXata: %v", v)
	}
}

type DestinationXata struct {
	// API Key to connect.
	APIKey string `json:"api_key"`
	// URL pointing to your workspace.
	DbURL           string              `json:"db_url"`
	destinationType DestinationXataXata `const:"xata" json:"destinationType"`
}

func (d DestinationXata) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DestinationXata) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DestinationXata) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *DestinationXata) GetDbURL() string {
	if o == nil {
		return ""
	}
	return o.DbURL
}

func (o *DestinationXata) GetDestinationType() DestinationXataXata {
	return DestinationXataXataXata
}
