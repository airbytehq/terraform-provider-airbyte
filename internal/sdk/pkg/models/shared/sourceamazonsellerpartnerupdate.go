// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceAmazonSellerPartnerUpdateAuthType string

const (
	SourceAmazonSellerPartnerUpdateAuthTypeOauth20 SourceAmazonSellerPartnerUpdateAuthType = "oauth2.0"
)

func (e SourceAmazonSellerPartnerUpdateAuthType) ToPointer() *SourceAmazonSellerPartnerUpdateAuthType {
	return &e
}

func (e *SourceAmazonSellerPartnerUpdateAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "oauth2.0":
		*e = SourceAmazonSellerPartnerUpdateAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAmazonSellerPartnerUpdateAuthType: %v", v)
	}
}

// SourceAmazonSellerPartnerUpdateAWSEnvironment - Select the AWS Environment.
type SourceAmazonSellerPartnerUpdateAWSEnvironment string

const (
	SourceAmazonSellerPartnerUpdateAWSEnvironmentProduction SourceAmazonSellerPartnerUpdateAWSEnvironment = "PRODUCTION"
	SourceAmazonSellerPartnerUpdateAWSEnvironmentSandbox    SourceAmazonSellerPartnerUpdateAWSEnvironment = "SANDBOX"
)

func (e SourceAmazonSellerPartnerUpdateAWSEnvironment) ToPointer() *SourceAmazonSellerPartnerUpdateAWSEnvironment {
	return &e
}

func (e *SourceAmazonSellerPartnerUpdateAWSEnvironment) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRODUCTION":
		fallthrough
	case "SANDBOX":
		*e = SourceAmazonSellerPartnerUpdateAWSEnvironment(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAmazonSellerPartnerUpdateAWSEnvironment: %v", v)
	}
}

// SourceAmazonSellerPartnerUpdateAWSRegion - Select the AWS Region.
type SourceAmazonSellerPartnerUpdateAWSRegion string

const (
	SourceAmazonSellerPartnerUpdateAWSRegionAe SourceAmazonSellerPartnerUpdateAWSRegion = "AE"
	SourceAmazonSellerPartnerUpdateAWSRegionAu SourceAmazonSellerPartnerUpdateAWSRegion = "AU"
	SourceAmazonSellerPartnerUpdateAWSRegionBe SourceAmazonSellerPartnerUpdateAWSRegion = "BE"
	SourceAmazonSellerPartnerUpdateAWSRegionBr SourceAmazonSellerPartnerUpdateAWSRegion = "BR"
	SourceAmazonSellerPartnerUpdateAWSRegionCa SourceAmazonSellerPartnerUpdateAWSRegion = "CA"
	SourceAmazonSellerPartnerUpdateAWSRegionDe SourceAmazonSellerPartnerUpdateAWSRegion = "DE"
	SourceAmazonSellerPartnerUpdateAWSRegionEg SourceAmazonSellerPartnerUpdateAWSRegion = "EG"
	SourceAmazonSellerPartnerUpdateAWSRegionEs SourceAmazonSellerPartnerUpdateAWSRegion = "ES"
	SourceAmazonSellerPartnerUpdateAWSRegionFr SourceAmazonSellerPartnerUpdateAWSRegion = "FR"
	SourceAmazonSellerPartnerUpdateAWSRegionGb SourceAmazonSellerPartnerUpdateAWSRegion = "GB"
	SourceAmazonSellerPartnerUpdateAWSRegionIn SourceAmazonSellerPartnerUpdateAWSRegion = "IN"
	SourceAmazonSellerPartnerUpdateAWSRegionIt SourceAmazonSellerPartnerUpdateAWSRegion = "IT"
	SourceAmazonSellerPartnerUpdateAWSRegionJp SourceAmazonSellerPartnerUpdateAWSRegion = "JP"
	SourceAmazonSellerPartnerUpdateAWSRegionMx SourceAmazonSellerPartnerUpdateAWSRegion = "MX"
	SourceAmazonSellerPartnerUpdateAWSRegionNl SourceAmazonSellerPartnerUpdateAWSRegion = "NL"
	SourceAmazonSellerPartnerUpdateAWSRegionPl SourceAmazonSellerPartnerUpdateAWSRegion = "PL"
	SourceAmazonSellerPartnerUpdateAWSRegionSa SourceAmazonSellerPartnerUpdateAWSRegion = "SA"
	SourceAmazonSellerPartnerUpdateAWSRegionSe SourceAmazonSellerPartnerUpdateAWSRegion = "SE"
	SourceAmazonSellerPartnerUpdateAWSRegionSg SourceAmazonSellerPartnerUpdateAWSRegion = "SG"
	SourceAmazonSellerPartnerUpdateAWSRegionTr SourceAmazonSellerPartnerUpdateAWSRegion = "TR"
	SourceAmazonSellerPartnerUpdateAWSRegionUk SourceAmazonSellerPartnerUpdateAWSRegion = "UK"
	SourceAmazonSellerPartnerUpdateAWSRegionUs SourceAmazonSellerPartnerUpdateAWSRegion = "US"
)

func (e SourceAmazonSellerPartnerUpdateAWSRegion) ToPointer() *SourceAmazonSellerPartnerUpdateAWSRegion {
	return &e
}

func (e *SourceAmazonSellerPartnerUpdateAWSRegion) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AE":
		fallthrough
	case "AU":
		fallthrough
	case "BE":
		fallthrough
	case "BR":
		fallthrough
	case "CA":
		fallthrough
	case "DE":
		fallthrough
	case "EG":
		fallthrough
	case "ES":
		fallthrough
	case "FR":
		fallthrough
	case "GB":
		fallthrough
	case "IN":
		fallthrough
	case "IT":
		fallthrough
	case "JP":
		fallthrough
	case "MX":
		fallthrough
	case "NL":
		fallthrough
	case "PL":
		fallthrough
	case "SA":
		fallthrough
	case "SE":
		fallthrough
	case "SG":
		fallthrough
	case "TR":
		fallthrough
	case "UK":
		fallthrough
	case "US":
		*e = SourceAmazonSellerPartnerUpdateAWSRegion(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAmazonSellerPartnerUpdateAWSRegion: %v", v)
	}
}

type SourceAmazonSellerPartnerUpdate struct {
	// Additional information to configure report options. This varies by report type, not every report implement this kind of feature. Must be a valid json string.
	AdvancedStreamOptions *string                                  `json:"advanced_stream_options,omitempty"`
	AuthType              *SourceAmazonSellerPartnerUpdateAuthType `json:"auth_type,omitempty"`
	// Specifies the AWS access key used as part of the credentials to authenticate the user.
	AwsAccessKey *string `json:"aws_access_key,omitempty"`
	// Select the AWS Environment.
	AwsEnvironment SourceAmazonSellerPartnerUpdateAWSEnvironment `json:"aws_environment"`
	// Specifies the AWS secret key used as part of the credentials to authenticate the user.
	AwsSecretKey *string `json:"aws_secret_key,omitempty"`
	// Your Login with Amazon Client ID.
	LwaAppID string `json:"lwa_app_id"`
	// Your Login with Amazon Client Secret.
	LwaClientSecret string `json:"lwa_client_secret"`
	// Sometimes report can take up to 30 minutes to generate. This will set the limit for how long to wait for a successful report.
	MaxWaitSeconds *int64 `json:"max_wait_seconds,omitempty"`
	// Will be used for stream slicing for initial full_refresh sync when no updated state is present for reports that support sliced incremental sync.
	PeriodInDays *int64 `json:"period_in_days,omitempty"`
	// The Refresh Token obtained via OAuth flow authorization.
	RefreshToken string `json:"refresh_token"`
	// Select the AWS Region.
	Region SourceAmazonSellerPartnerUpdateAWSRegion `json:"region"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.
	ReplicationEndDate *string `json:"replication_end_date,omitempty"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	ReplicationStartDate string `json:"replication_start_date"`
	// Additional information passed to reports. This varies by report type. Must be a valid json string.
	ReportOptions *string `json:"report_options,omitempty"`
	// Specifies the Amazon Resource Name (ARN) of an IAM role that you want to use to perform operations requested using this profile. (Needs permission to 'Assume Role' STS).
	RoleArn *string `json:"role_arn,omitempty"`
}
