// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type SourceTempoTempo string

const (
	SourceTempoTempoTempo SourceTempoTempo = "tempo"
)

func (e SourceTempoTempo) ToPointer() *SourceTempoTempo {
	return &e
}

func (e *SourceTempoTempo) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "tempo":
		*e = SourceTempoTempo(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceTempoTempo: %v", v)
	}
}

type SourceTempo struct {
	// Tempo API Token. Go to Tempo>Settings, scroll down to Data Access and select API integration.
	APIToken   string           `json:"api_token"`
	sourceType SourceTempoTempo `const:"tempo" json:"sourceType"`
}

func (s SourceTempo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceTempo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceTempo) GetAPIToken() string {
	if o == nil {
		return ""
	}
	return o.APIToken
}

func (o *SourceTempo) GetSourceType() SourceTempoTempo {
	return SourceTempoTempoTempo
}
