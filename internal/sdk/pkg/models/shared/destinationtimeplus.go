// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DestinationTimeplusTimeplus string

const (
	DestinationTimeplusTimeplusTimeplus DestinationTimeplusTimeplus = "timeplus"
)

func (e DestinationTimeplusTimeplus) ToPointer() *DestinationTimeplusTimeplus {
	return &e
}

func (e *DestinationTimeplusTimeplus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "timeplus":
		*e = DestinationTimeplusTimeplus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationTimeplusTimeplus: %v", v)
	}
}

type DestinationTimeplus struct {
	// Personal API key
	Apikey          string                      `json:"apikey"`
	DestinationType DestinationTimeplusTimeplus `json:"destinationType"`
	// Timeplus workspace endpoint
	Endpoint string `json:"endpoint"`
}
