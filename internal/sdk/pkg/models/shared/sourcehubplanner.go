// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
)

type SourceHubplannerHubplanner string

const (
	SourceHubplannerHubplannerHubplanner SourceHubplannerHubplanner = "hubplanner"
)

func (e SourceHubplannerHubplanner) ToPointer() *SourceHubplannerHubplanner {
	return &e
}

func (e *SourceHubplannerHubplanner) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "hubplanner":
		*e = SourceHubplannerHubplanner(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceHubplannerHubplanner: %v", v)
	}
}

type SourceHubplanner struct {
	// Hubplanner API key. See https://github.com/hubplanner/API#authentication for more details.
	APIKey     string                     `json:"api_key"`
	sourceType SourceHubplannerHubplanner `const:"hubplanner" json:"sourceType"`
}

func (s SourceHubplanner) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceHubplanner) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceHubplanner) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceHubplanner) GetSourceType() SourceHubplannerHubplanner {
	return SourceHubplannerHubplannerHubplanner
}
