// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceLemlistLemlist string

const (
	SourceLemlistLemlistLemlist SourceLemlistLemlist = "lemlist"
)

func (e SourceLemlistLemlist) ToPointer() *SourceLemlistLemlist {
	return &e
}

func (e *SourceLemlistLemlist) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "lemlist":
		*e = SourceLemlistLemlist(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceLemlistLemlist: %v", v)
	}
}

type SourceLemlist struct {
	// Lemlist API key,
	APIKey     string               `json:"api_key"`
	SourceType SourceLemlistLemlist `json:"sourceType"`
}
