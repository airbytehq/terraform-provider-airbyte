// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"airbyte/internal/sdk/pkg/utils"
	"encoding/json"
	"fmt"
	"time"
)

type SourceKlaviyoKlaviyo string

const (
	SourceKlaviyoKlaviyoKlaviyo SourceKlaviyoKlaviyo = "klaviyo"
)

func (e SourceKlaviyoKlaviyo) ToPointer() *SourceKlaviyoKlaviyo {
	return &e
}

func (e *SourceKlaviyoKlaviyo) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "klaviyo":
		*e = SourceKlaviyoKlaviyo(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceKlaviyoKlaviyo: %v", v)
	}
}

type SourceKlaviyo struct {
	// Klaviyo API Key. See our <a href="https://docs.airbyte.com/integrations/sources/klaviyo">docs</a> if you need help finding this key.
	APIKey     string               `json:"api_key"`
	sourceType SourceKlaviyoKlaviyo `const:"klaviyo" json:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate time.Time `json:"start_date"`
}

func (s SourceKlaviyo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceKlaviyo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceKlaviyo) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceKlaviyo) GetSourceType() SourceKlaviyoKlaviyo {
	return SourceKlaviyoKlaviyoKlaviyo
}

func (o *SourceKlaviyo) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}
