// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type SourcePingdomUpdateResolution string

const (
	SourcePingdomUpdateResolutionHour SourcePingdomUpdateResolution = "hour"
	SourcePingdomUpdateResolutionDay  SourcePingdomUpdateResolution = "day"
	SourcePingdomUpdateResolutionWeek SourcePingdomUpdateResolution = "week"
)

func (e SourcePingdomUpdateResolution) ToPointer() *SourcePingdomUpdateResolution {
	return &e
}
func (e *SourcePingdomUpdateResolution) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "hour":
		fallthrough
	case "day":
		fallthrough
	case "week":
		*e = SourcePingdomUpdateResolution(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourcePingdomUpdateResolution: %v", v)
	}
}

type SourcePingdomUpdate struct {
	Probes     *string                        `json:"probes,omitempty"`
	APIKey     string                         `json:"api_key"`
	Resolution *SourcePingdomUpdateResolution `default:"hour" json:"resolution"`
	StartDate  time.Time                      `json:"start_date"`
}

func (s SourcePingdomUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourcePingdomUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourcePingdomUpdate) GetProbes() *string {
	if o == nil {
		return nil
	}
	return o.Probes
}

func (o *SourcePingdomUpdate) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourcePingdomUpdate) GetResolution() *SourcePingdomUpdateResolution {
	if o == nil {
		return nil
	}
	return o.Resolution
}

func (o *SourcePingdomUpdate) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}
