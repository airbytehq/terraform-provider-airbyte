// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type Codefresh string

const (
	CodefreshCodefresh Codefresh = "codefresh"
)

func (e Codefresh) ToPointer() *Codefresh {
	return &e
}
func (e *Codefresh) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "codefresh":
		*e = Codefresh(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Codefresh: %v", v)
	}
}

type SourceCodefresh struct {
	APIKey            string    `json:"api_key"`
	AccountID         string    `json:"account_id"`
	ReportGranularity *string   `json:"report_granularity,omitempty"`
	ReportDateRange   []any     `json:"report_date_range,omitempty"`
	StartDate         time.Time `json:"start_date"`
	sourceType        Codefresh `const:"codefresh" json:"sourceType"`
}

func (s SourceCodefresh) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceCodefresh) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceCodefresh) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceCodefresh) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *SourceCodefresh) GetReportGranularity() *string {
	if o == nil {
		return nil
	}
	return o.ReportGranularity
}

func (o *SourceCodefresh) GetReportDateRange() []any {
	if o == nil {
		return nil
	}
	return o.ReportDateRange
}

func (o *SourceCodefresh) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}

func (o *SourceCodefresh) GetSourceType() Codefresh {
	return CodefreshCodefresh
}
