// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

// SourceZohoExpenseUpdateDataCenter - The domain suffix for the Zoho Expense API based on your data center location (e.g., 'com', 'eu', 'in', etc.)
type SourceZohoExpenseUpdateDataCenter string

const (
	SourceZohoExpenseUpdateDataCenterCom   SourceZohoExpenseUpdateDataCenter = "com"
	SourceZohoExpenseUpdateDataCenterIn    SourceZohoExpenseUpdateDataCenter = "in"
	SourceZohoExpenseUpdateDataCenterJp    SourceZohoExpenseUpdateDataCenter = "jp"
	SourceZohoExpenseUpdateDataCenterCa    SourceZohoExpenseUpdateDataCenter = "ca"
	SourceZohoExpenseUpdateDataCenterComCn SourceZohoExpenseUpdateDataCenter = "com.cn"
	SourceZohoExpenseUpdateDataCenterSa    SourceZohoExpenseUpdateDataCenter = "sa"
	SourceZohoExpenseUpdateDataCenterComAu SourceZohoExpenseUpdateDataCenter = "com.au"
	SourceZohoExpenseUpdateDataCenterEu    SourceZohoExpenseUpdateDataCenter = "eu"
)

func (e SourceZohoExpenseUpdateDataCenter) ToPointer() *SourceZohoExpenseUpdateDataCenter {
	return &e
}
func (e *SourceZohoExpenseUpdateDataCenter) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "com":
		fallthrough
	case "in":
		fallthrough
	case "jp":
		fallthrough
	case "ca":
		fallthrough
	case "com.cn":
		fallthrough
	case "sa":
		fallthrough
	case "com.au":
		fallthrough
	case "eu":
		*e = SourceZohoExpenseUpdateDataCenter(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceZohoExpenseUpdateDataCenter: %v", v)
	}
}

type SourceZohoExpenseUpdate struct {
	ClientID     string `json:"client_id"`
	ClientSecret string `json:"client_secret"`
	// The domain suffix for the Zoho Expense API based on your data center location (e.g., 'com', 'eu', 'in', etc.)
	DataCenter   *SourceZohoExpenseUpdateDataCenter `default:"com" json:"data_center"`
	RefreshToken string                             `json:"refresh_token"`
}

func (s SourceZohoExpenseUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceZohoExpenseUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceZohoExpenseUpdate) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *SourceZohoExpenseUpdate) GetClientSecret() string {
	if o == nil {
		return ""
	}
	return o.ClientSecret
}

func (o *SourceZohoExpenseUpdate) GetDataCenter() *SourceZohoExpenseUpdateDataCenter {
	if o == nil {
		return nil
	}
	return o.DataCenter
}

func (o *SourceZohoExpenseUpdate) GetRefreshToken() string {
	if o == nil {
		return ""
	}
	return o.RefreshToken
}
