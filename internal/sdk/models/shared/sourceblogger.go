// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Blogger string

const (
	BloggerBlogger Blogger = "blogger"
)

func (e Blogger) ToPointer() *Blogger {
	return &e
}
func (e *Blogger) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "blogger":
		*e = Blogger(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Blogger: %v", v)
	}
}

type SourceBlogger struct {
	ClientID           string  `json:"client_id"`
	ClientSecret       string  `json:"client_secret"`
	ClientRefreshToken string  `json:"client_refresh_token"`
	sourceType         Blogger `const:"blogger" json:"sourceType"`
}

func (s SourceBlogger) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceBlogger) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceBlogger) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *SourceBlogger) GetClientSecret() string {
	if o == nil {
		return ""
	}
	return o.ClientSecret
}

func (o *SourceBlogger) GetClientRefreshToken() string {
	if o == nil {
		return ""
	}
	return o.ClientRefreshToken
}

func (o *SourceBlogger) GetSourceType() Blogger {
	return BloggerBlogger
}
