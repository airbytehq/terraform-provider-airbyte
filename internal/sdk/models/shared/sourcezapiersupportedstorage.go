// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type ZapierSupportedStorage string

const (
	ZapierSupportedStorageZapierSupportedStorage ZapierSupportedStorage = "zapier-supported-storage"
)

func (e ZapierSupportedStorage) ToPointer() *ZapierSupportedStorage {
	return &e
}
func (e *ZapierSupportedStorage) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "zapier-supported-storage":
		*e = ZapierSupportedStorage(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ZapierSupportedStorage: %v", v)
	}
}

type SourceZapierSupportedStorage struct {
	// Secret key supplied by zapier
	Secret     string                 `json:"secret"`
	sourceType ZapierSupportedStorage `const:"zapier-supported-storage" json:"sourceType"`
}

func (s SourceZapierSupportedStorage) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceZapierSupportedStorage) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceZapierSupportedStorage) GetSecret() string {
	if o == nil {
		return ""
	}
	return o.Secret
}

func (o *SourceZapierSupportedStorage) GetSourceType() ZapierSupportedStorage {
	return ZapierSupportedStorageZapierSupportedStorage
}
