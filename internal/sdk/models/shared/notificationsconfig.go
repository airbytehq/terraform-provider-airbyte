// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// NotificationsConfig - Configures workspace notifications.
type NotificationsConfig struct {
	// Configures a notification.
	Failure *NotificationConfig `json:"failure,omitempty"`
	// Configures a notification.
	Success *NotificationConfig `json:"success,omitempty"`
	// Configures a notification.
	ConnectionUpdate *NotificationConfig `json:"connectionUpdate,omitempty"`
	// Configures a notification.
	ConnectionUpdateActionRequired *NotificationConfig `json:"connectionUpdateActionRequired,omitempty"`
	// Configures a notification.
	SyncDisabled *NotificationConfig `json:"syncDisabled,omitempty"`
	// Configures a notification.
	SyncDisabledWarning *NotificationConfig `json:"syncDisabledWarning,omitempty"`
}

func (o *NotificationsConfig) GetFailure() *NotificationConfig {
	if o == nil {
		return nil
	}
	return o.Failure
}

func (o *NotificationsConfig) GetSuccess() *NotificationConfig {
	if o == nil {
		return nil
	}
	return o.Success
}

func (o *NotificationsConfig) GetConnectionUpdate() *NotificationConfig {
	if o == nil {
		return nil
	}
	return o.ConnectionUpdate
}

func (o *NotificationsConfig) GetConnectionUpdateActionRequired() *NotificationConfig {
	if o == nil {
		return nil
	}
	return o.ConnectionUpdateActionRequired
}

func (o *NotificationsConfig) GetSyncDisabled() *NotificationConfig {
	if o == nil {
		return nil
	}
	return o.SyncDisabled
}

func (o *NotificationsConfig) GetSyncDisabledWarning() *NotificationConfig {
	if o == nil {
		return nil
	}
	return o.SyncDisabledWarning
}
