// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

// ValidAdStatuses - An enumeration.
type ValidAdStatuses string

const (
	ValidAdStatusesActive             ValidAdStatuses = "ACTIVE"
	ValidAdStatusesAdsetPaused        ValidAdStatuses = "ADSET_PAUSED"
	ValidAdStatusesArchived           ValidAdStatuses = "ARCHIVED"
	ValidAdStatusesCampaignPaused     ValidAdStatuses = "CAMPAIGN_PAUSED"
	ValidAdStatusesDeleted            ValidAdStatuses = "DELETED"
	ValidAdStatusesDisapproved        ValidAdStatuses = "DISAPPROVED"
	ValidAdStatusesInProcess          ValidAdStatuses = "IN_PROCESS"
	ValidAdStatusesPaused             ValidAdStatuses = "PAUSED"
	ValidAdStatusesPendingBillingInfo ValidAdStatuses = "PENDING_BILLING_INFO"
	ValidAdStatusesPendingReview      ValidAdStatuses = "PENDING_REVIEW"
	ValidAdStatusesPreapproved        ValidAdStatuses = "PREAPPROVED"
	ValidAdStatusesWithIssues         ValidAdStatuses = "WITH_ISSUES"
)

func (e ValidAdStatuses) ToPointer() *ValidAdStatuses {
	return &e
}
func (e *ValidAdStatuses) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "ADSET_PAUSED":
		fallthrough
	case "ARCHIVED":
		fallthrough
	case "CAMPAIGN_PAUSED":
		fallthrough
	case "DELETED":
		fallthrough
	case "DISAPPROVED":
		fallthrough
	case "IN_PROCESS":
		fallthrough
	case "PAUSED":
		fallthrough
	case "PENDING_BILLING_INFO":
		fallthrough
	case "PENDING_REVIEW":
		fallthrough
	case "PREAPPROVED":
		fallthrough
	case "WITH_ISSUES":
		*e = ValidAdStatuses(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidAdStatuses: %v", v)
	}
}

// ValidAdSetStatuses - An enumeration.
type ValidAdSetStatuses string

const (
	ValidAdSetStatusesActive         ValidAdSetStatuses = "ACTIVE"
	ValidAdSetStatusesArchived       ValidAdSetStatuses = "ARCHIVED"
	ValidAdSetStatusesCampaignPaused ValidAdSetStatuses = "CAMPAIGN_PAUSED"
	ValidAdSetStatusesDeleted        ValidAdSetStatuses = "DELETED"
	ValidAdSetStatusesInProcess      ValidAdSetStatuses = "IN_PROCESS"
	ValidAdSetStatusesPaused         ValidAdSetStatuses = "PAUSED"
	ValidAdSetStatusesWithIssues     ValidAdSetStatuses = "WITH_ISSUES"
)

func (e ValidAdSetStatuses) ToPointer() *ValidAdSetStatuses {
	return &e
}
func (e *ValidAdSetStatuses) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "ARCHIVED":
		fallthrough
	case "CAMPAIGN_PAUSED":
		fallthrough
	case "DELETED":
		fallthrough
	case "IN_PROCESS":
		fallthrough
	case "PAUSED":
		fallthrough
	case "WITH_ISSUES":
		*e = ValidAdSetStatuses(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidAdSetStatuses: %v", v)
	}
}

// ValidCampaignStatuses - An enumeration.
type ValidCampaignStatuses string

const (
	ValidCampaignStatusesActive     ValidCampaignStatuses = "ACTIVE"
	ValidCampaignStatusesArchived   ValidCampaignStatuses = "ARCHIVED"
	ValidCampaignStatusesDeleted    ValidCampaignStatuses = "DELETED"
	ValidCampaignStatusesInProcess  ValidCampaignStatuses = "IN_PROCESS"
	ValidCampaignStatusesPaused     ValidCampaignStatuses = "PAUSED"
	ValidCampaignStatusesWithIssues ValidCampaignStatuses = "WITH_ISSUES"
)

func (e ValidCampaignStatuses) ToPointer() *ValidCampaignStatuses {
	return &e
}
func (e *ValidCampaignStatuses) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "ARCHIVED":
		fallthrough
	case "DELETED":
		fallthrough
	case "IN_PROCESS":
		fallthrough
	case "PAUSED":
		fallthrough
	case "WITH_ISSUES":
		*e = ValidCampaignStatuses(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidCampaignStatuses: %v", v)
	}
}

type SourceFacebookMarketingUpdateSchemasAuthType string

const (
	SourceFacebookMarketingUpdateSchemasAuthTypeService SourceFacebookMarketingUpdateSchemasAuthType = "Service"
)

func (e SourceFacebookMarketingUpdateSchemasAuthType) ToPointer() *SourceFacebookMarketingUpdateSchemasAuthType {
	return &e
}
func (e *SourceFacebookMarketingUpdateSchemasAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Service":
		*e = SourceFacebookMarketingUpdateSchemasAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingUpdateSchemasAuthType: %v", v)
	}
}

type ServiceAccountKeyAuthentication struct {
	// The value of the generated access token. From your App’s Dashboard, click on "Marketing API" then "Tools". Select permissions <b>ads_management, ads_read, read_insights, business_management</b>. Then click on "Get token". See the <a href="https://docs.airbyte.com/integrations/sources/facebook-marketing">docs</a> for more information.
	AccessToken string                                        `json:"access_token"`
	authType    *SourceFacebookMarketingUpdateSchemasAuthType `const:"Service" json:"auth_type"`
}

func (s ServiceAccountKeyAuthentication) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *ServiceAccountKeyAuthentication) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ServiceAccountKeyAuthentication) GetAccessToken() string {
	if o == nil {
		return ""
	}
	return o.AccessToken
}

func (o *ServiceAccountKeyAuthentication) GetAuthType() *SourceFacebookMarketingUpdateSchemasAuthType {
	return SourceFacebookMarketingUpdateSchemasAuthTypeService.ToPointer()
}

type SourceFacebookMarketingUpdateAuthType string

const (
	SourceFacebookMarketingUpdateAuthTypeClient SourceFacebookMarketingUpdateAuthType = "Client"
)

func (e SourceFacebookMarketingUpdateAuthType) ToPointer() *SourceFacebookMarketingUpdateAuthType {
	return &e
}
func (e *SourceFacebookMarketingUpdateAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Client":
		*e = SourceFacebookMarketingUpdateAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingUpdateAuthType: %v", v)
	}
}

type AuthenticateViaFacebookMarketingOauth struct {
	// The value of the generated access token. From your App’s Dashboard, click on "Marketing API" then "Tools". Select permissions <b>ads_management, ads_read, read_insights, business_management</b>. Then click on "Get token". See the <a href="https://docs.airbyte.com/integrations/sources/facebook-marketing">docs</a> for more information.
	AccessToken *string                                `json:"access_token,omitempty"`
	authType    *SourceFacebookMarketingUpdateAuthType `const:"Client" json:"auth_type"`
	// Client ID for the Facebook Marketing API
	ClientID string `json:"client_id"`
	// Client Secret for the Facebook Marketing API
	ClientSecret string `json:"client_secret"`
}

func (a AuthenticateViaFacebookMarketingOauth) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AuthenticateViaFacebookMarketingOauth) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *AuthenticateViaFacebookMarketingOauth) GetAccessToken() *string {
	if o == nil {
		return nil
	}
	return o.AccessToken
}

func (o *AuthenticateViaFacebookMarketingOauth) GetAuthType() *SourceFacebookMarketingUpdateAuthType {
	return SourceFacebookMarketingUpdateAuthTypeClient.ToPointer()
}

func (o *AuthenticateViaFacebookMarketingOauth) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *AuthenticateViaFacebookMarketingOauth) GetClientSecret() string {
	if o == nil {
		return ""
	}
	return o.ClientSecret
}

type SourceFacebookMarketingUpdateAuthenticationType string

const (
	SourceFacebookMarketingUpdateAuthenticationTypeAuthenticateViaFacebookMarketingOauth SourceFacebookMarketingUpdateAuthenticationType = "Authenticate via Facebook Marketing (Oauth)"
	SourceFacebookMarketingUpdateAuthenticationTypeServiceAccountKeyAuthentication       SourceFacebookMarketingUpdateAuthenticationType = "Service Account Key Authentication"
)

// SourceFacebookMarketingUpdateAuthentication - Credentials for connecting to the Facebook Marketing API
type SourceFacebookMarketingUpdateAuthentication struct {
	AuthenticateViaFacebookMarketingOauth *AuthenticateViaFacebookMarketingOauth
	ServiceAccountKeyAuthentication       *ServiceAccountKeyAuthentication

	Type SourceFacebookMarketingUpdateAuthenticationType
}

func CreateSourceFacebookMarketingUpdateAuthenticationAuthenticateViaFacebookMarketingOauth(authenticateViaFacebookMarketingOauth AuthenticateViaFacebookMarketingOauth) SourceFacebookMarketingUpdateAuthentication {
	typ := SourceFacebookMarketingUpdateAuthenticationTypeAuthenticateViaFacebookMarketingOauth

	return SourceFacebookMarketingUpdateAuthentication{
		AuthenticateViaFacebookMarketingOauth: &authenticateViaFacebookMarketingOauth,
		Type:                                  typ,
	}
}

func CreateSourceFacebookMarketingUpdateAuthenticationServiceAccountKeyAuthentication(serviceAccountKeyAuthentication ServiceAccountKeyAuthentication) SourceFacebookMarketingUpdateAuthentication {
	typ := SourceFacebookMarketingUpdateAuthenticationTypeServiceAccountKeyAuthentication

	return SourceFacebookMarketingUpdateAuthentication{
		ServiceAccountKeyAuthentication: &serviceAccountKeyAuthentication,
		Type:                            typ,
	}
}

func (u *SourceFacebookMarketingUpdateAuthentication) UnmarshalJSON(data []byte) error {

	var serviceAccountKeyAuthentication ServiceAccountKeyAuthentication = ServiceAccountKeyAuthentication{}
	if err := utils.UnmarshalJSON(data, &serviceAccountKeyAuthentication, "", true, true); err == nil {
		u.ServiceAccountKeyAuthentication = &serviceAccountKeyAuthentication
		u.Type = SourceFacebookMarketingUpdateAuthenticationTypeServiceAccountKeyAuthentication
		return nil
	}

	var authenticateViaFacebookMarketingOauth AuthenticateViaFacebookMarketingOauth = AuthenticateViaFacebookMarketingOauth{}
	if err := utils.UnmarshalJSON(data, &authenticateViaFacebookMarketingOauth, "", true, true); err == nil {
		u.AuthenticateViaFacebookMarketingOauth = &authenticateViaFacebookMarketingOauth
		u.Type = SourceFacebookMarketingUpdateAuthenticationTypeAuthenticateViaFacebookMarketingOauth
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for SourceFacebookMarketingUpdateAuthentication", string(data))
}

func (u SourceFacebookMarketingUpdateAuthentication) MarshalJSON() ([]byte, error) {
	if u.AuthenticateViaFacebookMarketingOauth != nil {
		return utils.MarshalJSON(u.AuthenticateViaFacebookMarketingOauth, "", true)
	}

	if u.ServiceAccountKeyAuthentication != nil {
		return utils.MarshalJSON(u.ServiceAccountKeyAuthentication, "", true)
	}

	return nil, errors.New("could not marshal union type SourceFacebookMarketingUpdateAuthentication: all fields are null")
}

// ValidActionBreakdowns - An enumeration.
type ValidActionBreakdowns string

const (
	ValidActionBreakdownsActionCanvasComponentName ValidActionBreakdowns = "action_canvas_component_name"
	ValidActionBreakdownsActionCarouselCardID      ValidActionBreakdowns = "action_carousel_card_id"
	ValidActionBreakdownsActionCarouselCardName    ValidActionBreakdowns = "action_carousel_card_name"
	ValidActionBreakdownsActionDestination         ValidActionBreakdowns = "action_destination"
	ValidActionBreakdownsActionDevice              ValidActionBreakdowns = "action_device"
	ValidActionBreakdownsActionReaction            ValidActionBreakdowns = "action_reaction"
	ValidActionBreakdownsActionTargetID            ValidActionBreakdowns = "action_target_id"
	ValidActionBreakdownsActionType                ValidActionBreakdowns = "action_type"
	ValidActionBreakdownsActionVideoSound          ValidActionBreakdowns = "action_video_sound"
	ValidActionBreakdownsActionVideoType           ValidActionBreakdowns = "action_video_type"
	ValidActionBreakdownsStandardEventContentType  ValidActionBreakdowns = "standard_event_content_type"
)

func (e ValidActionBreakdowns) ToPointer() *ValidActionBreakdowns {
	return &e
}
func (e *ValidActionBreakdowns) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "action_canvas_component_name":
		fallthrough
	case "action_carousel_card_id":
		fallthrough
	case "action_carousel_card_name":
		fallthrough
	case "action_destination":
		fallthrough
	case "action_device":
		fallthrough
	case "action_reaction":
		fallthrough
	case "action_target_id":
		fallthrough
	case "action_type":
		fallthrough
	case "action_video_sound":
		fallthrough
	case "action_video_type":
		fallthrough
	case "standard_event_content_type":
		*e = ValidActionBreakdowns(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidActionBreakdowns: %v", v)
	}
}

// SourceFacebookMarketingUpdateActionReportTime - Determines the report time of action stats. For example, if a person saw the ad on Jan 1st but converted on Jan 2nd, when you query the API with action_report_time=impression, you see a conversion on Jan 1st. When you query the API with action_report_time=conversion, you see a conversion on Jan 2nd.
type SourceFacebookMarketingUpdateActionReportTime string

const (
	SourceFacebookMarketingUpdateActionReportTimeConversion SourceFacebookMarketingUpdateActionReportTime = "conversion"
	SourceFacebookMarketingUpdateActionReportTimeImpression SourceFacebookMarketingUpdateActionReportTime = "impression"
	SourceFacebookMarketingUpdateActionReportTimeMixed      SourceFacebookMarketingUpdateActionReportTime = "mixed"
)

func (e SourceFacebookMarketingUpdateActionReportTime) ToPointer() *SourceFacebookMarketingUpdateActionReportTime {
	return &e
}
func (e *SourceFacebookMarketingUpdateActionReportTime) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "conversion":
		fallthrough
	case "impression":
		fallthrough
	case "mixed":
		*e = SourceFacebookMarketingUpdateActionReportTime(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingUpdateActionReportTime: %v", v)
	}
}

// ValidBreakdowns - An enumeration.
type ValidBreakdowns string

const (
	ValidBreakdownsAdFormatAsset                             ValidBreakdowns = "ad_format_asset"
	ValidBreakdownsAge                                       ValidBreakdowns = "age"
	ValidBreakdownsAppID                                     ValidBreakdowns = "app_id"
	ValidBreakdownsBodyAsset                                 ValidBreakdowns = "body_asset"
	ValidBreakdownsCallToActionAsset                         ValidBreakdowns = "call_to_action_asset"
	ValidBreakdownsCoarseConversionValue                     ValidBreakdowns = "coarse_conversion_value"
	ValidBreakdownsCountry                                   ValidBreakdowns = "country"
	ValidBreakdownsDescriptionAsset                          ValidBreakdowns = "description_asset"
	ValidBreakdownsDevicePlatform                            ValidBreakdowns = "device_platform"
	ValidBreakdownsDma                                       ValidBreakdowns = "dma"
	ValidBreakdownsFidelityType                              ValidBreakdowns = "fidelity_type"
	ValidBreakdownsFrequencyValue                            ValidBreakdowns = "frequency_value"
	ValidBreakdownsGender                                    ValidBreakdowns = "gender"
	ValidBreakdownsHourlyStatsAggregatedByAdvertiserTimeZone ValidBreakdowns = "hourly_stats_aggregated_by_advertiser_time_zone"
	ValidBreakdownsHourlyStatsAggregatedByAudienceTimeZone   ValidBreakdowns = "hourly_stats_aggregated_by_audience_time_zone"
	ValidBreakdownsHsid                                      ValidBreakdowns = "hsid"
	ValidBreakdownsImageAsset                                ValidBreakdowns = "image_asset"
	ValidBreakdownsImpressionDevice                          ValidBreakdowns = "impression_device"
	ValidBreakdownsIsConversionIDModeled                     ValidBreakdowns = "is_conversion_id_modeled"
	ValidBreakdownsLandingDestination                        ValidBreakdowns = "landing_destination"
	ValidBreakdownsLinkURLAsset                              ValidBreakdowns = "link_url_asset"
	ValidBreakdownsMarketingMessagesBtnName                  ValidBreakdowns = "marketing_messages_btn_name"
	ValidBreakdownsMdsaLandingDestination                    ValidBreakdowns = "mdsa_landing_destination"
	ValidBreakdownsMediaAssetURL                             ValidBreakdowns = "media_asset_url"
	ValidBreakdownsMediaCreator                              ValidBreakdowns = "media_creator"
	ValidBreakdownsMediaDestinationURL                       ValidBreakdowns = "media_destination_url"
	ValidBreakdownsMediaFormat                               ValidBreakdowns = "media_format"
	ValidBreakdownsMediaOriginURL                            ValidBreakdowns = "media_origin_url"
	ValidBreakdownsMediaTextContent                          ValidBreakdowns = "media_text_content"
	ValidBreakdownsMmm                                       ValidBreakdowns = "mmm"
	ValidBreakdownsPlacePageID                               ValidBreakdowns = "place_page_id"
	ValidBreakdownsPlatformPosition                          ValidBreakdowns = "platform_position"
	ValidBreakdownsPostbackSequenceIndex                     ValidBreakdowns = "postback_sequence_index"
	ValidBreakdownsProductID                                 ValidBreakdowns = "product_id"
	ValidBreakdownsPublisherPlatform                         ValidBreakdowns = "publisher_platform"
	ValidBreakdownsRedownload                                ValidBreakdowns = "redownload"
	ValidBreakdownsRegion                                    ValidBreakdowns = "region"
	ValidBreakdownsSkanCampaignID                            ValidBreakdowns = "skan_campaign_id"
	ValidBreakdownsSkanConversionID                          ValidBreakdowns = "skan_conversion_id"
	ValidBreakdownsSkanVersion                               ValidBreakdowns = "skan_version"
	ValidBreakdownsStandardEventContentType                  ValidBreakdowns = "standard_event_content_type"
	ValidBreakdownsTitleAsset                                ValidBreakdowns = "title_asset"
	ValidBreakdownsVideoAsset                                ValidBreakdowns = "video_asset"
)

func (e ValidBreakdowns) ToPointer() *ValidBreakdowns {
	return &e
}
func (e *ValidBreakdowns) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ad_format_asset":
		fallthrough
	case "age":
		fallthrough
	case "app_id":
		fallthrough
	case "body_asset":
		fallthrough
	case "call_to_action_asset":
		fallthrough
	case "coarse_conversion_value":
		fallthrough
	case "country":
		fallthrough
	case "description_asset":
		fallthrough
	case "device_platform":
		fallthrough
	case "dma":
		fallthrough
	case "fidelity_type":
		fallthrough
	case "frequency_value":
		fallthrough
	case "gender":
		fallthrough
	case "hourly_stats_aggregated_by_advertiser_time_zone":
		fallthrough
	case "hourly_stats_aggregated_by_audience_time_zone":
		fallthrough
	case "hsid":
		fallthrough
	case "image_asset":
		fallthrough
	case "impression_device":
		fallthrough
	case "is_conversion_id_modeled":
		fallthrough
	case "landing_destination":
		fallthrough
	case "link_url_asset":
		fallthrough
	case "marketing_messages_btn_name":
		fallthrough
	case "mdsa_landing_destination":
		fallthrough
	case "media_asset_url":
		fallthrough
	case "media_creator":
		fallthrough
	case "media_destination_url":
		fallthrough
	case "media_format":
		fallthrough
	case "media_origin_url":
		fallthrough
	case "media_text_content":
		fallthrough
	case "mmm":
		fallthrough
	case "place_page_id":
		fallthrough
	case "platform_position":
		fallthrough
	case "postback_sequence_index":
		fallthrough
	case "product_id":
		fallthrough
	case "publisher_platform":
		fallthrough
	case "redownload":
		fallthrough
	case "region":
		fallthrough
	case "skan_campaign_id":
		fallthrough
	case "skan_conversion_id":
		fallthrough
	case "skan_version":
		fallthrough
	case "standard_event_content_type":
		fallthrough
	case "title_asset":
		fallthrough
	case "video_asset":
		*e = ValidBreakdowns(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidBreakdowns: %v", v)
	}
}

// SourceFacebookMarketingUpdateValidEnums - An enumeration.
type SourceFacebookMarketingUpdateValidEnums string

const (
	SourceFacebookMarketingUpdateValidEnumsAccountCurrency                         SourceFacebookMarketingUpdateValidEnums = "account_currency"
	SourceFacebookMarketingUpdateValidEnumsAccountID                               SourceFacebookMarketingUpdateValidEnums = "account_id"
	SourceFacebookMarketingUpdateValidEnumsAccountName                             SourceFacebookMarketingUpdateValidEnums = "account_name"
	SourceFacebookMarketingUpdateValidEnumsActionValues                            SourceFacebookMarketingUpdateValidEnums = "action_values"
	SourceFacebookMarketingUpdateValidEnumsActions                                 SourceFacebookMarketingUpdateValidEnums = "actions"
	SourceFacebookMarketingUpdateValidEnumsAdClickActions                          SourceFacebookMarketingUpdateValidEnums = "ad_click_actions"
	SourceFacebookMarketingUpdateValidEnumsAdID                                    SourceFacebookMarketingUpdateValidEnums = "ad_id"
	SourceFacebookMarketingUpdateValidEnumsAdImpressionActions                     SourceFacebookMarketingUpdateValidEnums = "ad_impression_actions"
	SourceFacebookMarketingUpdateValidEnumsAdName                                  SourceFacebookMarketingUpdateValidEnums = "ad_name"
	SourceFacebookMarketingUpdateValidEnumsAdsetEnd                                SourceFacebookMarketingUpdateValidEnums = "adset_end"
	SourceFacebookMarketingUpdateValidEnumsAdsetID                                 SourceFacebookMarketingUpdateValidEnums = "adset_id"
	SourceFacebookMarketingUpdateValidEnumsAdsetName                               SourceFacebookMarketingUpdateValidEnums = "adset_name"
	SourceFacebookMarketingUpdateValidEnumsAgeTargeting                            SourceFacebookMarketingUpdateValidEnums = "age_targeting"
	SourceFacebookMarketingUpdateValidEnumsAttributionSetting                      SourceFacebookMarketingUpdateValidEnums = "attribution_setting"
	SourceFacebookMarketingUpdateValidEnumsAuctionBid                              SourceFacebookMarketingUpdateValidEnums = "auction_bid"
	SourceFacebookMarketingUpdateValidEnumsAuctionCompetitiveness                  SourceFacebookMarketingUpdateValidEnums = "auction_competitiveness"
	SourceFacebookMarketingUpdateValidEnumsAuctionMaxCompetitorBid                 SourceFacebookMarketingUpdateValidEnums = "auction_max_competitor_bid"
	SourceFacebookMarketingUpdateValidEnumsBuyingType                              SourceFacebookMarketingUpdateValidEnums = "buying_type"
	SourceFacebookMarketingUpdateValidEnumsCampaignID                              SourceFacebookMarketingUpdateValidEnums = "campaign_id"
	SourceFacebookMarketingUpdateValidEnumsCampaignName                            SourceFacebookMarketingUpdateValidEnums = "campaign_name"
	SourceFacebookMarketingUpdateValidEnumsCanvasAvgViewPercent                    SourceFacebookMarketingUpdateValidEnums = "canvas_avg_view_percent"
	SourceFacebookMarketingUpdateValidEnumsCanvasAvgViewTime                       SourceFacebookMarketingUpdateValidEnums = "canvas_avg_view_time"
	SourceFacebookMarketingUpdateValidEnumsCatalogSegmentActions                   SourceFacebookMarketingUpdateValidEnums = "catalog_segment_actions"
	SourceFacebookMarketingUpdateValidEnumsCatalogSegmentValue                     SourceFacebookMarketingUpdateValidEnums = "catalog_segment_value"
	SourceFacebookMarketingUpdateValidEnumsCatalogSegmentValueMobilePurchaseRoas   SourceFacebookMarketingUpdateValidEnums = "catalog_segment_value_mobile_purchase_roas"
	SourceFacebookMarketingUpdateValidEnumsCatalogSegmentValueOmniPurchaseRoas     SourceFacebookMarketingUpdateValidEnums = "catalog_segment_value_omni_purchase_roas"
	SourceFacebookMarketingUpdateValidEnumsCatalogSegmentValueWebsitePurchaseRoas  SourceFacebookMarketingUpdateValidEnums = "catalog_segment_value_website_purchase_roas"
	SourceFacebookMarketingUpdateValidEnumsClicks                                  SourceFacebookMarketingUpdateValidEnums = "clicks"
	SourceFacebookMarketingUpdateValidEnumsConversionRateRanking                   SourceFacebookMarketingUpdateValidEnums = "conversion_rate_ranking"
	SourceFacebookMarketingUpdateValidEnumsConversionValues                        SourceFacebookMarketingUpdateValidEnums = "conversion_values"
	SourceFacebookMarketingUpdateValidEnumsConversions                             SourceFacebookMarketingUpdateValidEnums = "conversions"
	SourceFacebookMarketingUpdateValidEnumsConvertedProductQuantity                SourceFacebookMarketingUpdateValidEnums = "converted_product_quantity"
	SourceFacebookMarketingUpdateValidEnumsConvertedProductValue                   SourceFacebookMarketingUpdateValidEnums = "converted_product_value"
	SourceFacebookMarketingUpdateValidEnumsCostPer15SecVideoView                   SourceFacebookMarketingUpdateValidEnums = "cost_per_15_sec_video_view"
	SourceFacebookMarketingUpdateValidEnumsCostPer2SecContinuousVideoView          SourceFacebookMarketingUpdateValidEnums = "cost_per_2_sec_continuous_video_view"
	SourceFacebookMarketingUpdateValidEnumsCostPerActionType                       SourceFacebookMarketingUpdateValidEnums = "cost_per_action_type"
	SourceFacebookMarketingUpdateValidEnumsCostPerAdClick                          SourceFacebookMarketingUpdateValidEnums = "cost_per_ad_click"
	SourceFacebookMarketingUpdateValidEnumsCostPerConversion                       SourceFacebookMarketingUpdateValidEnums = "cost_per_conversion"
	SourceFacebookMarketingUpdateValidEnumsCostPerDdaCountbyConvs                  SourceFacebookMarketingUpdateValidEnums = "cost_per_dda_countby_convs"
	SourceFacebookMarketingUpdateValidEnumsCostPerEstimatedAdRecallers             SourceFacebookMarketingUpdateValidEnums = "cost_per_estimated_ad_recallers"
	SourceFacebookMarketingUpdateValidEnumsCostPerInlineLinkClick                  SourceFacebookMarketingUpdateValidEnums = "cost_per_inline_link_click"
	SourceFacebookMarketingUpdateValidEnumsCostPerInlinePostEngagement             SourceFacebookMarketingUpdateValidEnums = "cost_per_inline_post_engagement"
	SourceFacebookMarketingUpdateValidEnumsCostPerOneThousandAdImpression          SourceFacebookMarketingUpdateValidEnums = "cost_per_one_thousand_ad_impression"
	SourceFacebookMarketingUpdateValidEnumsCostPerOutboundClick                    SourceFacebookMarketingUpdateValidEnums = "cost_per_outbound_click"
	SourceFacebookMarketingUpdateValidEnumsCostPerThruplay                         SourceFacebookMarketingUpdateValidEnums = "cost_per_thruplay"
	SourceFacebookMarketingUpdateValidEnumsCostPerUniqueActionType                 SourceFacebookMarketingUpdateValidEnums = "cost_per_unique_action_type"
	SourceFacebookMarketingUpdateValidEnumsCostPerUniqueClick                      SourceFacebookMarketingUpdateValidEnums = "cost_per_unique_click"
	SourceFacebookMarketingUpdateValidEnumsCostPerUniqueConversion                 SourceFacebookMarketingUpdateValidEnums = "cost_per_unique_conversion"
	SourceFacebookMarketingUpdateValidEnumsCostPerUniqueInlineLinkClick            SourceFacebookMarketingUpdateValidEnums = "cost_per_unique_inline_link_click"
	SourceFacebookMarketingUpdateValidEnumsCostPerUniqueOutboundClick              SourceFacebookMarketingUpdateValidEnums = "cost_per_unique_outbound_click"
	SourceFacebookMarketingUpdateValidEnumsCpc                                     SourceFacebookMarketingUpdateValidEnums = "cpc"
	SourceFacebookMarketingUpdateValidEnumsCpm                                     SourceFacebookMarketingUpdateValidEnums = "cpm"
	SourceFacebookMarketingUpdateValidEnumsCpp                                     SourceFacebookMarketingUpdateValidEnums = "cpp"
	SourceFacebookMarketingUpdateValidEnumsCreatedTime                             SourceFacebookMarketingUpdateValidEnums = "created_time"
	SourceFacebookMarketingUpdateValidEnumsCreativeMediaType                       SourceFacebookMarketingUpdateValidEnums = "creative_media_type"
	SourceFacebookMarketingUpdateValidEnumsCtr                                     SourceFacebookMarketingUpdateValidEnums = "ctr"
	SourceFacebookMarketingUpdateValidEnumsDateStart                               SourceFacebookMarketingUpdateValidEnums = "date_start"
	SourceFacebookMarketingUpdateValidEnumsDateStop                                SourceFacebookMarketingUpdateValidEnums = "date_stop"
	SourceFacebookMarketingUpdateValidEnumsDdaCountbyConvs                         SourceFacebookMarketingUpdateValidEnums = "dda_countby_convs"
	SourceFacebookMarketingUpdateValidEnumsDdaResults                              SourceFacebookMarketingUpdateValidEnums = "dda_results"
	SourceFacebookMarketingUpdateValidEnumsEngagementRateRanking                   SourceFacebookMarketingUpdateValidEnums = "engagement_rate_ranking"
	SourceFacebookMarketingUpdateValidEnumsEstimatedAdRecallRate                   SourceFacebookMarketingUpdateValidEnums = "estimated_ad_recall_rate"
	SourceFacebookMarketingUpdateValidEnumsEstimatedAdRecallRateLowerBound         SourceFacebookMarketingUpdateValidEnums = "estimated_ad_recall_rate_lower_bound"
	SourceFacebookMarketingUpdateValidEnumsEstimatedAdRecallRateUpperBound         SourceFacebookMarketingUpdateValidEnums = "estimated_ad_recall_rate_upper_bound"
	SourceFacebookMarketingUpdateValidEnumsEstimatedAdRecallers                    SourceFacebookMarketingUpdateValidEnums = "estimated_ad_recallers"
	SourceFacebookMarketingUpdateValidEnumsEstimatedAdRecallersLowerBound          SourceFacebookMarketingUpdateValidEnums = "estimated_ad_recallers_lower_bound"
	SourceFacebookMarketingUpdateValidEnumsEstimatedAdRecallersUpperBound          SourceFacebookMarketingUpdateValidEnums = "estimated_ad_recallers_upper_bound"
	SourceFacebookMarketingUpdateValidEnumsFrequency                               SourceFacebookMarketingUpdateValidEnums = "frequency"
	SourceFacebookMarketingUpdateValidEnumsFullViewImpressions                     SourceFacebookMarketingUpdateValidEnums = "full_view_impressions"
	SourceFacebookMarketingUpdateValidEnumsFullViewReach                           SourceFacebookMarketingUpdateValidEnums = "full_view_reach"
	SourceFacebookMarketingUpdateValidEnumsGenderTargeting                         SourceFacebookMarketingUpdateValidEnums = "gender_targeting"
	SourceFacebookMarketingUpdateValidEnumsImpressions                             SourceFacebookMarketingUpdateValidEnums = "impressions"
	SourceFacebookMarketingUpdateValidEnumsInlineLinkClickCtr                      SourceFacebookMarketingUpdateValidEnums = "inline_link_click_ctr"
	SourceFacebookMarketingUpdateValidEnumsInlineLinkClicks                        SourceFacebookMarketingUpdateValidEnums = "inline_link_clicks"
	SourceFacebookMarketingUpdateValidEnumsInlinePostEngagement                    SourceFacebookMarketingUpdateValidEnums = "inline_post_engagement"
	SourceFacebookMarketingUpdateValidEnumsInstagramUpcomingEventRemindersSet      SourceFacebookMarketingUpdateValidEnums = "instagram_upcoming_event_reminders_set"
	SourceFacebookMarketingUpdateValidEnumsInstantExperienceClicksToOpen           SourceFacebookMarketingUpdateValidEnums = "instant_experience_clicks_to_open"
	SourceFacebookMarketingUpdateValidEnumsInstantExperienceClicksToStart          SourceFacebookMarketingUpdateValidEnums = "instant_experience_clicks_to_start"
	SourceFacebookMarketingUpdateValidEnumsInstantExperienceOutboundClicks         SourceFacebookMarketingUpdateValidEnums = "instant_experience_outbound_clicks"
	SourceFacebookMarketingUpdateValidEnumsInteractiveComponentTap                 SourceFacebookMarketingUpdateValidEnums = "interactive_component_tap"
	SourceFacebookMarketingUpdateValidEnumsLabels                                  SourceFacebookMarketingUpdateValidEnums = "labels"
	SourceFacebookMarketingUpdateValidEnumsLocation                                SourceFacebookMarketingUpdateValidEnums = "location"
	SourceFacebookMarketingUpdateValidEnumsMarketingMessagesCostPerDelivered       SourceFacebookMarketingUpdateValidEnums = "marketing_messages_cost_per_delivered"
	SourceFacebookMarketingUpdateValidEnumsMarketingMessagesCostPerLinkBtnClick    SourceFacebookMarketingUpdateValidEnums = "marketing_messages_cost_per_link_btn_click"
	SourceFacebookMarketingUpdateValidEnumsMarketingMessagesSpend                  SourceFacebookMarketingUpdateValidEnums = "marketing_messages_spend"
	SourceFacebookMarketingUpdateValidEnumsMobileAppPurchaseRoas                   SourceFacebookMarketingUpdateValidEnums = "mobile_app_purchase_roas"
	SourceFacebookMarketingUpdateValidEnumsObjective                               SourceFacebookMarketingUpdateValidEnums = "objective"
	SourceFacebookMarketingUpdateValidEnumsOptimizationGoal                        SourceFacebookMarketingUpdateValidEnums = "optimization_goal"
	SourceFacebookMarketingUpdateValidEnumsOutboundClicks                          SourceFacebookMarketingUpdateValidEnums = "outbound_clicks"
	SourceFacebookMarketingUpdateValidEnumsOutboundClicksCtr                       SourceFacebookMarketingUpdateValidEnums = "outbound_clicks_ctr"
	SourceFacebookMarketingUpdateValidEnumsPlacePageName                           SourceFacebookMarketingUpdateValidEnums = "place_page_name"
	SourceFacebookMarketingUpdateValidEnumsPurchaseRoas                            SourceFacebookMarketingUpdateValidEnums = "purchase_roas"
	SourceFacebookMarketingUpdateValidEnumsQualifyingQuestionQualifyAnswerRate     SourceFacebookMarketingUpdateValidEnums = "qualifying_question_qualify_answer_rate"
	SourceFacebookMarketingUpdateValidEnumsQualityRanking                          SourceFacebookMarketingUpdateValidEnums = "quality_ranking"
	SourceFacebookMarketingUpdateValidEnumsReach                                   SourceFacebookMarketingUpdateValidEnums = "reach"
	SourceFacebookMarketingUpdateValidEnumsSocialSpend                             SourceFacebookMarketingUpdateValidEnums = "social_spend"
	SourceFacebookMarketingUpdateValidEnumsSpend                                   SourceFacebookMarketingUpdateValidEnums = "spend"
	SourceFacebookMarketingUpdateValidEnumsTotalPostbacks                          SourceFacebookMarketingUpdateValidEnums = "total_postbacks"
	SourceFacebookMarketingUpdateValidEnumsTotalPostbacksDetailed                  SourceFacebookMarketingUpdateValidEnums = "total_postbacks_detailed"
	SourceFacebookMarketingUpdateValidEnumsTotalPostbacksDetailedV4                SourceFacebookMarketingUpdateValidEnums = "total_postbacks_detailed_v4"
	SourceFacebookMarketingUpdateValidEnumsUniqueActions                           SourceFacebookMarketingUpdateValidEnums = "unique_actions"
	SourceFacebookMarketingUpdateValidEnumsUniqueClicks                            SourceFacebookMarketingUpdateValidEnums = "unique_clicks"
	SourceFacebookMarketingUpdateValidEnumsUniqueConversions                       SourceFacebookMarketingUpdateValidEnums = "unique_conversions"
	SourceFacebookMarketingUpdateValidEnumsUniqueCtr                               SourceFacebookMarketingUpdateValidEnums = "unique_ctr"
	SourceFacebookMarketingUpdateValidEnumsUniqueInlineLinkClickCtr                SourceFacebookMarketingUpdateValidEnums = "unique_inline_link_click_ctr"
	SourceFacebookMarketingUpdateValidEnumsUniqueInlineLinkClicks                  SourceFacebookMarketingUpdateValidEnums = "unique_inline_link_clicks"
	SourceFacebookMarketingUpdateValidEnumsUniqueLinkClicksCtr                     SourceFacebookMarketingUpdateValidEnums = "unique_link_clicks_ctr"
	SourceFacebookMarketingUpdateValidEnumsUniqueOutboundClicks                    SourceFacebookMarketingUpdateValidEnums = "unique_outbound_clicks"
	SourceFacebookMarketingUpdateValidEnumsUniqueOutboundClicksCtr                 SourceFacebookMarketingUpdateValidEnums = "unique_outbound_clicks_ctr"
	SourceFacebookMarketingUpdateValidEnumsUniqueVideoContinuous2SecWatchedActions SourceFacebookMarketingUpdateValidEnums = "unique_video_continuous_2_sec_watched_actions"
	SourceFacebookMarketingUpdateValidEnumsUniqueVideoView15Sec                    SourceFacebookMarketingUpdateValidEnums = "unique_video_view_15_sec"
	SourceFacebookMarketingUpdateValidEnumsUpdatedTime                             SourceFacebookMarketingUpdateValidEnums = "updated_time"
	SourceFacebookMarketingUpdateValidEnumsVideo15SecWatchedActions                SourceFacebookMarketingUpdateValidEnums = "video_15_sec_watched_actions"
	SourceFacebookMarketingUpdateValidEnumsVideo30SecWatchedActions                SourceFacebookMarketingUpdateValidEnums = "video_30_sec_watched_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoAvgTimeWatchedActions              SourceFacebookMarketingUpdateValidEnums = "video_avg_time_watched_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoContinuous2SecWatchedActions       SourceFacebookMarketingUpdateValidEnums = "video_continuous_2_sec_watched_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoP100WatchedActions                 SourceFacebookMarketingUpdateValidEnums = "video_p100_watched_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoP25WatchedActions                  SourceFacebookMarketingUpdateValidEnums = "video_p25_watched_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoP50WatchedActions                  SourceFacebookMarketingUpdateValidEnums = "video_p50_watched_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoP75WatchedActions                  SourceFacebookMarketingUpdateValidEnums = "video_p75_watched_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoP95WatchedActions                  SourceFacebookMarketingUpdateValidEnums = "video_p95_watched_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoPlayActions                        SourceFacebookMarketingUpdateValidEnums = "video_play_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoPlayCurveActions                   SourceFacebookMarketingUpdateValidEnums = "video_play_curve_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoPlayRetention0To15sActions         SourceFacebookMarketingUpdateValidEnums = "video_play_retention_0_to_15s_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoPlayRetention20To60sActions        SourceFacebookMarketingUpdateValidEnums = "video_play_retention_20_to_60s_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoPlayRetentionGraphActions          SourceFacebookMarketingUpdateValidEnums = "video_play_retention_graph_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoThruplayWatchedActions             SourceFacebookMarketingUpdateValidEnums = "video_thruplay_watched_actions"
	SourceFacebookMarketingUpdateValidEnumsVideoTimeWatchedActions                 SourceFacebookMarketingUpdateValidEnums = "video_time_watched_actions"
	SourceFacebookMarketingUpdateValidEnumsWebsiteCtr                              SourceFacebookMarketingUpdateValidEnums = "website_ctr"
	SourceFacebookMarketingUpdateValidEnumsWebsitePurchaseRoas                     SourceFacebookMarketingUpdateValidEnums = "website_purchase_roas"
	SourceFacebookMarketingUpdateValidEnumsWishBid                                 SourceFacebookMarketingUpdateValidEnums = "wish_bid"
)

func (e SourceFacebookMarketingUpdateValidEnums) ToPointer() *SourceFacebookMarketingUpdateValidEnums {
	return &e
}
func (e *SourceFacebookMarketingUpdateValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account_currency":
		fallthrough
	case "account_id":
		fallthrough
	case "account_name":
		fallthrough
	case "action_values":
		fallthrough
	case "actions":
		fallthrough
	case "ad_click_actions":
		fallthrough
	case "ad_id":
		fallthrough
	case "ad_impression_actions":
		fallthrough
	case "ad_name":
		fallthrough
	case "adset_end":
		fallthrough
	case "adset_id":
		fallthrough
	case "adset_name":
		fallthrough
	case "age_targeting":
		fallthrough
	case "attribution_setting":
		fallthrough
	case "auction_bid":
		fallthrough
	case "auction_competitiveness":
		fallthrough
	case "auction_max_competitor_bid":
		fallthrough
	case "buying_type":
		fallthrough
	case "campaign_id":
		fallthrough
	case "campaign_name":
		fallthrough
	case "canvas_avg_view_percent":
		fallthrough
	case "canvas_avg_view_time":
		fallthrough
	case "catalog_segment_actions":
		fallthrough
	case "catalog_segment_value":
		fallthrough
	case "catalog_segment_value_mobile_purchase_roas":
		fallthrough
	case "catalog_segment_value_omni_purchase_roas":
		fallthrough
	case "catalog_segment_value_website_purchase_roas":
		fallthrough
	case "clicks":
		fallthrough
	case "conversion_rate_ranking":
		fallthrough
	case "conversion_values":
		fallthrough
	case "conversions":
		fallthrough
	case "converted_product_quantity":
		fallthrough
	case "converted_product_value":
		fallthrough
	case "cost_per_15_sec_video_view":
		fallthrough
	case "cost_per_2_sec_continuous_video_view":
		fallthrough
	case "cost_per_action_type":
		fallthrough
	case "cost_per_ad_click":
		fallthrough
	case "cost_per_conversion":
		fallthrough
	case "cost_per_dda_countby_convs":
		fallthrough
	case "cost_per_estimated_ad_recallers":
		fallthrough
	case "cost_per_inline_link_click":
		fallthrough
	case "cost_per_inline_post_engagement":
		fallthrough
	case "cost_per_one_thousand_ad_impression":
		fallthrough
	case "cost_per_outbound_click":
		fallthrough
	case "cost_per_thruplay":
		fallthrough
	case "cost_per_unique_action_type":
		fallthrough
	case "cost_per_unique_click":
		fallthrough
	case "cost_per_unique_conversion":
		fallthrough
	case "cost_per_unique_inline_link_click":
		fallthrough
	case "cost_per_unique_outbound_click":
		fallthrough
	case "cpc":
		fallthrough
	case "cpm":
		fallthrough
	case "cpp":
		fallthrough
	case "created_time":
		fallthrough
	case "creative_media_type":
		fallthrough
	case "ctr":
		fallthrough
	case "date_start":
		fallthrough
	case "date_stop":
		fallthrough
	case "dda_countby_convs":
		fallthrough
	case "dda_results":
		fallthrough
	case "engagement_rate_ranking":
		fallthrough
	case "estimated_ad_recall_rate":
		fallthrough
	case "estimated_ad_recall_rate_lower_bound":
		fallthrough
	case "estimated_ad_recall_rate_upper_bound":
		fallthrough
	case "estimated_ad_recallers":
		fallthrough
	case "estimated_ad_recallers_lower_bound":
		fallthrough
	case "estimated_ad_recallers_upper_bound":
		fallthrough
	case "frequency":
		fallthrough
	case "full_view_impressions":
		fallthrough
	case "full_view_reach":
		fallthrough
	case "gender_targeting":
		fallthrough
	case "impressions":
		fallthrough
	case "inline_link_click_ctr":
		fallthrough
	case "inline_link_clicks":
		fallthrough
	case "inline_post_engagement":
		fallthrough
	case "instagram_upcoming_event_reminders_set":
		fallthrough
	case "instant_experience_clicks_to_open":
		fallthrough
	case "instant_experience_clicks_to_start":
		fallthrough
	case "instant_experience_outbound_clicks":
		fallthrough
	case "interactive_component_tap":
		fallthrough
	case "labels":
		fallthrough
	case "location":
		fallthrough
	case "marketing_messages_cost_per_delivered":
		fallthrough
	case "marketing_messages_cost_per_link_btn_click":
		fallthrough
	case "marketing_messages_spend":
		fallthrough
	case "mobile_app_purchase_roas":
		fallthrough
	case "objective":
		fallthrough
	case "optimization_goal":
		fallthrough
	case "outbound_clicks":
		fallthrough
	case "outbound_clicks_ctr":
		fallthrough
	case "place_page_name":
		fallthrough
	case "purchase_roas":
		fallthrough
	case "qualifying_question_qualify_answer_rate":
		fallthrough
	case "quality_ranking":
		fallthrough
	case "reach":
		fallthrough
	case "social_spend":
		fallthrough
	case "spend":
		fallthrough
	case "total_postbacks":
		fallthrough
	case "total_postbacks_detailed":
		fallthrough
	case "total_postbacks_detailed_v4":
		fallthrough
	case "unique_actions":
		fallthrough
	case "unique_clicks":
		fallthrough
	case "unique_conversions":
		fallthrough
	case "unique_ctr":
		fallthrough
	case "unique_inline_link_click_ctr":
		fallthrough
	case "unique_inline_link_clicks":
		fallthrough
	case "unique_link_clicks_ctr":
		fallthrough
	case "unique_outbound_clicks":
		fallthrough
	case "unique_outbound_clicks_ctr":
		fallthrough
	case "unique_video_continuous_2_sec_watched_actions":
		fallthrough
	case "unique_video_view_15_sec":
		fallthrough
	case "updated_time":
		fallthrough
	case "video_15_sec_watched_actions":
		fallthrough
	case "video_30_sec_watched_actions":
		fallthrough
	case "video_avg_time_watched_actions":
		fallthrough
	case "video_continuous_2_sec_watched_actions":
		fallthrough
	case "video_p100_watched_actions":
		fallthrough
	case "video_p25_watched_actions":
		fallthrough
	case "video_p50_watched_actions":
		fallthrough
	case "video_p75_watched_actions":
		fallthrough
	case "video_p95_watched_actions":
		fallthrough
	case "video_play_actions":
		fallthrough
	case "video_play_curve_actions":
		fallthrough
	case "video_play_retention_0_to_15s_actions":
		fallthrough
	case "video_play_retention_20_to_60s_actions":
		fallthrough
	case "video_play_retention_graph_actions":
		fallthrough
	case "video_thruplay_watched_actions":
		fallthrough
	case "video_time_watched_actions":
		fallthrough
	case "website_ctr":
		fallthrough
	case "website_purchase_roas":
		fallthrough
	case "wish_bid":
		*e = SourceFacebookMarketingUpdateValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingUpdateValidEnums: %v", v)
	}
}

// Level - Chosen level for API
type Level string

const (
	LevelAd       Level = "ad"
	LevelAdset    Level = "adset"
	LevelCampaign Level = "campaign"
	LevelAccount  Level = "account"
)

func (e Level) ToPointer() *Level {
	return &e
}
func (e *Level) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ad":
		fallthrough
	case "adset":
		fallthrough
	case "campaign":
		fallthrough
	case "account":
		*e = Level(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Level: %v", v)
	}
}

// InsightConfig - Config for custom insights
type InsightConfig struct {
	// A list of chosen action_breakdowns for action_breakdowns
	ActionBreakdowns []ValidActionBreakdowns `json:"action_breakdowns,omitempty"`
	// Determines the report time of action stats. For example, if a person saw the ad on Jan 1st but converted on Jan 2nd, when you query the API with action_report_time=impression, you see a conversion on Jan 1st. When you query the API with action_report_time=conversion, you see a conversion on Jan 2nd.
	ActionReportTime *SourceFacebookMarketingUpdateActionReportTime `default:"mixed" json:"action_report_time"`
	// A list of chosen breakdowns for breakdowns
	Breakdowns []ValidBreakdowns `json:"breakdowns,omitempty"`
	// The date until which you'd like to replicate data for this stream, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this end date will be replicated. Not setting this option will result in always syncing the latest data.
	EndDate *time.Time `json:"end_date,omitempty"`
	// A list of chosen fields for fields parameter
	Fields []SourceFacebookMarketingUpdateValidEnums `json:"fields,omitempty"`
	// The insights job timeout
	InsightsJobTimeout *int64 `default:"60" json:"insights_job_timeout"`
	// The attribution window
	InsightsLookbackWindow *int64 `default:"28" json:"insights_lookback_window"`
	// Chosen level for API
	Level *Level `default:"ad" json:"level"`
	// The name value of insight
	Name string `json:"name"`
	// The date from which you'd like to replicate data for this stream, in the format YYYY-MM-DDT00:00:00Z.
	StartDate *time.Time `json:"start_date,omitempty"`
	// Time window in days by which to aggregate statistics. The sync will be chunked into N day intervals, where N is the number of days you specified. For example, if you set this value to 7, then all statistics will be reported as 7-day aggregates by starting from the start_date. If the start and end dates are October 1st and October 30th, then the connector will output 5 records: 01 - 06, 07 - 13, 14 - 20, 21 - 27, and 28 - 30 (3 days only). The minimum allowed value for this field is 1, and the maximum is 89.
	TimeIncrement *int64 `default:"1" json:"time_increment"`
}

func (i InsightConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *InsightConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *InsightConfig) GetActionBreakdowns() []ValidActionBreakdowns {
	if o == nil {
		return nil
	}
	return o.ActionBreakdowns
}

func (o *InsightConfig) GetActionReportTime() *SourceFacebookMarketingUpdateActionReportTime {
	if o == nil {
		return nil
	}
	return o.ActionReportTime
}

func (o *InsightConfig) GetBreakdowns() []ValidBreakdowns {
	if o == nil {
		return nil
	}
	return o.Breakdowns
}

func (o *InsightConfig) GetEndDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *InsightConfig) GetFields() []SourceFacebookMarketingUpdateValidEnums {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *InsightConfig) GetInsightsJobTimeout() *int64 {
	if o == nil {
		return nil
	}
	return o.InsightsJobTimeout
}

func (o *InsightConfig) GetInsightsLookbackWindow() *int64 {
	if o == nil {
		return nil
	}
	return o.InsightsLookbackWindow
}

func (o *InsightConfig) GetLevel() *Level {
	if o == nil {
		return nil
	}
	return o.Level
}

func (o *InsightConfig) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *InsightConfig) GetStartDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartDate
}

func (o *InsightConfig) GetTimeIncrement() *int64 {
	if o == nil {
		return nil
	}
	return o.TimeIncrement
}

type SourceFacebookMarketingUpdate struct {
	// The value of the generated access token. From your App’s Dashboard, click on "Marketing API" then "Tools". Select permissions <b>ads_management, ads_read, read_insights, business_management</b>. Then click on "Get token". See the <a href="https://docs.airbyte.com/integrations/sources/facebook-marketing">docs</a> for more information.
	AccessToken *string `json:"access_token,omitempty"`
	// The Facebook Ad account ID(s) to pull data from. The Ad account ID number is in the account dropdown menu or in your browser's address bar of your <a href="https://adsmanager.facebook.com/adsmanager/">Meta Ads Manager</a>. See the <a href="https://www.facebook.com/business/help/1492627900875762">docs</a> for more information.
	AccountIds []string `json:"account_ids"`
	// Select the statuses you want to be loaded in the stream. If no specific statuses are selected, the API's default behavior applies, and some statuses may be filtered out.
	AdStatuses []ValidAdStatuses `json:"ad_statuses,omitempty"`
	// Select the statuses you want to be loaded in the stream. If no specific statuses are selected, the API's default behavior applies, and some statuses may be filtered out.
	AdsetStatuses []ValidAdSetStatuses `json:"adset_statuses,omitempty"`
	// Select the statuses you want to be loaded in the stream. If no specific statuses are selected, the API's default behavior applies, and some statuses may be filtered out.
	CampaignStatuses []ValidCampaignStatuses `json:"campaign_statuses,omitempty"`
	// Credentials for connecting to the Facebook Marketing API
	Credentials SourceFacebookMarketingUpdateAuthentication `json:"credentials"`
	// A list which contains ad statistics entries, each entry must have a name and can contains fields, breakdowns or action_breakdowns. Click on "add" to fill this field.
	CustomInsights []InsightConfig `json:"custom_insights,omitempty"`
	// The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this end date will be replicated. Not setting this option will result in always syncing the latest data.
	EndDate *time.Time `json:"end_date,omitempty"`
	// Set to active if you want to fetch the thumbnail_url and store the result in thumbnail_data_url for each Ad Creative.
	FetchThumbnailImages *bool `default:"false" json:"fetch_thumbnail_images"`
	// Insights Job Timeout establishes the maximum amount of time (in minutes) of waiting for the report job to complete. When timeout is reached the job is considered failed and we are trying to request smaller amount of data by breaking the job to few smaller ones. If you definitely know that 60 minutes is not enough for your report to be processed then you can decrease the timeout value, so we start breaking job to smaller parts faster.
	InsightsJobTimeout *int64 `default:"60" json:"insights_job_timeout"`
	// The attribution window. Facebook freezes insight data 28 days after it was generated, which means that all data from the past 28 days may have changed since we last emitted it, so you can retrieve refreshed insights from the past by setting this parameter. If you set a custom lookback window value in Facebook account, please provide the same value here.
	InsightsLookbackWindow *int64 `default:"28" json:"insights_lookback_window"`
	// Page size used when sending requests to Facebook API to specify number of records per page when response has pagination. Most users do not need to set this field unless they specifically need to tune the connector to address specific issues or use cases.
	PageSize *int64 `default:"100" json:"page_size"`
	// The date from which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. If not set then all data will be replicated for usual streams and only last 2 years for insight streams.
	StartDate *time.Time `json:"start_date,omitempty"`
}

func (s SourceFacebookMarketingUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceFacebookMarketingUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceFacebookMarketingUpdate) GetAccessToken() *string {
	if o == nil {
		return nil
	}
	return o.AccessToken
}

func (o *SourceFacebookMarketingUpdate) GetAccountIds() []string {
	if o == nil {
		return []string{}
	}
	return o.AccountIds
}

func (o *SourceFacebookMarketingUpdate) GetAdStatuses() []ValidAdStatuses {
	if o == nil {
		return nil
	}
	return o.AdStatuses
}

func (o *SourceFacebookMarketingUpdate) GetAdsetStatuses() []ValidAdSetStatuses {
	if o == nil {
		return nil
	}
	return o.AdsetStatuses
}

func (o *SourceFacebookMarketingUpdate) GetCampaignStatuses() []ValidCampaignStatuses {
	if o == nil {
		return nil
	}
	return o.CampaignStatuses
}

func (o *SourceFacebookMarketingUpdate) GetCredentials() SourceFacebookMarketingUpdateAuthentication {
	if o == nil {
		return SourceFacebookMarketingUpdateAuthentication{}
	}
	return o.Credentials
}

func (o *SourceFacebookMarketingUpdate) GetCustomInsights() []InsightConfig {
	if o == nil {
		return nil
	}
	return o.CustomInsights
}

func (o *SourceFacebookMarketingUpdate) GetEndDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *SourceFacebookMarketingUpdate) GetFetchThumbnailImages() *bool {
	if o == nil {
		return nil
	}
	return o.FetchThumbnailImages
}

func (o *SourceFacebookMarketingUpdate) GetInsightsJobTimeout() *int64 {
	if o == nil {
		return nil
	}
	return o.InsightsJobTimeout
}

func (o *SourceFacebookMarketingUpdate) GetInsightsLookbackWindow() *int64 {
	if o == nil {
		return nil
	}
	return o.InsightsLookbackWindow
}

func (o *SourceFacebookMarketingUpdate) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *SourceFacebookMarketingUpdate) GetStartDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartDate
}
