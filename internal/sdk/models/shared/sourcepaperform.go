// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Paperform string

const (
	PaperformPaperform Paperform = "paperform"
)

func (e Paperform) ToPointer() *Paperform {
	return &e
}
func (e *Paperform) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "paperform":
		*e = Paperform(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Paperform: %v", v)
	}
}

type SourcePaperform struct {
	// API key to use. Generate it on your account page at https://paperform.co/account/developer.
	APIKey     string    `json:"api_key"`
	sourceType Paperform `const:"paperform" json:"sourceType"`
}

func (s SourcePaperform) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourcePaperform) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourcePaperform) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourcePaperform) GetSourceType() Paperform {
	return PaperformPaperform
}
