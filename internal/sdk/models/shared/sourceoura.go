// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type Oura string

const (
	OuraOura Oura = "oura"
)

func (e Oura) ToPointer() *Oura {
	return &e
}
func (e *Oura) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "oura":
		*e = Oura(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Oura: %v", v)
	}
}

type SourceOura struct {
	// API Key
	APIKey string `json:"api_key"`
	// Start datetime to sync from. Default is current UTC datetime minus 1
	// day.
	//
	StartDatetime *time.Time `json:"start_datetime,omitempty"`
	// End datetime to sync until. Default is current UTC datetime.
	EndDatetime *time.Time `json:"end_datetime,omitempty"`
	sourceType  Oura       `const:"oura" json:"sourceType"`
}

func (s SourceOura) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceOura) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceOura) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceOura) GetStartDatetime() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartDatetime
}

func (o *SourceOura) GetEndDatetime() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndDatetime
}

func (o *SourceOura) GetSourceType() Oura {
	return OuraOura
}
