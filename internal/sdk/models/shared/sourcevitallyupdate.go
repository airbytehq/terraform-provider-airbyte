// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SourceVitallyUpdateStatus - Status of the Vitally accounts. One of the following values; active, churned, activeOrChurned.
type SourceVitallyUpdateStatus string

const (
	SourceVitallyUpdateStatusActive          SourceVitallyUpdateStatus = "active"
	SourceVitallyUpdateStatusChurned         SourceVitallyUpdateStatus = "churned"
	SourceVitallyUpdateStatusActiveOrChurned SourceVitallyUpdateStatus = "activeOrChurned"
)

func (e SourceVitallyUpdateStatus) ToPointer() *SourceVitallyUpdateStatus {
	return &e
}
func (e *SourceVitallyUpdateStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "churned":
		fallthrough
	case "activeOrChurned":
		*e = SourceVitallyUpdateStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceVitallyUpdateStatus: %v", v)
	}
}

type SourceVitallyUpdate struct {
	// The API Token for a Vitally account.
	APIKey string `json:"api_key"`
	// Status of the Vitally accounts. One of the following values; active, churned, activeOrChurned.
	Status SourceVitallyUpdateStatus `json:"status"`
}

func (o *SourceVitallyUpdate) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceVitallyUpdate) GetStatus() SourceVitallyUpdateStatus {
	if o == nil {
		return SourceVitallyUpdateStatus("")
	}
	return o.Status
}
