// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Salesflare string

const (
	SalesflareSalesflare Salesflare = "salesflare"
)

func (e Salesflare) ToPointer() *Salesflare {
	return &e
}
func (e *Salesflare) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "salesflare":
		*e = Salesflare(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Salesflare: %v", v)
	}
}

type SourceSalesflare struct {
	// Enter you api key like this : Bearer YOUR_API_KEY
	APIKey     string     `json:"api_key"`
	sourceType Salesflare `const:"salesflare" json:"sourceType"`
}

func (s SourceSalesflare) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceSalesflare) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceSalesflare) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceSalesflare) GetSourceType() Salesflare {
	return SalesflareSalesflare
}
