// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type Freshservice string

const (
	FreshserviceFreshservice Freshservice = "freshservice"
)

func (e Freshservice) ToPointer() *Freshservice {
	return &e
}
func (e *Freshservice) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "freshservice":
		*e = Freshservice(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Freshservice: %v", v)
	}
}

type SourceFreshservice struct {
	// Freshservice API Key. See <a href="https://api.freshservice.com/#authentication">here</a>. The key is case sensitive.
	APIKey string `json:"api_key"`
	// The name of your Freshservice domain
	DomainName string `json:"domain_name"`
	// UTC date and time in the format 2020-10-01T00:00:00Z. Any data before this date will not be replicated.
	StartDate  time.Time    `json:"start_date"`
	sourceType Freshservice `const:"freshservice" json:"sourceType"`
}

func (s SourceFreshservice) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceFreshservice) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceFreshservice) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceFreshservice) GetDomainName() string {
	if o == nil {
		return ""
	}
	return o.DomainName
}

func (o *SourceFreshservice) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}

func (o *SourceFreshservice) GetSourceType() Freshservice {
	return FreshserviceFreshservice
}
