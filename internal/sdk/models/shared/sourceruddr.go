// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Ruddr string

const (
	RuddrRuddr Ruddr = "ruddr"
)

func (e Ruddr) ToPointer() *Ruddr {
	return &e
}
func (e *Ruddr) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ruddr":
		*e = Ruddr(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Ruddr: %v", v)
	}
}

type SourceRuddr struct {
	// API token to use. Generate it in the API Keys section of your Ruddr workspace settings.
	APIToken   string `json:"api_token"`
	sourceType Ruddr  `const:"ruddr" json:"sourceType"`
}

func (s SourceRuddr) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceRuddr) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceRuddr) GetAPIToken() string {
	if o == nil {
		return ""
	}
	return o.APIToken
}

func (o *SourceRuddr) GetSourceType() Ruddr {
	return RuddrRuddr
}
