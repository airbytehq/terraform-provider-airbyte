// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type SourceStockdataUpdate struct {
	APIKey  string `json:"api_key"`
	Symbols []any  `json:"symbols,omitempty"`
	// Specify the industries of entities which have been identified within the article.
	Industries     []any     `json:"industries,omitempty"`
	FilterEntities *bool     `default:"false" json:"filter_entities"`
	StartDate      time.Time `json:"start_date"`
}

func (s SourceStockdataUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceStockdataUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceStockdataUpdate) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceStockdataUpdate) GetSymbols() []any {
	if o == nil {
		return nil
	}
	return o.Symbols
}

func (o *SourceStockdataUpdate) GetIndustries() []any {
	if o == nil {
		return nil
	}
	return o.Industries
}

func (o *SourceStockdataUpdate) GetFilterEntities() *bool {
	if o == nil {
		return nil
	}
	return o.FilterEntities
}

func (o *SourceStockdataUpdate) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}
