// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type ScopeType string

const (
	ScopeTypePersonal ScopeType = "Personal"
	ScopeTypeGlobal   ScopeType = "Global"
)

func (e ScopeType) ToPointer() *ScopeType {
	return &e
}
func (e *ScopeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Personal":
		fallthrough
	case "Global":
		*e = ScopeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScopeType: %v", v)
	}
}

type Elasticemail string

const (
	ElasticemailElasticemail Elasticemail = "elasticemail"
)

func (e Elasticemail) ToPointer() *Elasticemail {
	return &e
}
func (e *Elasticemail) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "elasticemail":
		*e = Elasticemail(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Elasticemail: %v", v)
	}
}

type SourceElasticemail struct {
	APIKey     string       `json:"api_key"`
	ScopeType  *ScopeType   `json:"scope_type,omitempty"`
	From       *time.Time   `json:"from,omitempty"`
	StartDate  time.Time    `json:"start_date"`
	sourceType Elasticemail `const:"elasticemail" json:"sourceType"`
}

func (s SourceElasticemail) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceElasticemail) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceElasticemail) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceElasticemail) GetScopeType() *ScopeType {
	if o == nil {
		return nil
	}
	return o.ScopeType
}

func (o *SourceElasticemail) GetFrom() *time.Time {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *SourceElasticemail) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}

func (o *SourceElasticemail) GetSourceType() Elasticemail {
	return ElasticemailElasticemail
}
