// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Pretix string

const (
	PretixPretix Pretix = "pretix"
)

func (e Pretix) ToPointer() *Pretix {
	return &e
}
func (e *Pretix) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pretix":
		*e = Pretix(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Pretix: %v", v)
	}
}

type SourcePretix struct {
	// API token to use. Obtain it from the pretix web interface by creating a new token under your team settings.
	APIToken   string `json:"api_token"`
	sourceType Pretix `const:"pretix" json:"sourceType"`
}

func (s SourcePretix) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourcePretix) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourcePretix) GetAPIToken() string {
	if o == nil {
		return ""
	}
	return o.APIToken
}

func (o *SourcePretix) GetSourceType() Pretix {
	return PretixPretix
}
