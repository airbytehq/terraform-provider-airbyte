// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type Freshchat string

const (
	FreshchatFreshchat Freshchat = "freshchat"
)

func (e Freshchat) ToPointer() *Freshchat {
	return &e
}
func (e *Freshchat) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "freshchat":
		*e = Freshchat(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Freshchat: %v", v)
	}
}

type SourceFreshchat struct {
	// The unique account name for your Freshchat instance
	AccountName string    `json:"account_name"`
	APIKey      string    `json:"api_key"`
	sourceType  Freshchat `const:"freshchat" json:"sourceType"`
	StartDate   time.Time `json:"start_date"`
}

func (s SourceFreshchat) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceFreshchat) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceFreshchat) GetAccountName() string {
	if o == nil {
		return ""
	}
	return o.AccountName
}

func (o *SourceFreshchat) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceFreshchat) GetSourceType() Freshchat {
	return FreshchatFreshchat
}

func (o *SourceFreshchat) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}
