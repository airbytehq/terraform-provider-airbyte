// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type ZendeskSell string

const (
	ZendeskSellZendeskSell ZendeskSell = "zendesk-sell"
)

func (e ZendeskSell) ToPointer() *ZendeskSell {
	return &e
}
func (e *ZendeskSell) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "zendesk-sell":
		*e = ZendeskSell(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ZendeskSell: %v", v)
	}
}

type SourceZendeskSell struct {
	// The API token for authenticating to Zendesk Sell
	APIToken   string      `json:"api_token"`
	sourceType ZendeskSell `const:"zendesk-sell" json:"sourceType"`
}

func (s SourceZendeskSell) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceZendeskSell) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceZendeskSell) GetAPIToken() string {
	if o == nil {
		return ""
	}
	return o.APIToken
}

func (o *SourceZendeskSell) GetSourceType() ZendeskSell {
	return ZendeskSellZendeskSell
}
