// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type SourceShutterstockUpdate struct {
	// Your OAuth 2.0 token for accessing the Shutterstock API. Obtain this token from your Shutterstock developer account.
	APIToken  string    `json:"api_token"`
	StartDate time.Time `json:"start_date"`
	// The query for image search
	QueryForImageSearch *string `default:"mountain" json:"query_for_image_search"`
	// The Query for `videos_search` stream
	QueryForVideoSearch *string `default:"mountain" json:"query_for_video_search"`
	// The query for image search
	QueryForAudioSearch *string `default:"mountain" json:"query_for_audio_search"`
	// The query for catalog search
	QueryForCatalogSearch *string `default:"mountain" json:"query_for_catalog_search"`
}

func (s SourceShutterstockUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceShutterstockUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceShutterstockUpdate) GetAPIToken() string {
	if o == nil {
		return ""
	}
	return o.APIToken
}

func (o *SourceShutterstockUpdate) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}

func (o *SourceShutterstockUpdate) GetQueryForImageSearch() *string {
	if o == nil {
		return nil
	}
	return o.QueryForImageSearch
}

func (o *SourceShutterstockUpdate) GetQueryForVideoSearch() *string {
	if o == nil {
		return nil
	}
	return o.QueryForVideoSearch
}

func (o *SourceShutterstockUpdate) GetQueryForAudioSearch() *string {
	if o == nil {
		return nil
	}
	return o.QueryForAudioSearch
}

func (o *SourceShutterstockUpdate) GetQueryForCatalogSearch() *string {
	if o == nil {
		return nil
	}
	return o.QueryForCatalogSearch
}
