// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type SourceWhiskyHunterCreateRequest struct {
	// Name of the source e.g. dev-mysql-instance.
	Name string `json:"name"`
	// The UUID of the connector definition. One of configuration.sourceType or definitionId must be provided.
	DefinitionID  *string            `json:"definitionId,omitempty"`
	WorkspaceID   string             `json:"workspaceId"`
	Configuration SourceWhiskyHunter `json:"configuration"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretID *string `json:"secretId,omitempty"`
}

func (o *SourceWhiskyHunterCreateRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *SourceWhiskyHunterCreateRequest) GetDefinitionID() *string {
	if o == nil {
		return nil
	}
	return o.DefinitionID
}

func (o *SourceWhiskyHunterCreateRequest) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}

func (o *SourceWhiskyHunterCreateRequest) GetConfiguration() SourceWhiskyHunter {
	if o == nil {
		return SourceWhiskyHunter{}
	}
	return o.Configuration
}

func (o *SourceWhiskyHunterCreateRequest) GetSecretID() *string {
	if o == nil {
		return nil
	}
	return o.SecretID
}
