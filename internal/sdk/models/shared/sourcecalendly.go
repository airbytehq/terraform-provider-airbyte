// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type Calendly string

const (
	CalendlyCalendly Calendly = "calendly"
)

func (e Calendly) ToPointer() *Calendly {
	return &e
}
func (e *Calendly) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "calendly":
		*e = Calendly(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Calendly: %v", v)
	}
}

type SourceCalendly struct {
	// Go to Integrations â†’ API & Webhooks to obtain your bearer token. https://calendly.com/integrations/api_webhooks
	APIKey     string    `json:"api_key"`
	sourceType Calendly  `const:"calendly" json:"sourceType"`
	StartDate  time.Time `json:"start_date"`
}

func (s SourceCalendly) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceCalendly) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceCalendly) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceCalendly) GetSourceType() Calendly {
	return CalendlyCalendly
}

func (o *SourceCalendly) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}
