// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

// SourceBabelforceUpdateRegion - Babelforce region
type SourceBabelforceUpdateRegion string

const (
	SourceBabelforceUpdateRegionServices    SourceBabelforceUpdateRegion = "services"
	SourceBabelforceUpdateRegionUsEast      SourceBabelforceUpdateRegion = "us-east"
	SourceBabelforceUpdateRegionApSoutheast SourceBabelforceUpdateRegion = "ap-southeast"
)

func (e SourceBabelforceUpdateRegion) ToPointer() *SourceBabelforceUpdateRegion {
	return &e
}
func (e *SourceBabelforceUpdateRegion) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "services":
		fallthrough
	case "us-east":
		fallthrough
	case "ap-southeast":
		*e = SourceBabelforceUpdateRegion(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceBabelforceUpdateRegion: %v", v)
	}
}

type SourceBabelforceUpdate struct {
	// The Babelforce access key ID
	AccessKeyID string `json:"access_key_id"`
	// The Babelforce access token
	AccessToken string `json:"access_token"`
	// Timestamp in Unix the replication from Babelforce API will start from. For example 1651363200 which corresponds to 2022-05-01 00:00:00.
	DateCreatedFrom *int64 `json:"date_created_from,omitempty"`
	// Timestamp in Unix the replication from Babelforce will be up to. For example 1651363200 which corresponds to 2022-05-01 00:00:00.
	DateCreatedTo *int64 `json:"date_created_to,omitempty"`
	// Babelforce region
	Region *SourceBabelforceUpdateRegion `default:"services" json:"region"`
}

func (s SourceBabelforceUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceBabelforceUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceBabelforceUpdate) GetAccessKeyID() string {
	if o == nil {
		return ""
	}
	return o.AccessKeyID
}

func (o *SourceBabelforceUpdate) GetAccessToken() string {
	if o == nil {
		return ""
	}
	return o.AccessToken
}

func (o *SourceBabelforceUpdate) GetDateCreatedFrom() *int64 {
	if o == nil {
		return nil
	}
	return o.DateCreatedFrom
}

func (o *SourceBabelforceUpdate) GetDateCreatedTo() *int64 {
	if o == nil {
		return nil
	}
	return o.DateCreatedTo
}

func (o *SourceBabelforceUpdate) GetRegion() *SourceBabelforceUpdateRegion {
	if o == nil {
		return nil
	}
	return o.Region
}
