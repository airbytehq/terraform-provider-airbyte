// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/types"
)

type Woocommerce string

const (
	WoocommerceWoocommerce Woocommerce = "woocommerce"
)

func (e Woocommerce) ToPointer() *Woocommerce {
	return &e
}
func (e *Woocommerce) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "woocommerce":
		*e = Woocommerce(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Woocommerce: %v", v)
	}
}

type SourceWoocommerce struct {
	// Customer Key for API in WooCommerce shop
	APIKey string `json:"api_key"`
	// Customer Secret for API in WooCommerce shop
	APISecret string `json:"api_secret"`
	// The name of the store. For https://EXAMPLE.com, the shop name is 'EXAMPLE.com'.
	Shop       string      `json:"shop"`
	sourceType Woocommerce `const:"woocommerce" json:"sourceType"`
	// The date you would like to replicate data from. Format: YYYY-MM-DD
	StartDate types.Date `json:"start_date"`
}

func (s SourceWoocommerce) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceWoocommerce) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceWoocommerce) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceWoocommerce) GetAPISecret() string {
	if o == nil {
		return ""
	}
	return o.APISecret
}

func (o *SourceWoocommerce) GetShop() string {
	if o == nil {
		return ""
	}
	return o.Shop
}

func (o *SourceWoocommerce) GetSourceType() Woocommerce {
	return WoocommerceWoocommerce
}

func (o *SourceWoocommerce) GetStartDate() types.Date {
	if o == nil {
		return types.Date{}
	}
	return o.StartDate
}
