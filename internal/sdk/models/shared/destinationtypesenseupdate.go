// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type DestinationTypesenseUpdate struct {
	// Typesense API Key
	APIKey string `json:"api_key"`
	// Hostname of the Typesense instance without protocol. Accept multiple hosts separated by comma.
	Host string `json:"host"`
	// Port of the Typesense instance. Ex: 8108, 80, 443. Default is 8108
	Port *string `json:"port,omitempty"`
	// Protocol of the Typesense instance. Ex: http or https. Default is https
	Protocol *string `json:"protocol,omitempty"`
	// How many documents should be imported together. Default 1000
	BatchSize *int64 `json:"batch_size,omitempty"`
	// Path of the Typesense instance. Default is none
	Path *string `json:"path,omitempty"`
}

func (o *DestinationTypesenseUpdate) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *DestinationTypesenseUpdate) GetHost() string {
	if o == nil {
		return ""
	}
	return o.Host
}

func (o *DestinationTypesenseUpdate) GetPort() *string {
	if o == nil {
		return nil
	}
	return o.Port
}

func (o *DestinationTypesenseUpdate) GetProtocol() *string {
	if o == nil {
		return nil
	}
	return o.Protocol
}

func (o *DestinationTypesenseUpdate) GetBatchSize() *int64 {
	if o == nil {
		return nil
	}
	return o.BatchSize
}

func (o *DestinationTypesenseUpdate) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}
