// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type CalCom string

const (
	CalComCalCom CalCom = "cal-com"
)

func (e CalCom) ToPointer() *CalCom {
	return &e
}
func (e *CalCom) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cal-com":
		*e = CalCom(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CalCom: %v", v)
	}
}

type SourceCalCom struct {
	// API key to use. Find it at https://cal.com/account
	APIKey     string `json:"api_key"`
	OrgID      string `json:"orgId"`
	sourceType CalCom `const:"cal-com" json:"sourceType"`
}

func (s SourceCalCom) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceCalCom) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceCalCom) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceCalCom) GetOrgID() string {
	if o == nil {
		return ""
	}
	return o.OrgID
}

func (o *SourceCalCom) GetSourceType() CalCom {
	return CalComCalCom
}
