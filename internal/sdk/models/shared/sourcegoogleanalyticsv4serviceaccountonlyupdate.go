// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/types"
)

type SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateAuthType string

const (
	SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateAuthTypeService SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateAuthType = "Service"
)

func (e SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateAuthType) ToPointer() *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateAuthType {
	return &e
}

func (e *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Service":
		*e = SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateAuthType: %v", v)
	}
}

type SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication struct {
	authType *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateAuthType `const:"Service" json:"auth_type,omitempty"`
	// The JSON key of the service account to use for authorization
	CredentialsJSON string `json:"credentials_json"`
}

func (s SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication) GetAuthType() *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateAuthType {
	return SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateAuthTypeService.ToPointer()
}

func (o *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication) GetCredentialsJSON() string {
	if o == nil {
		return ""
	}
	return o.CredentialsJSON
}

type SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentialsType string

const (
	SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentialsTypeSourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentialsType = "source-google-analytics-v4-service-account-only-update_Service Account Key Authentication"
)

// SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentials - Credentials for the service
type SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentials struct {
	SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication

	Type SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentialsType
}

func CreateSourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentialsSourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication(sourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication) SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentials {
	typ := SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentialsTypeSourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication

	return SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentials{
		SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication: &sourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentials) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication = SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication, "", true, true); err == nil {
		u.SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication = &sourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication
		u.Type = SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentialsTypeSourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentials) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateServiceAccountKeyAuthentication, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsV4ServiceAccountOnlyUpdate struct {
	// Credentials for the service
	Credentials *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentials `json:"credentials,omitempty"`
	// A JSON array describing the custom reports you want to sync from Google Analytics. See <a href="https://docs.airbyte.com/integrations/sources/google-analytics-v4#data-processing-latency">the docs</a> for more information about the exact format you can use to fill out this field.
	CustomReports *string `json:"custom_reports,omitempty"`
	// The date in the format YYYY-MM-DD. Any data after this date will not be replicated.
	EndDate *types.Date `json:"end_date,omitempty"`
	// The date in the format YYYY-MM-DD. Any data before this date will not be replicated.
	StartDate types.Date `json:"start_date"`
	// The ID for the Google Analytics View you want to fetch data from. This can be found from the <a href="https://ga-dev-tools.appspot.com/account-explorer/">Google Analytics Account Explorer</a>.
	ViewID string `json:"view_id"`
	// The time increment used by the connector when requesting data from the Google Analytics API. More information is available in the <a href="https://docs.airbyte.com/integrations/sources/google-analytics-v4/#sampling-in-reports">the docs</a>. The bigger this value is, the faster the sync will be, but the more likely that sampling will be applied to your data, potentially causing inaccuracies in the returned results. We recommend setting this to 1 unless you have a hard requirement to make the sync faster at the expense of accuracy. The minimum allowed value for this field is 1, and the maximum is 364.
	WindowInDays *int64 `default:"1" json:"window_in_days"`
}

func (s SourceGoogleAnalyticsV4ServiceAccountOnlyUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdate) GetCredentials() *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdateCredentials {
	if o == nil {
		return nil
	}
	return o.Credentials
}

func (o *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdate) GetCustomReports() *string {
	if o == nil {
		return nil
	}
	return o.CustomReports
}

func (o *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdate) GetEndDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdate) GetStartDate() types.Date {
	if o == nil {
		return types.Date{}
	}
	return o.StartDate
}

func (o *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdate) GetViewID() string {
	if o == nil {
		return ""
	}
	return o.ViewID
}

func (o *SourceGoogleAnalyticsV4ServiceAccountOnlyUpdate) GetWindowInDays() *int64 {
	if o == nil {
		return nil
	}
	return o.WindowInDays
}
