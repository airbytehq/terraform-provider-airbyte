// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Invoiced string

const (
	InvoicedInvoiced Invoiced = "invoiced"
)

func (e Invoiced) ToPointer() *Invoiced {
	return &e
}
func (e *Invoiced) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invoiced":
		*e = Invoiced(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Invoiced: %v", v)
	}
}

type SourceInvoiced struct {
	// API key to use. Find it at https://invoiced.com/account
	APIKey     string   `json:"api_key"`
	sourceType Invoiced `const:"invoiced" json:"sourceType"`
}

func (s SourceInvoiced) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceInvoiced) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceInvoiced) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceInvoiced) GetSourceType() Invoiced {
	return InvoicedInvoiced
}
