// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Everhour string

const (
	EverhourEverhour Everhour = "everhour"
)

func (e Everhour) ToPointer() *Everhour {
	return &e
}
func (e *Everhour) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "everhour":
		*e = Everhour(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Everhour: %v", v)
	}
}

type SourceEverhour struct {
	// Everhour API Key. See the <a href="https://everhour.docs.apiary.io/#introduction/authentication">docs</a> for information on how to generate this key.
	APIKey     string   `json:"api_key"`
	sourceType Everhour `const:"everhour" json:"sourceType"`
}

func (s SourceEverhour) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceEverhour) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceEverhour) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceEverhour) GetSourceType() Everhour {
	return EverhourEverhour
}
