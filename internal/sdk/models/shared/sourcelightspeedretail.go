// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type LightspeedRetail string

const (
	LightspeedRetailLightspeedRetail LightspeedRetail = "lightspeed-retail"
)

func (e LightspeedRetail) ToPointer() *LightspeedRetail {
	return &e
}
func (e *LightspeedRetail) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "lightspeed-retail":
		*e = LightspeedRetail(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LightspeedRetail: %v", v)
	}
}

type SourceLightspeedRetail struct {
	// API key or access token
	APIKey string `json:"api_key"`
	// The subdomain for the retailer, e.g., 'example' in 'example.retail.lightspeed.app'.
	Subdomain  string           `json:"subdomain"`
	sourceType LightspeedRetail `const:"lightspeed-retail" json:"sourceType"`
}

func (s SourceLightspeedRetail) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceLightspeedRetail) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceLightspeedRetail) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceLightspeedRetail) GetSubdomain() string {
	if o == nil {
		return ""
	}
	return o.Subdomain
}

func (o *SourceLightspeedRetail) GetSourceType() LightspeedRetail {
	return LightspeedRetailLightspeedRetail
}
