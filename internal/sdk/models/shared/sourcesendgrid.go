// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type Sendgrid string

const (
	SendgridSendgrid Sendgrid = "sendgrid"
)

func (e Sendgrid) ToPointer() *Sendgrid {
	return &e
}
func (e *Sendgrid) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sendgrid":
		*e = Sendgrid(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Sendgrid: %v", v)
	}
}

type SourceSendgrid struct {
	// Sendgrid API Key, use <a href=\"https://app.sendgrid.com/settings/api_keys/\">admin</a> to generate this key.
	APIKey     string   `json:"api_key"`
	sourceType Sendgrid `const:"sendgrid" json:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate time.Time `json:"start_date"`
}

func (s SourceSendgrid) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceSendgrid) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceSendgrid) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceSendgrid) GetSourceType() Sendgrid {
	return SendgridSendgrid
}

func (o *SourceSendgrid) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}
