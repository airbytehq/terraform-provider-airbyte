// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type ReplyIo string

const (
	ReplyIoReplyIo ReplyIo = "reply-io"
)

func (e ReplyIo) ToPointer() *ReplyIo {
	return &e
}
func (e *ReplyIo) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "reply-io":
		*e = ReplyIo(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplyIo: %v", v)
	}
}

type SourceReplyIo struct {
	// The API Token for Reply
	APIKey     string  `json:"api_key"`
	sourceType ReplyIo `const:"reply-io" json:"sourceType"`
}

func (s SourceReplyIo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceReplyIo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceReplyIo) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceReplyIo) GetSourceType() ReplyIo {
	return ReplyIoReplyIo
}
