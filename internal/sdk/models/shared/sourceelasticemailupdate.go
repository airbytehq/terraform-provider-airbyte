// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type SourceElasticemailUpdateScopeType string

const (
	SourceElasticemailUpdateScopeTypePersonal SourceElasticemailUpdateScopeType = "Personal"
	SourceElasticemailUpdateScopeTypeGlobal   SourceElasticemailUpdateScopeType = "Global"
)

func (e SourceElasticemailUpdateScopeType) ToPointer() *SourceElasticemailUpdateScopeType {
	return &e
}
func (e *SourceElasticemailUpdateScopeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Personal":
		fallthrough
	case "Global":
		*e = SourceElasticemailUpdateScopeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceElasticemailUpdateScopeType: %v", v)
	}
}

type SourceElasticemailUpdate struct {
	APIKey    string                             `json:"api_key"`
	ScopeType *SourceElasticemailUpdateScopeType `json:"scope_type,omitempty"`
	From      *time.Time                         `json:"from,omitempty"`
	StartDate time.Time                          `json:"start_date"`
}

func (s SourceElasticemailUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceElasticemailUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceElasticemailUpdate) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceElasticemailUpdate) GetScopeType() *SourceElasticemailUpdateScopeType {
	if o == nil {
		return nil
	}
	return o.ScopeType
}

func (o *SourceElasticemailUpdate) GetFrom() *time.Time {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *SourceElasticemailUpdate) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}
