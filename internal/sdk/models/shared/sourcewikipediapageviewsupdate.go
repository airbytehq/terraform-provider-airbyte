// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type SourceWikipediaPageviewsUpdate struct {
	// If you want to filter by access method, use one of desktop, mobile-app or mobile-web. If you are interested in pageviews regardless of access method, use all-access.
	Access string `json:"access"`
	// If you want to filter by agent type, use one of user, automated or spider. If you are interested in pageviews regardless of agent type, use all-agents.
	Agent string `json:"agent"`
	// The title of any article in the specified project. Any spaces should be replaced with underscores. It also should be URI-encoded, so that non-URI-safe characters like %, / or ? are accepted.
	Article string `json:"article"`
	// The ISO 3166-1 alpha-2 code of a country for which to retrieve top articles.
	Country string `json:"country"`
	// The date of the last day to include, in YYYYMMDD or YYYYMMDDHH format.
	End string `json:"end"`
	// If you want to filter by project, use the domain of any Wikimedia project.
	Project string `json:"project"`
	// The date of the first day to include, in YYYYMMDD or YYYYMMDDHH format.
	Start string `json:"start"`
}

func (o *SourceWikipediaPageviewsUpdate) GetAccess() string {
	if o == nil {
		return ""
	}
	return o.Access
}

func (o *SourceWikipediaPageviewsUpdate) GetAgent() string {
	if o == nil {
		return ""
	}
	return o.Agent
}

func (o *SourceWikipediaPageviewsUpdate) GetArticle() string {
	if o == nil {
		return ""
	}
	return o.Article
}

func (o *SourceWikipediaPageviewsUpdate) GetCountry() string {
	if o == nil {
		return ""
	}
	return o.Country
}

func (o *SourceWikipediaPageviewsUpdate) GetEnd() string {
	if o == nil {
		return ""
	}
	return o.End
}

func (o *SourceWikipediaPageviewsUpdate) GetProject() string {
	if o == nil {
		return ""
	}
	return o.Project
}

func (o *SourceWikipediaPageviewsUpdate) GetStart() string {
	if o == nil {
		return ""
	}
	return o.Start
}
