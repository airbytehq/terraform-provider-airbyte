// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type Shortcut string

const (
	ShortcutShortcut Shortcut = "shortcut"
)

func (e Shortcut) ToPointer() *Shortcut {
	return &e
}
func (e *Shortcut) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shortcut":
		*e = Shortcut(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Shortcut: %v", v)
	}
}

type SourceShortcut struct {
	APIKey2 string `json:"api_key_2"`
	// Query for searching as defined in `https://help.shortcut.com/hc/en-us/articles/360000046646-Searching-in-Shortcut-Using-Search-Operators`
	Query      *string   `default:"title:Our first Epic" json:"query"`
	sourceType Shortcut  `const:"shortcut" json:"sourceType"`
	StartDate  time.Time `json:"start_date"`
}

func (s SourceShortcut) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceShortcut) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceShortcut) GetAPIKey2() string {
	if o == nil {
		return ""
	}
	return o.APIKey2
}

func (o *SourceShortcut) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *SourceShortcut) GetSourceType() Shortcut {
	return ShortcutShortcut
}

func (o *SourceShortcut) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}
