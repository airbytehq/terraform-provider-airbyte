// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type SourceClockodoUpdate struct {
	// API key to use. Find it in the 'Personal data' section of your Clockodo account.
	APIKey string `json:"api_key"`
	// Your Clockodo account email address. Find it in your Clockodo account settings.
	EmailAddress string `json:"email_address"`
	// Identification of the calling application, including the email address of a technical contact person. Format: [name of application or company];[email address].
	ExternalApplication *string `default:"Airbyte" json:"external_application"`
	// 2024, 2025
	Years     []any     `json:"years"`
	StartDate time.Time `json:"start_date"`
}

func (s SourceClockodoUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceClockodoUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceClockodoUpdate) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceClockodoUpdate) GetEmailAddress() string {
	if o == nil {
		return ""
	}
	return o.EmailAddress
}

func (o *SourceClockodoUpdate) GetExternalApplication() *string {
	if o == nil {
		return nil
	}
	return o.ExternalApplication
}

func (o *SourceClockodoUpdate) GetYears() []any {
	if o == nil {
		return []any{}
	}
	return o.Years
}

func (o *SourceClockodoUpdate) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}
