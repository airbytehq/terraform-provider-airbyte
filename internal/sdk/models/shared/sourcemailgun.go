// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

// DomainRegionCode - Domain region code. 'EU' or 'US' are possible values. The default is 'US'.
type DomainRegionCode string

const (
	DomainRegionCodeUs DomainRegionCode = "US"
	DomainRegionCodeEu DomainRegionCode = "EU"
)

func (e DomainRegionCode) ToPointer() *DomainRegionCode {
	return &e
}
func (e *DomainRegionCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "US":
		fallthrough
	case "EU":
		*e = DomainRegionCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DomainRegionCode: %v", v)
	}
}

type Mailgun string

const (
	MailgunMailgun Mailgun = "mailgun"
)

func (e Mailgun) ToPointer() *Mailgun {
	return &e
}
func (e *Mailgun) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mailgun":
		*e = Mailgun(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Mailgun: %v", v)
	}
}

type SourceMailgun struct {
	// Primary account API key to access your Mailgun data.
	PrivateKey string `json:"private_key"`
	// Domain region code. 'EU' or 'US' are possible values. The default is 'US'.
	DomainRegion *DomainRegionCode `default:"US" json:"domain_region"`
	// UTC date and time in the format 2020-10-01 00:00:00. Any data before this date will not be replicated. If omitted, defaults to 3 days ago.
	StartDate  *time.Time `json:"start_date,omitempty"`
	sourceType Mailgun    `const:"mailgun" json:"sourceType"`
}

func (s SourceMailgun) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceMailgun) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceMailgun) GetPrivateKey() string {
	if o == nil {
		return ""
	}
	return o.PrivateKey
}

func (o *SourceMailgun) GetDomainRegion() *DomainRegionCode {
	if o == nil {
		return nil
	}
	return o.DomainRegion
}

func (o *SourceMailgun) GetStartDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartDate
}

func (o *SourceMailgun) GetSourceType() Mailgun {
	return MailgunMailgun
}
