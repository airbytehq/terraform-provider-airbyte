// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

// SourceFacebookMarketingValidAdStatuses - An enumeration.
type SourceFacebookMarketingValidAdStatuses string

const (
	SourceFacebookMarketingValidAdStatusesActive             SourceFacebookMarketingValidAdStatuses = "ACTIVE"
	SourceFacebookMarketingValidAdStatusesAdsetPaused        SourceFacebookMarketingValidAdStatuses = "ADSET_PAUSED"
	SourceFacebookMarketingValidAdStatusesArchived           SourceFacebookMarketingValidAdStatuses = "ARCHIVED"
	SourceFacebookMarketingValidAdStatusesCampaignPaused     SourceFacebookMarketingValidAdStatuses = "CAMPAIGN_PAUSED"
	SourceFacebookMarketingValidAdStatusesDeleted            SourceFacebookMarketingValidAdStatuses = "DELETED"
	SourceFacebookMarketingValidAdStatusesDisapproved        SourceFacebookMarketingValidAdStatuses = "DISAPPROVED"
	SourceFacebookMarketingValidAdStatusesInProcess          SourceFacebookMarketingValidAdStatuses = "IN_PROCESS"
	SourceFacebookMarketingValidAdStatusesPaused             SourceFacebookMarketingValidAdStatuses = "PAUSED"
	SourceFacebookMarketingValidAdStatusesPendingBillingInfo SourceFacebookMarketingValidAdStatuses = "PENDING_BILLING_INFO"
	SourceFacebookMarketingValidAdStatusesPendingReview      SourceFacebookMarketingValidAdStatuses = "PENDING_REVIEW"
	SourceFacebookMarketingValidAdStatusesPreapproved        SourceFacebookMarketingValidAdStatuses = "PREAPPROVED"
	SourceFacebookMarketingValidAdStatusesWithIssues         SourceFacebookMarketingValidAdStatuses = "WITH_ISSUES"
)

func (e SourceFacebookMarketingValidAdStatuses) ToPointer() *SourceFacebookMarketingValidAdStatuses {
	return &e
}
func (e *SourceFacebookMarketingValidAdStatuses) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "ADSET_PAUSED":
		fallthrough
	case "ARCHIVED":
		fallthrough
	case "CAMPAIGN_PAUSED":
		fallthrough
	case "DELETED":
		fallthrough
	case "DISAPPROVED":
		fallthrough
	case "IN_PROCESS":
		fallthrough
	case "PAUSED":
		fallthrough
	case "PENDING_BILLING_INFO":
		fallthrough
	case "PENDING_REVIEW":
		fallthrough
	case "PREAPPROVED":
		fallthrough
	case "WITH_ISSUES":
		*e = SourceFacebookMarketingValidAdStatuses(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingValidAdStatuses: %v", v)
	}
}

// SourceFacebookMarketingValidAdSetStatuses - An enumeration.
type SourceFacebookMarketingValidAdSetStatuses string

const (
	SourceFacebookMarketingValidAdSetStatusesActive         SourceFacebookMarketingValidAdSetStatuses = "ACTIVE"
	SourceFacebookMarketingValidAdSetStatusesArchived       SourceFacebookMarketingValidAdSetStatuses = "ARCHIVED"
	SourceFacebookMarketingValidAdSetStatusesCampaignPaused SourceFacebookMarketingValidAdSetStatuses = "CAMPAIGN_PAUSED"
	SourceFacebookMarketingValidAdSetStatusesDeleted        SourceFacebookMarketingValidAdSetStatuses = "DELETED"
	SourceFacebookMarketingValidAdSetStatusesInProcess      SourceFacebookMarketingValidAdSetStatuses = "IN_PROCESS"
	SourceFacebookMarketingValidAdSetStatusesPaused         SourceFacebookMarketingValidAdSetStatuses = "PAUSED"
	SourceFacebookMarketingValidAdSetStatusesWithIssues     SourceFacebookMarketingValidAdSetStatuses = "WITH_ISSUES"
)

func (e SourceFacebookMarketingValidAdSetStatuses) ToPointer() *SourceFacebookMarketingValidAdSetStatuses {
	return &e
}
func (e *SourceFacebookMarketingValidAdSetStatuses) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "ARCHIVED":
		fallthrough
	case "CAMPAIGN_PAUSED":
		fallthrough
	case "DELETED":
		fallthrough
	case "IN_PROCESS":
		fallthrough
	case "PAUSED":
		fallthrough
	case "WITH_ISSUES":
		*e = SourceFacebookMarketingValidAdSetStatuses(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingValidAdSetStatuses: %v", v)
	}
}

// SourceFacebookMarketingValidCampaignStatuses - An enumeration.
type SourceFacebookMarketingValidCampaignStatuses string

const (
	SourceFacebookMarketingValidCampaignStatusesActive     SourceFacebookMarketingValidCampaignStatuses = "ACTIVE"
	SourceFacebookMarketingValidCampaignStatusesArchived   SourceFacebookMarketingValidCampaignStatuses = "ARCHIVED"
	SourceFacebookMarketingValidCampaignStatusesDeleted    SourceFacebookMarketingValidCampaignStatuses = "DELETED"
	SourceFacebookMarketingValidCampaignStatusesInProcess  SourceFacebookMarketingValidCampaignStatuses = "IN_PROCESS"
	SourceFacebookMarketingValidCampaignStatusesPaused     SourceFacebookMarketingValidCampaignStatuses = "PAUSED"
	SourceFacebookMarketingValidCampaignStatusesWithIssues SourceFacebookMarketingValidCampaignStatuses = "WITH_ISSUES"
)

func (e SourceFacebookMarketingValidCampaignStatuses) ToPointer() *SourceFacebookMarketingValidCampaignStatuses {
	return &e
}
func (e *SourceFacebookMarketingValidCampaignStatuses) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "ARCHIVED":
		fallthrough
	case "DELETED":
		fallthrough
	case "IN_PROCESS":
		fallthrough
	case "PAUSED":
		fallthrough
	case "WITH_ISSUES":
		*e = SourceFacebookMarketingValidCampaignStatuses(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingValidCampaignStatuses: %v", v)
	}
}

type SourceFacebookMarketingSchemasAuthType string

const (
	SourceFacebookMarketingSchemasAuthTypeService SourceFacebookMarketingSchemasAuthType = "Service"
)

func (e SourceFacebookMarketingSchemasAuthType) ToPointer() *SourceFacebookMarketingSchemasAuthType {
	return &e
}
func (e *SourceFacebookMarketingSchemasAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Service":
		*e = SourceFacebookMarketingSchemasAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingSchemasAuthType: %v", v)
	}
}

type SourceFacebookMarketingServiceAccountKeyAuthentication struct {
	// The value of the generated access token. From your App’s Dashboard, click on "Marketing API" then "Tools". Select permissions <b>ads_management, ads_read, read_insights, business_management</b>. Then click on "Get token". See the <a href="https://docs.airbyte.com/integrations/sources/facebook-marketing">docs</a> for more information.
	AccessToken string                                  `json:"access_token"`
	authType    *SourceFacebookMarketingSchemasAuthType `const:"Service" json:"auth_type"`
}

func (s SourceFacebookMarketingServiceAccountKeyAuthentication) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceFacebookMarketingServiceAccountKeyAuthentication) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceFacebookMarketingServiceAccountKeyAuthentication) GetAccessToken() string {
	if o == nil {
		return ""
	}
	return o.AccessToken
}

func (o *SourceFacebookMarketingServiceAccountKeyAuthentication) GetAuthType() *SourceFacebookMarketingSchemasAuthType {
	return SourceFacebookMarketingSchemasAuthTypeService.ToPointer()
}

type SourceFacebookMarketingAuthType string

const (
	SourceFacebookMarketingAuthTypeClient SourceFacebookMarketingAuthType = "Client"
)

func (e SourceFacebookMarketingAuthType) ToPointer() *SourceFacebookMarketingAuthType {
	return &e
}
func (e *SourceFacebookMarketingAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Client":
		*e = SourceFacebookMarketingAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingAuthType: %v", v)
	}
}

type SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth struct {
	// The value of the generated access token. From your App’s Dashboard, click on "Marketing API" then "Tools". Select permissions <b>ads_management, ads_read, read_insights, business_management</b>. Then click on "Get token". See the <a href="https://docs.airbyte.com/integrations/sources/facebook-marketing">docs</a> for more information.
	AccessToken *string                          `json:"access_token,omitempty"`
	authType    *SourceFacebookMarketingAuthType `const:"Client" json:"auth_type"`
	// Client ID for the Facebook Marketing API
	ClientID string `json:"client_id"`
	// Client Secret for the Facebook Marketing API
	ClientSecret string `json:"client_secret"`
}

func (s SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth) GetAccessToken() *string {
	if o == nil {
		return nil
	}
	return o.AccessToken
}

func (o *SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth) GetAuthType() *SourceFacebookMarketingAuthType {
	return SourceFacebookMarketingAuthTypeClient.ToPointer()
}

func (o *SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth) GetClientSecret() string {
	if o == nil {
		return ""
	}
	return o.ClientSecret
}

type SourceFacebookMarketingAuthenticationType string

const (
	SourceFacebookMarketingAuthenticationTypeSourceFacebookMarketingAuthenticateViaFacebookMarketingOauth SourceFacebookMarketingAuthenticationType = "source-facebook-marketing_Authenticate via Facebook Marketing (Oauth)"
	SourceFacebookMarketingAuthenticationTypeSourceFacebookMarketingServiceAccountKeyAuthentication       SourceFacebookMarketingAuthenticationType = "source-facebook-marketing_Service Account Key Authentication"
)

// SourceFacebookMarketingAuthentication - Credentials for connecting to the Facebook Marketing API
type SourceFacebookMarketingAuthentication struct {
	SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth *SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth
	SourceFacebookMarketingServiceAccountKeyAuthentication       *SourceFacebookMarketingServiceAccountKeyAuthentication

	Type SourceFacebookMarketingAuthenticationType
}

func CreateSourceFacebookMarketingAuthenticationSourceFacebookMarketingAuthenticateViaFacebookMarketingOauth(sourceFacebookMarketingAuthenticateViaFacebookMarketingOauth SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth) SourceFacebookMarketingAuthentication {
	typ := SourceFacebookMarketingAuthenticationTypeSourceFacebookMarketingAuthenticateViaFacebookMarketingOauth

	return SourceFacebookMarketingAuthentication{
		SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth: &sourceFacebookMarketingAuthenticateViaFacebookMarketingOauth,
		Type: typ,
	}
}

func CreateSourceFacebookMarketingAuthenticationSourceFacebookMarketingServiceAccountKeyAuthentication(sourceFacebookMarketingServiceAccountKeyAuthentication SourceFacebookMarketingServiceAccountKeyAuthentication) SourceFacebookMarketingAuthentication {
	typ := SourceFacebookMarketingAuthenticationTypeSourceFacebookMarketingServiceAccountKeyAuthentication

	return SourceFacebookMarketingAuthentication{
		SourceFacebookMarketingServiceAccountKeyAuthentication: &sourceFacebookMarketingServiceAccountKeyAuthentication,
		Type: typ,
	}
}

func (u *SourceFacebookMarketingAuthentication) UnmarshalJSON(data []byte) error {

	var sourceFacebookMarketingServiceAccountKeyAuthentication SourceFacebookMarketingServiceAccountKeyAuthentication = SourceFacebookMarketingServiceAccountKeyAuthentication{}
	if err := utils.UnmarshalJSON(data, &sourceFacebookMarketingServiceAccountKeyAuthentication, "", true, true); err == nil {
		u.SourceFacebookMarketingServiceAccountKeyAuthentication = &sourceFacebookMarketingServiceAccountKeyAuthentication
		u.Type = SourceFacebookMarketingAuthenticationTypeSourceFacebookMarketingServiceAccountKeyAuthentication
		return nil
	}

	var sourceFacebookMarketingAuthenticateViaFacebookMarketingOauth SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth = SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth{}
	if err := utils.UnmarshalJSON(data, &sourceFacebookMarketingAuthenticateViaFacebookMarketingOauth, "", true, true); err == nil {
		u.SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth = &sourceFacebookMarketingAuthenticateViaFacebookMarketingOauth
		u.Type = SourceFacebookMarketingAuthenticationTypeSourceFacebookMarketingAuthenticateViaFacebookMarketingOauth
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for SourceFacebookMarketingAuthentication", string(data))
}

func (u SourceFacebookMarketingAuthentication) MarshalJSON() ([]byte, error) {
	if u.SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth != nil {
		return utils.MarshalJSON(u.SourceFacebookMarketingAuthenticateViaFacebookMarketingOauth, "", true)
	}

	if u.SourceFacebookMarketingServiceAccountKeyAuthentication != nil {
		return utils.MarshalJSON(u.SourceFacebookMarketingServiceAccountKeyAuthentication, "", true)
	}

	return nil, errors.New("could not marshal union type SourceFacebookMarketingAuthentication: all fields are null")
}

// SourceFacebookMarketingValidActionBreakdowns - An enumeration.
type SourceFacebookMarketingValidActionBreakdowns string

const (
	SourceFacebookMarketingValidActionBreakdownsActionCanvasComponentName SourceFacebookMarketingValidActionBreakdowns = "action_canvas_component_name"
	SourceFacebookMarketingValidActionBreakdownsActionCarouselCardID      SourceFacebookMarketingValidActionBreakdowns = "action_carousel_card_id"
	SourceFacebookMarketingValidActionBreakdownsActionCarouselCardName    SourceFacebookMarketingValidActionBreakdowns = "action_carousel_card_name"
	SourceFacebookMarketingValidActionBreakdownsActionDestination         SourceFacebookMarketingValidActionBreakdowns = "action_destination"
	SourceFacebookMarketingValidActionBreakdownsActionDevice              SourceFacebookMarketingValidActionBreakdowns = "action_device"
	SourceFacebookMarketingValidActionBreakdownsActionReaction            SourceFacebookMarketingValidActionBreakdowns = "action_reaction"
	SourceFacebookMarketingValidActionBreakdownsActionTargetID            SourceFacebookMarketingValidActionBreakdowns = "action_target_id"
	SourceFacebookMarketingValidActionBreakdownsActionType                SourceFacebookMarketingValidActionBreakdowns = "action_type"
	SourceFacebookMarketingValidActionBreakdownsActionVideoSound          SourceFacebookMarketingValidActionBreakdowns = "action_video_sound"
	SourceFacebookMarketingValidActionBreakdownsActionVideoType           SourceFacebookMarketingValidActionBreakdowns = "action_video_type"
	SourceFacebookMarketingValidActionBreakdownsStandardEventContentType  SourceFacebookMarketingValidActionBreakdowns = "standard_event_content_type"
)

func (e SourceFacebookMarketingValidActionBreakdowns) ToPointer() *SourceFacebookMarketingValidActionBreakdowns {
	return &e
}
func (e *SourceFacebookMarketingValidActionBreakdowns) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "action_canvas_component_name":
		fallthrough
	case "action_carousel_card_id":
		fallthrough
	case "action_carousel_card_name":
		fallthrough
	case "action_destination":
		fallthrough
	case "action_device":
		fallthrough
	case "action_reaction":
		fallthrough
	case "action_target_id":
		fallthrough
	case "action_type":
		fallthrough
	case "action_video_sound":
		fallthrough
	case "action_video_type":
		fallthrough
	case "standard_event_content_type":
		*e = SourceFacebookMarketingValidActionBreakdowns(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingValidActionBreakdowns: %v", v)
	}
}

// SourceFacebookMarketingActionReportTime - Determines the report time of action stats. For example, if a person saw the ad on Jan 1st but converted on Jan 2nd, when you query the API with action_report_time=impression, you see a conversion on Jan 1st. When you query the API with action_report_time=conversion, you see a conversion on Jan 2nd.
type SourceFacebookMarketingActionReportTime string

const (
	SourceFacebookMarketingActionReportTimeConversion SourceFacebookMarketingActionReportTime = "conversion"
	SourceFacebookMarketingActionReportTimeImpression SourceFacebookMarketingActionReportTime = "impression"
	SourceFacebookMarketingActionReportTimeMixed      SourceFacebookMarketingActionReportTime = "mixed"
)

func (e SourceFacebookMarketingActionReportTime) ToPointer() *SourceFacebookMarketingActionReportTime {
	return &e
}
func (e *SourceFacebookMarketingActionReportTime) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "conversion":
		fallthrough
	case "impression":
		fallthrough
	case "mixed":
		*e = SourceFacebookMarketingActionReportTime(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingActionReportTime: %v", v)
	}
}

// SourceFacebookMarketingValidBreakdowns - An enumeration.
type SourceFacebookMarketingValidBreakdowns string

const (
	SourceFacebookMarketingValidBreakdownsAdFormatAsset                             SourceFacebookMarketingValidBreakdowns = "ad_format_asset"
	SourceFacebookMarketingValidBreakdownsAge                                       SourceFacebookMarketingValidBreakdowns = "age"
	SourceFacebookMarketingValidBreakdownsAppID                                     SourceFacebookMarketingValidBreakdowns = "app_id"
	SourceFacebookMarketingValidBreakdownsBodyAsset                                 SourceFacebookMarketingValidBreakdowns = "body_asset"
	SourceFacebookMarketingValidBreakdownsCallToActionAsset                         SourceFacebookMarketingValidBreakdowns = "call_to_action_asset"
	SourceFacebookMarketingValidBreakdownsCoarseConversionValue                     SourceFacebookMarketingValidBreakdowns = "coarse_conversion_value"
	SourceFacebookMarketingValidBreakdownsCountry                                   SourceFacebookMarketingValidBreakdowns = "country"
	SourceFacebookMarketingValidBreakdownsDescriptionAsset                          SourceFacebookMarketingValidBreakdowns = "description_asset"
	SourceFacebookMarketingValidBreakdownsDevicePlatform                            SourceFacebookMarketingValidBreakdowns = "device_platform"
	SourceFacebookMarketingValidBreakdownsDma                                       SourceFacebookMarketingValidBreakdowns = "dma"
	SourceFacebookMarketingValidBreakdownsFidelityType                              SourceFacebookMarketingValidBreakdowns = "fidelity_type"
	SourceFacebookMarketingValidBreakdownsFrequencyValue                            SourceFacebookMarketingValidBreakdowns = "frequency_value"
	SourceFacebookMarketingValidBreakdownsGender                                    SourceFacebookMarketingValidBreakdowns = "gender"
	SourceFacebookMarketingValidBreakdownsHourlyStatsAggregatedByAdvertiserTimeZone SourceFacebookMarketingValidBreakdowns = "hourly_stats_aggregated_by_advertiser_time_zone"
	SourceFacebookMarketingValidBreakdownsHourlyStatsAggregatedByAudienceTimeZone   SourceFacebookMarketingValidBreakdowns = "hourly_stats_aggregated_by_audience_time_zone"
	SourceFacebookMarketingValidBreakdownsHsid                                      SourceFacebookMarketingValidBreakdowns = "hsid"
	SourceFacebookMarketingValidBreakdownsImageAsset                                SourceFacebookMarketingValidBreakdowns = "image_asset"
	SourceFacebookMarketingValidBreakdownsImpressionDevice                          SourceFacebookMarketingValidBreakdowns = "impression_device"
	SourceFacebookMarketingValidBreakdownsIsConversionIDModeled                     SourceFacebookMarketingValidBreakdowns = "is_conversion_id_modeled"
	SourceFacebookMarketingValidBreakdownsLandingDestination                        SourceFacebookMarketingValidBreakdowns = "landing_destination"
	SourceFacebookMarketingValidBreakdownsLinkURLAsset                              SourceFacebookMarketingValidBreakdowns = "link_url_asset"
	SourceFacebookMarketingValidBreakdownsMarketingMessagesBtnName                  SourceFacebookMarketingValidBreakdowns = "marketing_messages_btn_name"
	SourceFacebookMarketingValidBreakdownsMdsaLandingDestination                    SourceFacebookMarketingValidBreakdowns = "mdsa_landing_destination"
	SourceFacebookMarketingValidBreakdownsMediaAssetURL                             SourceFacebookMarketingValidBreakdowns = "media_asset_url"
	SourceFacebookMarketingValidBreakdownsMediaCreator                              SourceFacebookMarketingValidBreakdowns = "media_creator"
	SourceFacebookMarketingValidBreakdownsMediaDestinationURL                       SourceFacebookMarketingValidBreakdowns = "media_destination_url"
	SourceFacebookMarketingValidBreakdownsMediaFormat                               SourceFacebookMarketingValidBreakdowns = "media_format"
	SourceFacebookMarketingValidBreakdownsMediaOriginURL                            SourceFacebookMarketingValidBreakdowns = "media_origin_url"
	SourceFacebookMarketingValidBreakdownsMediaTextContent                          SourceFacebookMarketingValidBreakdowns = "media_text_content"
	SourceFacebookMarketingValidBreakdownsMmm                                       SourceFacebookMarketingValidBreakdowns = "mmm"
	SourceFacebookMarketingValidBreakdownsPlacePageID                               SourceFacebookMarketingValidBreakdowns = "place_page_id"
	SourceFacebookMarketingValidBreakdownsPlatformPosition                          SourceFacebookMarketingValidBreakdowns = "platform_position"
	SourceFacebookMarketingValidBreakdownsPostbackSequenceIndex                     SourceFacebookMarketingValidBreakdowns = "postback_sequence_index"
	SourceFacebookMarketingValidBreakdownsProductID                                 SourceFacebookMarketingValidBreakdowns = "product_id"
	SourceFacebookMarketingValidBreakdownsPublisherPlatform                         SourceFacebookMarketingValidBreakdowns = "publisher_platform"
	SourceFacebookMarketingValidBreakdownsRedownload                                SourceFacebookMarketingValidBreakdowns = "redownload"
	SourceFacebookMarketingValidBreakdownsRegion                                    SourceFacebookMarketingValidBreakdowns = "region"
	SourceFacebookMarketingValidBreakdownsSkanCampaignID                            SourceFacebookMarketingValidBreakdowns = "skan_campaign_id"
	SourceFacebookMarketingValidBreakdownsSkanConversionID                          SourceFacebookMarketingValidBreakdowns = "skan_conversion_id"
	SourceFacebookMarketingValidBreakdownsSkanVersion                               SourceFacebookMarketingValidBreakdowns = "skan_version"
	SourceFacebookMarketingValidBreakdownsStandardEventContentType                  SourceFacebookMarketingValidBreakdowns = "standard_event_content_type"
	SourceFacebookMarketingValidBreakdownsTitleAsset                                SourceFacebookMarketingValidBreakdowns = "title_asset"
	SourceFacebookMarketingValidBreakdownsVideoAsset                                SourceFacebookMarketingValidBreakdowns = "video_asset"
)

func (e SourceFacebookMarketingValidBreakdowns) ToPointer() *SourceFacebookMarketingValidBreakdowns {
	return &e
}
func (e *SourceFacebookMarketingValidBreakdowns) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ad_format_asset":
		fallthrough
	case "age":
		fallthrough
	case "app_id":
		fallthrough
	case "body_asset":
		fallthrough
	case "call_to_action_asset":
		fallthrough
	case "coarse_conversion_value":
		fallthrough
	case "country":
		fallthrough
	case "description_asset":
		fallthrough
	case "device_platform":
		fallthrough
	case "dma":
		fallthrough
	case "fidelity_type":
		fallthrough
	case "frequency_value":
		fallthrough
	case "gender":
		fallthrough
	case "hourly_stats_aggregated_by_advertiser_time_zone":
		fallthrough
	case "hourly_stats_aggregated_by_audience_time_zone":
		fallthrough
	case "hsid":
		fallthrough
	case "image_asset":
		fallthrough
	case "impression_device":
		fallthrough
	case "is_conversion_id_modeled":
		fallthrough
	case "landing_destination":
		fallthrough
	case "link_url_asset":
		fallthrough
	case "marketing_messages_btn_name":
		fallthrough
	case "mdsa_landing_destination":
		fallthrough
	case "media_asset_url":
		fallthrough
	case "media_creator":
		fallthrough
	case "media_destination_url":
		fallthrough
	case "media_format":
		fallthrough
	case "media_origin_url":
		fallthrough
	case "media_text_content":
		fallthrough
	case "mmm":
		fallthrough
	case "place_page_id":
		fallthrough
	case "platform_position":
		fallthrough
	case "postback_sequence_index":
		fallthrough
	case "product_id":
		fallthrough
	case "publisher_platform":
		fallthrough
	case "redownload":
		fallthrough
	case "region":
		fallthrough
	case "skan_campaign_id":
		fallthrough
	case "skan_conversion_id":
		fallthrough
	case "skan_version":
		fallthrough
	case "standard_event_content_type":
		fallthrough
	case "title_asset":
		fallthrough
	case "video_asset":
		*e = SourceFacebookMarketingValidBreakdowns(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingValidBreakdowns: %v", v)
	}
}

// SourceFacebookMarketingValidEnums - An enumeration.
type SourceFacebookMarketingValidEnums string

const (
	SourceFacebookMarketingValidEnumsAccountCurrency                         SourceFacebookMarketingValidEnums = "account_currency"
	SourceFacebookMarketingValidEnumsAccountID                               SourceFacebookMarketingValidEnums = "account_id"
	SourceFacebookMarketingValidEnumsAccountName                             SourceFacebookMarketingValidEnums = "account_name"
	SourceFacebookMarketingValidEnumsActionValues                            SourceFacebookMarketingValidEnums = "action_values"
	SourceFacebookMarketingValidEnumsActions                                 SourceFacebookMarketingValidEnums = "actions"
	SourceFacebookMarketingValidEnumsAdClickActions                          SourceFacebookMarketingValidEnums = "ad_click_actions"
	SourceFacebookMarketingValidEnumsAdID                                    SourceFacebookMarketingValidEnums = "ad_id"
	SourceFacebookMarketingValidEnumsAdImpressionActions                     SourceFacebookMarketingValidEnums = "ad_impression_actions"
	SourceFacebookMarketingValidEnumsAdName                                  SourceFacebookMarketingValidEnums = "ad_name"
	SourceFacebookMarketingValidEnumsAdsetEnd                                SourceFacebookMarketingValidEnums = "adset_end"
	SourceFacebookMarketingValidEnumsAdsetID                                 SourceFacebookMarketingValidEnums = "adset_id"
	SourceFacebookMarketingValidEnumsAdsetName                               SourceFacebookMarketingValidEnums = "adset_name"
	SourceFacebookMarketingValidEnumsAgeTargeting                            SourceFacebookMarketingValidEnums = "age_targeting"
	SourceFacebookMarketingValidEnumsAttributionSetting                      SourceFacebookMarketingValidEnums = "attribution_setting"
	SourceFacebookMarketingValidEnumsAuctionBid                              SourceFacebookMarketingValidEnums = "auction_bid"
	SourceFacebookMarketingValidEnumsAuctionCompetitiveness                  SourceFacebookMarketingValidEnums = "auction_competitiveness"
	SourceFacebookMarketingValidEnumsAuctionMaxCompetitorBid                 SourceFacebookMarketingValidEnums = "auction_max_competitor_bid"
	SourceFacebookMarketingValidEnumsBuyingType                              SourceFacebookMarketingValidEnums = "buying_type"
	SourceFacebookMarketingValidEnumsCampaignID                              SourceFacebookMarketingValidEnums = "campaign_id"
	SourceFacebookMarketingValidEnumsCampaignName                            SourceFacebookMarketingValidEnums = "campaign_name"
	SourceFacebookMarketingValidEnumsCanvasAvgViewPercent                    SourceFacebookMarketingValidEnums = "canvas_avg_view_percent"
	SourceFacebookMarketingValidEnumsCanvasAvgViewTime                       SourceFacebookMarketingValidEnums = "canvas_avg_view_time"
	SourceFacebookMarketingValidEnumsCatalogSegmentActions                   SourceFacebookMarketingValidEnums = "catalog_segment_actions"
	SourceFacebookMarketingValidEnumsCatalogSegmentValue                     SourceFacebookMarketingValidEnums = "catalog_segment_value"
	SourceFacebookMarketingValidEnumsCatalogSegmentValueMobilePurchaseRoas   SourceFacebookMarketingValidEnums = "catalog_segment_value_mobile_purchase_roas"
	SourceFacebookMarketingValidEnumsCatalogSegmentValueOmniPurchaseRoas     SourceFacebookMarketingValidEnums = "catalog_segment_value_omni_purchase_roas"
	SourceFacebookMarketingValidEnumsCatalogSegmentValueWebsitePurchaseRoas  SourceFacebookMarketingValidEnums = "catalog_segment_value_website_purchase_roas"
	SourceFacebookMarketingValidEnumsClicks                                  SourceFacebookMarketingValidEnums = "clicks"
	SourceFacebookMarketingValidEnumsConversionRateRanking                   SourceFacebookMarketingValidEnums = "conversion_rate_ranking"
	SourceFacebookMarketingValidEnumsConversionValues                        SourceFacebookMarketingValidEnums = "conversion_values"
	SourceFacebookMarketingValidEnumsConversions                             SourceFacebookMarketingValidEnums = "conversions"
	SourceFacebookMarketingValidEnumsConvertedProductQuantity                SourceFacebookMarketingValidEnums = "converted_product_quantity"
	SourceFacebookMarketingValidEnumsConvertedProductValue                   SourceFacebookMarketingValidEnums = "converted_product_value"
	SourceFacebookMarketingValidEnumsCostPer15SecVideoView                   SourceFacebookMarketingValidEnums = "cost_per_15_sec_video_view"
	SourceFacebookMarketingValidEnumsCostPer2SecContinuousVideoView          SourceFacebookMarketingValidEnums = "cost_per_2_sec_continuous_video_view"
	SourceFacebookMarketingValidEnumsCostPerActionType                       SourceFacebookMarketingValidEnums = "cost_per_action_type"
	SourceFacebookMarketingValidEnumsCostPerAdClick                          SourceFacebookMarketingValidEnums = "cost_per_ad_click"
	SourceFacebookMarketingValidEnumsCostPerConversion                       SourceFacebookMarketingValidEnums = "cost_per_conversion"
	SourceFacebookMarketingValidEnumsCostPerDdaCountbyConvs                  SourceFacebookMarketingValidEnums = "cost_per_dda_countby_convs"
	SourceFacebookMarketingValidEnumsCostPerEstimatedAdRecallers             SourceFacebookMarketingValidEnums = "cost_per_estimated_ad_recallers"
	SourceFacebookMarketingValidEnumsCostPerInlineLinkClick                  SourceFacebookMarketingValidEnums = "cost_per_inline_link_click"
	SourceFacebookMarketingValidEnumsCostPerInlinePostEngagement             SourceFacebookMarketingValidEnums = "cost_per_inline_post_engagement"
	SourceFacebookMarketingValidEnumsCostPerOneThousandAdImpression          SourceFacebookMarketingValidEnums = "cost_per_one_thousand_ad_impression"
	SourceFacebookMarketingValidEnumsCostPerOutboundClick                    SourceFacebookMarketingValidEnums = "cost_per_outbound_click"
	SourceFacebookMarketingValidEnumsCostPerThruplay                         SourceFacebookMarketingValidEnums = "cost_per_thruplay"
	SourceFacebookMarketingValidEnumsCostPerUniqueActionType                 SourceFacebookMarketingValidEnums = "cost_per_unique_action_type"
	SourceFacebookMarketingValidEnumsCostPerUniqueClick                      SourceFacebookMarketingValidEnums = "cost_per_unique_click"
	SourceFacebookMarketingValidEnumsCostPerUniqueConversion                 SourceFacebookMarketingValidEnums = "cost_per_unique_conversion"
	SourceFacebookMarketingValidEnumsCostPerUniqueInlineLinkClick            SourceFacebookMarketingValidEnums = "cost_per_unique_inline_link_click"
	SourceFacebookMarketingValidEnumsCostPerUniqueOutboundClick              SourceFacebookMarketingValidEnums = "cost_per_unique_outbound_click"
	SourceFacebookMarketingValidEnumsCpc                                     SourceFacebookMarketingValidEnums = "cpc"
	SourceFacebookMarketingValidEnumsCpm                                     SourceFacebookMarketingValidEnums = "cpm"
	SourceFacebookMarketingValidEnumsCpp                                     SourceFacebookMarketingValidEnums = "cpp"
	SourceFacebookMarketingValidEnumsCreatedTime                             SourceFacebookMarketingValidEnums = "created_time"
	SourceFacebookMarketingValidEnumsCreativeMediaType                       SourceFacebookMarketingValidEnums = "creative_media_type"
	SourceFacebookMarketingValidEnumsCtr                                     SourceFacebookMarketingValidEnums = "ctr"
	SourceFacebookMarketingValidEnumsDateStart                               SourceFacebookMarketingValidEnums = "date_start"
	SourceFacebookMarketingValidEnumsDateStop                                SourceFacebookMarketingValidEnums = "date_stop"
	SourceFacebookMarketingValidEnumsDdaCountbyConvs                         SourceFacebookMarketingValidEnums = "dda_countby_convs"
	SourceFacebookMarketingValidEnumsDdaResults                              SourceFacebookMarketingValidEnums = "dda_results"
	SourceFacebookMarketingValidEnumsEngagementRateRanking                   SourceFacebookMarketingValidEnums = "engagement_rate_ranking"
	SourceFacebookMarketingValidEnumsEstimatedAdRecallRate                   SourceFacebookMarketingValidEnums = "estimated_ad_recall_rate"
	SourceFacebookMarketingValidEnumsEstimatedAdRecallRateLowerBound         SourceFacebookMarketingValidEnums = "estimated_ad_recall_rate_lower_bound"
	SourceFacebookMarketingValidEnumsEstimatedAdRecallRateUpperBound         SourceFacebookMarketingValidEnums = "estimated_ad_recall_rate_upper_bound"
	SourceFacebookMarketingValidEnumsEstimatedAdRecallers                    SourceFacebookMarketingValidEnums = "estimated_ad_recallers"
	SourceFacebookMarketingValidEnumsEstimatedAdRecallersLowerBound          SourceFacebookMarketingValidEnums = "estimated_ad_recallers_lower_bound"
	SourceFacebookMarketingValidEnumsEstimatedAdRecallersUpperBound          SourceFacebookMarketingValidEnums = "estimated_ad_recallers_upper_bound"
	SourceFacebookMarketingValidEnumsFrequency                               SourceFacebookMarketingValidEnums = "frequency"
	SourceFacebookMarketingValidEnumsFullViewImpressions                     SourceFacebookMarketingValidEnums = "full_view_impressions"
	SourceFacebookMarketingValidEnumsFullViewReach                           SourceFacebookMarketingValidEnums = "full_view_reach"
	SourceFacebookMarketingValidEnumsGenderTargeting                         SourceFacebookMarketingValidEnums = "gender_targeting"
	SourceFacebookMarketingValidEnumsImpressions                             SourceFacebookMarketingValidEnums = "impressions"
	SourceFacebookMarketingValidEnumsInlineLinkClickCtr                      SourceFacebookMarketingValidEnums = "inline_link_click_ctr"
	SourceFacebookMarketingValidEnumsInlineLinkClicks                        SourceFacebookMarketingValidEnums = "inline_link_clicks"
	SourceFacebookMarketingValidEnumsInlinePostEngagement                    SourceFacebookMarketingValidEnums = "inline_post_engagement"
	SourceFacebookMarketingValidEnumsInstagramUpcomingEventRemindersSet      SourceFacebookMarketingValidEnums = "instagram_upcoming_event_reminders_set"
	SourceFacebookMarketingValidEnumsInstantExperienceClicksToOpen           SourceFacebookMarketingValidEnums = "instant_experience_clicks_to_open"
	SourceFacebookMarketingValidEnumsInstantExperienceClicksToStart          SourceFacebookMarketingValidEnums = "instant_experience_clicks_to_start"
	SourceFacebookMarketingValidEnumsInstantExperienceOutboundClicks         SourceFacebookMarketingValidEnums = "instant_experience_outbound_clicks"
	SourceFacebookMarketingValidEnumsInteractiveComponentTap                 SourceFacebookMarketingValidEnums = "interactive_component_tap"
	SourceFacebookMarketingValidEnumsLabels                                  SourceFacebookMarketingValidEnums = "labels"
	SourceFacebookMarketingValidEnumsLocation                                SourceFacebookMarketingValidEnums = "location"
	SourceFacebookMarketingValidEnumsMarketingMessagesCostPerDelivered       SourceFacebookMarketingValidEnums = "marketing_messages_cost_per_delivered"
	SourceFacebookMarketingValidEnumsMarketingMessagesCostPerLinkBtnClick    SourceFacebookMarketingValidEnums = "marketing_messages_cost_per_link_btn_click"
	SourceFacebookMarketingValidEnumsMarketingMessagesSpend                  SourceFacebookMarketingValidEnums = "marketing_messages_spend"
	SourceFacebookMarketingValidEnumsMobileAppPurchaseRoas                   SourceFacebookMarketingValidEnums = "mobile_app_purchase_roas"
	SourceFacebookMarketingValidEnumsObjective                               SourceFacebookMarketingValidEnums = "objective"
	SourceFacebookMarketingValidEnumsOptimizationGoal                        SourceFacebookMarketingValidEnums = "optimization_goal"
	SourceFacebookMarketingValidEnumsOutboundClicks                          SourceFacebookMarketingValidEnums = "outbound_clicks"
	SourceFacebookMarketingValidEnumsOutboundClicksCtr                       SourceFacebookMarketingValidEnums = "outbound_clicks_ctr"
	SourceFacebookMarketingValidEnumsPlacePageName                           SourceFacebookMarketingValidEnums = "place_page_name"
	SourceFacebookMarketingValidEnumsPurchaseRoas                            SourceFacebookMarketingValidEnums = "purchase_roas"
	SourceFacebookMarketingValidEnumsQualifyingQuestionQualifyAnswerRate     SourceFacebookMarketingValidEnums = "qualifying_question_qualify_answer_rate"
	SourceFacebookMarketingValidEnumsQualityRanking                          SourceFacebookMarketingValidEnums = "quality_ranking"
	SourceFacebookMarketingValidEnumsReach                                   SourceFacebookMarketingValidEnums = "reach"
	SourceFacebookMarketingValidEnumsSocialSpend                             SourceFacebookMarketingValidEnums = "social_spend"
	SourceFacebookMarketingValidEnumsSpend                                   SourceFacebookMarketingValidEnums = "spend"
	SourceFacebookMarketingValidEnumsTotalPostbacks                          SourceFacebookMarketingValidEnums = "total_postbacks"
	SourceFacebookMarketingValidEnumsTotalPostbacksDetailed                  SourceFacebookMarketingValidEnums = "total_postbacks_detailed"
	SourceFacebookMarketingValidEnumsTotalPostbacksDetailedV4                SourceFacebookMarketingValidEnums = "total_postbacks_detailed_v4"
	SourceFacebookMarketingValidEnumsUniqueActions                           SourceFacebookMarketingValidEnums = "unique_actions"
	SourceFacebookMarketingValidEnumsUniqueClicks                            SourceFacebookMarketingValidEnums = "unique_clicks"
	SourceFacebookMarketingValidEnumsUniqueConversions                       SourceFacebookMarketingValidEnums = "unique_conversions"
	SourceFacebookMarketingValidEnumsUniqueCtr                               SourceFacebookMarketingValidEnums = "unique_ctr"
	SourceFacebookMarketingValidEnumsUniqueInlineLinkClickCtr                SourceFacebookMarketingValidEnums = "unique_inline_link_click_ctr"
	SourceFacebookMarketingValidEnumsUniqueInlineLinkClicks                  SourceFacebookMarketingValidEnums = "unique_inline_link_clicks"
	SourceFacebookMarketingValidEnumsUniqueLinkClicksCtr                     SourceFacebookMarketingValidEnums = "unique_link_clicks_ctr"
	SourceFacebookMarketingValidEnumsUniqueOutboundClicks                    SourceFacebookMarketingValidEnums = "unique_outbound_clicks"
	SourceFacebookMarketingValidEnumsUniqueOutboundClicksCtr                 SourceFacebookMarketingValidEnums = "unique_outbound_clicks_ctr"
	SourceFacebookMarketingValidEnumsUniqueVideoContinuous2SecWatchedActions SourceFacebookMarketingValidEnums = "unique_video_continuous_2_sec_watched_actions"
	SourceFacebookMarketingValidEnumsUniqueVideoView15Sec                    SourceFacebookMarketingValidEnums = "unique_video_view_15_sec"
	SourceFacebookMarketingValidEnumsUpdatedTime                             SourceFacebookMarketingValidEnums = "updated_time"
	SourceFacebookMarketingValidEnumsVideo15SecWatchedActions                SourceFacebookMarketingValidEnums = "video_15_sec_watched_actions"
	SourceFacebookMarketingValidEnumsVideo30SecWatchedActions                SourceFacebookMarketingValidEnums = "video_30_sec_watched_actions"
	SourceFacebookMarketingValidEnumsVideoAvgTimeWatchedActions              SourceFacebookMarketingValidEnums = "video_avg_time_watched_actions"
	SourceFacebookMarketingValidEnumsVideoContinuous2SecWatchedActions       SourceFacebookMarketingValidEnums = "video_continuous_2_sec_watched_actions"
	SourceFacebookMarketingValidEnumsVideoP100WatchedActions                 SourceFacebookMarketingValidEnums = "video_p100_watched_actions"
	SourceFacebookMarketingValidEnumsVideoP25WatchedActions                  SourceFacebookMarketingValidEnums = "video_p25_watched_actions"
	SourceFacebookMarketingValidEnumsVideoP50WatchedActions                  SourceFacebookMarketingValidEnums = "video_p50_watched_actions"
	SourceFacebookMarketingValidEnumsVideoP75WatchedActions                  SourceFacebookMarketingValidEnums = "video_p75_watched_actions"
	SourceFacebookMarketingValidEnumsVideoP95WatchedActions                  SourceFacebookMarketingValidEnums = "video_p95_watched_actions"
	SourceFacebookMarketingValidEnumsVideoPlayActions                        SourceFacebookMarketingValidEnums = "video_play_actions"
	SourceFacebookMarketingValidEnumsVideoPlayCurveActions                   SourceFacebookMarketingValidEnums = "video_play_curve_actions"
	SourceFacebookMarketingValidEnumsVideoPlayRetention0To15sActions         SourceFacebookMarketingValidEnums = "video_play_retention_0_to_15s_actions"
	SourceFacebookMarketingValidEnumsVideoPlayRetention20To60sActions        SourceFacebookMarketingValidEnums = "video_play_retention_20_to_60s_actions"
	SourceFacebookMarketingValidEnumsVideoPlayRetentionGraphActions          SourceFacebookMarketingValidEnums = "video_play_retention_graph_actions"
	SourceFacebookMarketingValidEnumsVideoThruplayWatchedActions             SourceFacebookMarketingValidEnums = "video_thruplay_watched_actions"
	SourceFacebookMarketingValidEnumsVideoTimeWatchedActions                 SourceFacebookMarketingValidEnums = "video_time_watched_actions"
	SourceFacebookMarketingValidEnumsWebsiteCtr                              SourceFacebookMarketingValidEnums = "website_ctr"
	SourceFacebookMarketingValidEnumsWebsitePurchaseRoas                     SourceFacebookMarketingValidEnums = "website_purchase_roas"
	SourceFacebookMarketingValidEnumsWishBid                                 SourceFacebookMarketingValidEnums = "wish_bid"
)

func (e SourceFacebookMarketingValidEnums) ToPointer() *SourceFacebookMarketingValidEnums {
	return &e
}
func (e *SourceFacebookMarketingValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account_currency":
		fallthrough
	case "account_id":
		fallthrough
	case "account_name":
		fallthrough
	case "action_values":
		fallthrough
	case "actions":
		fallthrough
	case "ad_click_actions":
		fallthrough
	case "ad_id":
		fallthrough
	case "ad_impression_actions":
		fallthrough
	case "ad_name":
		fallthrough
	case "adset_end":
		fallthrough
	case "adset_id":
		fallthrough
	case "adset_name":
		fallthrough
	case "age_targeting":
		fallthrough
	case "attribution_setting":
		fallthrough
	case "auction_bid":
		fallthrough
	case "auction_competitiveness":
		fallthrough
	case "auction_max_competitor_bid":
		fallthrough
	case "buying_type":
		fallthrough
	case "campaign_id":
		fallthrough
	case "campaign_name":
		fallthrough
	case "canvas_avg_view_percent":
		fallthrough
	case "canvas_avg_view_time":
		fallthrough
	case "catalog_segment_actions":
		fallthrough
	case "catalog_segment_value":
		fallthrough
	case "catalog_segment_value_mobile_purchase_roas":
		fallthrough
	case "catalog_segment_value_omni_purchase_roas":
		fallthrough
	case "catalog_segment_value_website_purchase_roas":
		fallthrough
	case "clicks":
		fallthrough
	case "conversion_rate_ranking":
		fallthrough
	case "conversion_values":
		fallthrough
	case "conversions":
		fallthrough
	case "converted_product_quantity":
		fallthrough
	case "converted_product_value":
		fallthrough
	case "cost_per_15_sec_video_view":
		fallthrough
	case "cost_per_2_sec_continuous_video_view":
		fallthrough
	case "cost_per_action_type":
		fallthrough
	case "cost_per_ad_click":
		fallthrough
	case "cost_per_conversion":
		fallthrough
	case "cost_per_dda_countby_convs":
		fallthrough
	case "cost_per_estimated_ad_recallers":
		fallthrough
	case "cost_per_inline_link_click":
		fallthrough
	case "cost_per_inline_post_engagement":
		fallthrough
	case "cost_per_one_thousand_ad_impression":
		fallthrough
	case "cost_per_outbound_click":
		fallthrough
	case "cost_per_thruplay":
		fallthrough
	case "cost_per_unique_action_type":
		fallthrough
	case "cost_per_unique_click":
		fallthrough
	case "cost_per_unique_conversion":
		fallthrough
	case "cost_per_unique_inline_link_click":
		fallthrough
	case "cost_per_unique_outbound_click":
		fallthrough
	case "cpc":
		fallthrough
	case "cpm":
		fallthrough
	case "cpp":
		fallthrough
	case "created_time":
		fallthrough
	case "creative_media_type":
		fallthrough
	case "ctr":
		fallthrough
	case "date_start":
		fallthrough
	case "date_stop":
		fallthrough
	case "dda_countby_convs":
		fallthrough
	case "dda_results":
		fallthrough
	case "engagement_rate_ranking":
		fallthrough
	case "estimated_ad_recall_rate":
		fallthrough
	case "estimated_ad_recall_rate_lower_bound":
		fallthrough
	case "estimated_ad_recall_rate_upper_bound":
		fallthrough
	case "estimated_ad_recallers":
		fallthrough
	case "estimated_ad_recallers_lower_bound":
		fallthrough
	case "estimated_ad_recallers_upper_bound":
		fallthrough
	case "frequency":
		fallthrough
	case "full_view_impressions":
		fallthrough
	case "full_view_reach":
		fallthrough
	case "gender_targeting":
		fallthrough
	case "impressions":
		fallthrough
	case "inline_link_click_ctr":
		fallthrough
	case "inline_link_clicks":
		fallthrough
	case "inline_post_engagement":
		fallthrough
	case "instagram_upcoming_event_reminders_set":
		fallthrough
	case "instant_experience_clicks_to_open":
		fallthrough
	case "instant_experience_clicks_to_start":
		fallthrough
	case "instant_experience_outbound_clicks":
		fallthrough
	case "interactive_component_tap":
		fallthrough
	case "labels":
		fallthrough
	case "location":
		fallthrough
	case "marketing_messages_cost_per_delivered":
		fallthrough
	case "marketing_messages_cost_per_link_btn_click":
		fallthrough
	case "marketing_messages_spend":
		fallthrough
	case "mobile_app_purchase_roas":
		fallthrough
	case "objective":
		fallthrough
	case "optimization_goal":
		fallthrough
	case "outbound_clicks":
		fallthrough
	case "outbound_clicks_ctr":
		fallthrough
	case "place_page_name":
		fallthrough
	case "purchase_roas":
		fallthrough
	case "qualifying_question_qualify_answer_rate":
		fallthrough
	case "quality_ranking":
		fallthrough
	case "reach":
		fallthrough
	case "social_spend":
		fallthrough
	case "spend":
		fallthrough
	case "total_postbacks":
		fallthrough
	case "total_postbacks_detailed":
		fallthrough
	case "total_postbacks_detailed_v4":
		fallthrough
	case "unique_actions":
		fallthrough
	case "unique_clicks":
		fallthrough
	case "unique_conversions":
		fallthrough
	case "unique_ctr":
		fallthrough
	case "unique_inline_link_click_ctr":
		fallthrough
	case "unique_inline_link_clicks":
		fallthrough
	case "unique_link_clicks_ctr":
		fallthrough
	case "unique_outbound_clicks":
		fallthrough
	case "unique_outbound_clicks_ctr":
		fallthrough
	case "unique_video_continuous_2_sec_watched_actions":
		fallthrough
	case "unique_video_view_15_sec":
		fallthrough
	case "updated_time":
		fallthrough
	case "video_15_sec_watched_actions":
		fallthrough
	case "video_30_sec_watched_actions":
		fallthrough
	case "video_avg_time_watched_actions":
		fallthrough
	case "video_continuous_2_sec_watched_actions":
		fallthrough
	case "video_p100_watched_actions":
		fallthrough
	case "video_p25_watched_actions":
		fallthrough
	case "video_p50_watched_actions":
		fallthrough
	case "video_p75_watched_actions":
		fallthrough
	case "video_p95_watched_actions":
		fallthrough
	case "video_play_actions":
		fallthrough
	case "video_play_curve_actions":
		fallthrough
	case "video_play_retention_0_to_15s_actions":
		fallthrough
	case "video_play_retention_20_to_60s_actions":
		fallthrough
	case "video_play_retention_graph_actions":
		fallthrough
	case "video_thruplay_watched_actions":
		fallthrough
	case "video_time_watched_actions":
		fallthrough
	case "website_ctr":
		fallthrough
	case "website_purchase_roas":
		fallthrough
	case "wish_bid":
		*e = SourceFacebookMarketingValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingValidEnums: %v", v)
	}
}

// SourceFacebookMarketingLevel - Chosen level for API
type SourceFacebookMarketingLevel string

const (
	SourceFacebookMarketingLevelAd       SourceFacebookMarketingLevel = "ad"
	SourceFacebookMarketingLevelAdset    SourceFacebookMarketingLevel = "adset"
	SourceFacebookMarketingLevelCampaign SourceFacebookMarketingLevel = "campaign"
	SourceFacebookMarketingLevelAccount  SourceFacebookMarketingLevel = "account"
)

func (e SourceFacebookMarketingLevel) ToPointer() *SourceFacebookMarketingLevel {
	return &e
}
func (e *SourceFacebookMarketingLevel) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ad":
		fallthrough
	case "adset":
		fallthrough
	case "campaign":
		fallthrough
	case "account":
		*e = SourceFacebookMarketingLevel(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceFacebookMarketingLevel: %v", v)
	}
}

// SourceFacebookMarketingInsightConfig - Config for custom insights
type SourceFacebookMarketingInsightConfig struct {
	// A list of chosen action_breakdowns for action_breakdowns
	ActionBreakdowns []SourceFacebookMarketingValidActionBreakdowns `json:"action_breakdowns,omitempty"`
	// Determines the report time of action stats. For example, if a person saw the ad on Jan 1st but converted on Jan 2nd, when you query the API with action_report_time=impression, you see a conversion on Jan 1st. When you query the API with action_report_time=conversion, you see a conversion on Jan 2nd.
	ActionReportTime *SourceFacebookMarketingActionReportTime `default:"mixed" json:"action_report_time"`
	// A list of chosen breakdowns for breakdowns
	Breakdowns []SourceFacebookMarketingValidBreakdowns `json:"breakdowns,omitempty"`
	// The date until which you'd like to replicate data for this stream, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this end date will be replicated. Not setting this option will result in always syncing the latest data.
	EndDate *time.Time `json:"end_date,omitempty"`
	// A list of chosen fields for fields parameter
	Fields []SourceFacebookMarketingValidEnums `json:"fields,omitempty"`
	// The insights job timeout
	InsightsJobTimeout *int64 `default:"60" json:"insights_job_timeout"`
	// The attribution window
	InsightsLookbackWindow *int64 `default:"28" json:"insights_lookback_window"`
	// Chosen level for API
	Level *SourceFacebookMarketingLevel `default:"ad" json:"level"`
	// The name value of insight
	Name string `json:"name"`
	// The date from which you'd like to replicate data for this stream, in the format YYYY-MM-DDT00:00:00Z.
	StartDate *time.Time `json:"start_date,omitempty"`
	// Time window in days by which to aggregate statistics. The sync will be chunked into N day intervals, where N is the number of days you specified. For example, if you set this value to 7, then all statistics will be reported as 7-day aggregates by starting from the start_date. If the start and end dates are October 1st and October 30th, then the connector will output 5 records: 01 - 06, 07 - 13, 14 - 20, 21 - 27, and 28 - 30 (3 days only). The minimum allowed value for this field is 1, and the maximum is 89.
	TimeIncrement *int64 `default:"1" json:"time_increment"`
}

func (s SourceFacebookMarketingInsightConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceFacebookMarketingInsightConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceFacebookMarketingInsightConfig) GetActionBreakdowns() []SourceFacebookMarketingValidActionBreakdowns {
	if o == nil {
		return nil
	}
	return o.ActionBreakdowns
}

func (o *SourceFacebookMarketingInsightConfig) GetActionReportTime() *SourceFacebookMarketingActionReportTime {
	if o == nil {
		return nil
	}
	return o.ActionReportTime
}

func (o *SourceFacebookMarketingInsightConfig) GetBreakdowns() []SourceFacebookMarketingValidBreakdowns {
	if o == nil {
		return nil
	}
	return o.Breakdowns
}

func (o *SourceFacebookMarketingInsightConfig) GetEndDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *SourceFacebookMarketingInsightConfig) GetFields() []SourceFacebookMarketingValidEnums {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *SourceFacebookMarketingInsightConfig) GetInsightsJobTimeout() *int64 {
	if o == nil {
		return nil
	}
	return o.InsightsJobTimeout
}

func (o *SourceFacebookMarketingInsightConfig) GetInsightsLookbackWindow() *int64 {
	if o == nil {
		return nil
	}
	return o.InsightsLookbackWindow
}

func (o *SourceFacebookMarketingInsightConfig) GetLevel() *SourceFacebookMarketingLevel {
	if o == nil {
		return nil
	}
	return o.Level
}

func (o *SourceFacebookMarketingInsightConfig) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *SourceFacebookMarketingInsightConfig) GetStartDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartDate
}

func (o *SourceFacebookMarketingInsightConfig) GetTimeIncrement() *int64 {
	if o == nil {
		return nil
	}
	return o.TimeIncrement
}

type FacebookMarketing string

const (
	FacebookMarketingFacebookMarketing FacebookMarketing = "facebook-marketing"
)

func (e FacebookMarketing) ToPointer() *FacebookMarketing {
	return &e
}
func (e *FacebookMarketing) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "facebook-marketing":
		*e = FacebookMarketing(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FacebookMarketing: %v", v)
	}
}

type SourceFacebookMarketing struct {
	// The value of the generated access token. From your App’s Dashboard, click on "Marketing API" then "Tools". Select permissions <b>ads_management, ads_read, read_insights, business_management</b>. Then click on "Get token". See the <a href="https://docs.airbyte.com/integrations/sources/facebook-marketing">docs</a> for more information.
	AccessToken *string `json:"access_token,omitempty"`
	// The Facebook Ad account ID(s) to pull data from. The Ad account ID number is in the account dropdown menu or in your browser's address bar of your <a href="https://adsmanager.facebook.com/adsmanager/">Meta Ads Manager</a>. See the <a href="https://www.facebook.com/business/help/1492627900875762">docs</a> for more information.
	AccountIds []string `json:"account_ids"`
	// Select the statuses you want to be loaded in the stream. If no specific statuses are selected, the API's default behavior applies, and some statuses may be filtered out.
	AdStatuses []SourceFacebookMarketingValidAdStatuses `json:"ad_statuses,omitempty"`
	// Select the statuses you want to be loaded in the stream. If no specific statuses are selected, the API's default behavior applies, and some statuses may be filtered out.
	AdsetStatuses []SourceFacebookMarketingValidAdSetStatuses `json:"adset_statuses,omitempty"`
	// Select the statuses you want to be loaded in the stream. If no specific statuses are selected, the API's default behavior applies, and some statuses may be filtered out.
	CampaignStatuses []SourceFacebookMarketingValidCampaignStatuses `json:"campaign_statuses,omitempty"`
	// Credentials for connecting to the Facebook Marketing API
	Credentials SourceFacebookMarketingAuthentication `json:"credentials"`
	// A list which contains ad statistics entries, each entry must have a name and can contains fields, breakdowns or action_breakdowns. Click on "add" to fill this field.
	CustomInsights []SourceFacebookMarketingInsightConfig `json:"custom_insights,omitempty"`
	// The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this end date will be replicated. Not setting this option will result in always syncing the latest data.
	EndDate *time.Time `json:"end_date,omitempty"`
	// Set to active if you want to fetch the thumbnail_url and store the result in thumbnail_data_url for each Ad Creative.
	FetchThumbnailImages *bool `default:"false" json:"fetch_thumbnail_images"`
	// Insights Job Timeout establishes the maximum amount of time (in minutes) of waiting for the report job to complete. When timeout is reached the job is considered failed and we are trying to request smaller amount of data by breaking the job to few smaller ones. If you definitely know that 60 minutes is not enough for your report to be processed then you can decrease the timeout value, so we start breaking job to smaller parts faster.
	InsightsJobTimeout *int64 `default:"60" json:"insights_job_timeout"`
	// The attribution window. Facebook freezes insight data 28 days after it was generated, which means that all data from the past 28 days may have changed since we last emitted it, so you can retrieve refreshed insights from the past by setting this parameter. If you set a custom lookback window value in Facebook account, please provide the same value here.
	InsightsLookbackWindow *int64 `default:"28" json:"insights_lookback_window"`
	// Page size used when sending requests to Facebook API to specify number of records per page when response has pagination. Most users do not need to set this field unless they specifically need to tune the connector to address specific issues or use cases.
	PageSize   *int64            `default:"100" json:"page_size"`
	sourceType FacebookMarketing `const:"facebook-marketing" json:"sourceType"`
	// The date from which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. If not set then all data will be replicated for usual streams and only last 2 years for insight streams.
	StartDate *time.Time `json:"start_date,omitempty"`
}

func (s SourceFacebookMarketing) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceFacebookMarketing) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceFacebookMarketing) GetAccessToken() *string {
	if o == nil {
		return nil
	}
	return o.AccessToken
}

func (o *SourceFacebookMarketing) GetAccountIds() []string {
	if o == nil {
		return []string{}
	}
	return o.AccountIds
}

func (o *SourceFacebookMarketing) GetAdStatuses() []SourceFacebookMarketingValidAdStatuses {
	if o == nil {
		return nil
	}
	return o.AdStatuses
}

func (o *SourceFacebookMarketing) GetAdsetStatuses() []SourceFacebookMarketingValidAdSetStatuses {
	if o == nil {
		return nil
	}
	return o.AdsetStatuses
}

func (o *SourceFacebookMarketing) GetCampaignStatuses() []SourceFacebookMarketingValidCampaignStatuses {
	if o == nil {
		return nil
	}
	return o.CampaignStatuses
}

func (o *SourceFacebookMarketing) GetCredentials() SourceFacebookMarketingAuthentication {
	if o == nil {
		return SourceFacebookMarketingAuthentication{}
	}
	return o.Credentials
}

func (o *SourceFacebookMarketing) GetCustomInsights() []SourceFacebookMarketingInsightConfig {
	if o == nil {
		return nil
	}
	return o.CustomInsights
}

func (o *SourceFacebookMarketing) GetEndDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *SourceFacebookMarketing) GetFetchThumbnailImages() *bool {
	if o == nil {
		return nil
	}
	return o.FetchThumbnailImages
}

func (o *SourceFacebookMarketing) GetInsightsJobTimeout() *int64 {
	if o == nil {
		return nil
	}
	return o.InsightsJobTimeout
}

func (o *SourceFacebookMarketing) GetInsightsLookbackWindow() *int64 {
	if o == nil {
		return nil
	}
	return o.InsightsLookbackWindow
}

func (o *SourceFacebookMarketing) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *SourceFacebookMarketing) GetSourceType() FacebookMarketing {
	return FacebookMarketingFacebookMarketing
}

func (o *SourceFacebookMarketing) GetStartDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartDate
}
