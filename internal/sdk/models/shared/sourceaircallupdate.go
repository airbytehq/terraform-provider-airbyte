// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type SourceAircallUpdate struct {
	// App ID found at settings https://dashboard.aircall.io/integrations/api-keys
	APIID string `json:"api_id"`
	// App token found at settings (Ref- https://dashboard.aircall.io/integrations/api-keys)
	APIToken string `json:"api_token"`
	// Date time filter for incremental filter, Specify which date to extract from.
	StartDate time.Time `json:"start_date"`
}

func (s SourceAircallUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceAircallUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceAircallUpdate) GetAPIID() string {
	if o == nil {
		return ""
	}
	return o.APIID
}

func (o *SourceAircallUpdate) GetAPIToken() string {
	if o == nil {
		return ""
	}
	return o.APIToken
}

func (o *SourceAircallUpdate) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}
