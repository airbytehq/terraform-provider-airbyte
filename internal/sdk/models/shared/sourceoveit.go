// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Oveit string

const (
	OveitOveit Oveit = "oveit"
)

func (e Oveit) ToPointer() *Oveit {
	return &e
}
func (e *Oveit) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "oveit":
		*e = Oveit(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Oveit: %v", v)
	}
}

type SourceOveit struct {
	// Oveit's login Email
	Email string `json:"email"`
	// Oveit's login Password
	Password   string `json:"password"`
	sourceType Oveit  `const:"oveit" json:"sourceType"`
}

func (s SourceOveit) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceOveit) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceOveit) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *SourceOveit) GetPassword() string {
	if o == nil {
		return ""
	}
	return o.Password
}

func (o *SourceOveit) GetSourceType() Oveit {
	return OveitOveit
}
