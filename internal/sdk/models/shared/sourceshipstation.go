// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Shipstation string

const (
	ShipstationShipstation Shipstation = "shipstation"
)

func (e Shipstation) ToPointer() *Shipstation {
	return &e
}
func (e *Shipstation) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shipstation":
		*e = Shipstation(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Shipstation: %v", v)
	}
}

type SourceShipstation struct {
	Username   string      `json:"username"`
	Password   *string     `json:"password,omitempty"`
	sourceType Shipstation `const:"shipstation" json:"sourceType"`
}

func (s SourceShipstation) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceShipstation) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceShipstation) GetUsername() string {
	if o == nil {
		return ""
	}
	return o.Username
}

func (o *SourceShipstation) GetPassword() *string {
	if o == nil {
		return nil
	}
	return o.Password
}

func (o *SourceShipstation) GetSourceType() Shipstation {
	return ShipstationShipstation
}
