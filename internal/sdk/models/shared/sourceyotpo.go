// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type Yotpo string

const (
	YotpoYotpo Yotpo = "yotpo"
)

func (e Yotpo) ToPointer() *Yotpo {
	return &e
}
func (e *Yotpo) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "yotpo":
		*e = Yotpo(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Yotpo: %v", v)
	}
}

type SourceYotpo struct {
	// Access token recieved as a result of API call to https://api.yotpo.com/oauth/token (Ref- https://apidocs.yotpo.com/reference/yotpo-authentication)
	AccessToken string `json:"access_token"`
	// App key found at settings (Ref- https://settings.yotpo.com/#/general_settings)
	AppKey string `json:"app_key"`
	// Email address registered with yotpo.
	Email      *string `default:"example@gmail.com" json:"email"`
	sourceType Yotpo   `const:"yotpo" json:"sourceType"`
	// Date time filter for incremental filter, Specify which date to extract from.
	StartDate time.Time `json:"start_date"`
}

func (s SourceYotpo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceYotpo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceYotpo) GetAccessToken() string {
	if o == nil {
		return ""
	}
	return o.AccessToken
}

func (o *SourceYotpo) GetAppKey() string {
	if o == nil {
		return ""
	}
	return o.AppKey
}

func (o *SourceYotpo) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *SourceYotpo) GetSourceType() Yotpo {
	return YotpoYotpo
}

func (o *SourceYotpo) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}
