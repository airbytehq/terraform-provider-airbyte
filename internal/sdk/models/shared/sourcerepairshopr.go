// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Repairshopr string

const (
	RepairshoprRepairshopr Repairshopr = "repairshopr"
)

func (e Repairshopr) ToPointer() *Repairshopr {
	return &e
}
func (e *Repairshopr) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "repairshopr":
		*e = Repairshopr(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Repairshopr: %v", v)
	}
}

type SourceRepairshopr struct {
	APIKey     string      `json:"api_key"`
	Subdomain  string      `json:"subdomain"`
	sourceType Repairshopr `const:"repairshopr" json:"sourceType"`
}

func (s SourceRepairshopr) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceRepairshopr) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceRepairshopr) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceRepairshopr) GetSubdomain() string {
	if o == nil {
		return ""
	}
	return o.Subdomain
}

func (o *SourceRepairshopr) GetSourceType() Repairshopr {
	return RepairshoprRepairshopr
}
