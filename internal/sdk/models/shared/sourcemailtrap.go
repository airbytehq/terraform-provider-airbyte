// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Mailtrap string

const (
	MailtrapMailtrap Mailtrap = "mailtrap"
)

func (e Mailtrap) ToPointer() *Mailtrap {
	return &e
}
func (e *Mailtrap) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mailtrap":
		*e = Mailtrap(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Mailtrap: %v", v)
	}
}

type SourceMailtrap struct {
	// API token to use. Find it at https://mailtrap.io/account
	APIToken   string   `json:"api_token"`
	sourceType Mailtrap `const:"mailtrap" json:"sourceType"`
}

func (s SourceMailtrap) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceMailtrap) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceMailtrap) GetAPIToken() string {
	if o == nil {
		return ""
	}
	return o.APIToken
}

func (o *SourceMailtrap) GetSourceType() Mailtrap {
	return MailtrapMailtrap
}
