// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Hellobaton string

const (
	HellobatonHellobaton Hellobaton = "hellobaton"
)

func (e Hellobaton) ToPointer() *Hellobaton {
	return &e
}
func (e *Hellobaton) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "hellobaton":
		*e = Hellobaton(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hellobaton: %v", v)
	}
}

type SourceHellobaton struct {
	// authentication key required to access the api endpoints
	APIKey string `json:"api_key"`
	// Company name that generates your base api url
	Company    string     `json:"company"`
	sourceType Hellobaton `const:"hellobaton" json:"sourceType"`
}

func (s SourceHellobaton) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceHellobaton) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceHellobaton) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceHellobaton) GetCompany() string {
	if o == nil {
		return ""
	}
	return o.Company
}

func (o *SourceHellobaton) GetSourceType() Hellobaton {
	return HellobatonHellobaton
}
