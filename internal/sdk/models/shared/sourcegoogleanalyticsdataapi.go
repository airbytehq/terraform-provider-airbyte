// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/types"
)

type SourceGoogleAnalyticsDataAPISchemasAuthType string

const (
	SourceGoogleAnalyticsDataAPISchemasAuthTypeService SourceGoogleAnalyticsDataAPISchemasAuthType = "Service"
)

func (e SourceGoogleAnalyticsDataAPISchemasAuthType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasAuthType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Service":
		*e = SourceGoogleAnalyticsDataAPISchemasAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasAuthType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication struct {
	authType *SourceGoogleAnalyticsDataAPISchemasAuthType `const:"Service" json:"auth_type,omitempty"`
	// The JSON key linked to the service account used for authorization. For steps on obtaining this key, refer to <a href="https://docs.airbyte.com/integrations/sources/google-analytics-data-api/#setup-guide">the setup guide</a>.
	CredentialsJSON string `json:"credentials_json"`
}

func (s SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication) GetAuthType() *SourceGoogleAnalyticsDataAPISchemasAuthType {
	return SourceGoogleAnalyticsDataAPISchemasAuthTypeService.ToPointer()
}

func (o *SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication) GetCredentialsJSON() string {
	if o == nil {
		return ""
	}
	return o.CredentialsJSON
}

type SourceGoogleAnalyticsDataAPIAuthType string

const (
	SourceGoogleAnalyticsDataAPIAuthTypeClient SourceGoogleAnalyticsDataAPIAuthType = "Client"
)

func (e SourceGoogleAnalyticsDataAPIAuthType) ToPointer() *SourceGoogleAnalyticsDataAPIAuthType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPIAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Client":
		*e = SourceGoogleAnalyticsDataAPIAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPIAuthType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth struct {
	// Access Token for making authenticated requests.
	AccessToken *string                               `json:"access_token,omitempty"`
	authType    *SourceGoogleAnalyticsDataAPIAuthType `const:"Client" json:"auth_type,omitempty"`
	// The Client ID of your Google Analytics developer application.
	ClientID string `json:"client_id"`
	// The Client Secret of your Google Analytics developer application.
	ClientSecret string `json:"client_secret"`
	// The token for obtaining a new access token.
	RefreshToken string `json:"refresh_token"`
}

func (s SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth) GetAccessToken() *string {
	if o == nil {
		return nil
	}
	return o.AccessToken
}

func (o *SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth) GetAuthType() *SourceGoogleAnalyticsDataAPIAuthType {
	return SourceGoogleAnalyticsDataAPIAuthTypeClient.ToPointer()
}

func (o *SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth) GetClientSecret() string {
	if o == nil {
		return ""
	}
	return o.ClientSecret
}

func (o *SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth) GetRefreshToken() string {
	if o == nil {
		return ""
	}
	return o.RefreshToken
}

type SourceGoogleAnalyticsDataAPICredentialsType string

const (
	SourceGoogleAnalyticsDataAPICredentialsTypeSourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth      SourceGoogleAnalyticsDataAPICredentialsType = "source-google-analytics-data-api_Authenticate via Google (Oauth)"
	SourceGoogleAnalyticsDataAPICredentialsTypeSourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication SourceGoogleAnalyticsDataAPICredentialsType = "source-google-analytics-data-api_Service Account Key Authentication"
)

// SourceGoogleAnalyticsDataAPICredentials - Credentials for the service
type SourceGoogleAnalyticsDataAPICredentials struct {
	SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth      *SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth
	SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication *SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication

	Type SourceGoogleAnalyticsDataAPICredentialsType
}

func CreateSourceGoogleAnalyticsDataAPICredentialsSourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth(sourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth) SourceGoogleAnalyticsDataAPICredentials {
	typ := SourceGoogleAnalyticsDataAPICredentialsTypeSourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth

	return SourceGoogleAnalyticsDataAPICredentials{
		SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth: &sourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPICredentialsSourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication(sourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication) SourceGoogleAnalyticsDataAPICredentials {
	typ := SourceGoogleAnalyticsDataAPICredentialsTypeSourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication

	return SourceGoogleAnalyticsDataAPICredentials{
		SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication: &sourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPICredentials) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication = SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication = &sourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication
		u.Type = SourceGoogleAnalyticsDataAPICredentialsTypeSourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication
		return nil
	}

	var sourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth = SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth = &sourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth
		u.Type = SourceGoogleAnalyticsDataAPICredentialsTypeSourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPICredentials) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPIAuthenticateViaGoogleOauth, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPIServiceAccountKeyAuthentication, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

// SourceGoogleAnalyticsDataAPICohortReportSettings - Optional settings for a cohort report.
type SourceGoogleAnalyticsDataAPICohortReportSettings struct {
	// If true, accumulates the result from first touch day to the end day
	Accumulate *bool `json:"accumulate,omitempty"`
}

func (o *SourceGoogleAnalyticsDataAPICohortReportSettings) GetAccumulate() *bool {
	if o == nil {
		return nil
	}
	return o.Accumulate
}

type SourceGoogleAnalyticsDataAPIDateRange struct {
	EndDate   types.Date `json:"endDate"`
	StartDate types.Date `json:"startDate"`
}

func (s SourceGoogleAnalyticsDataAPIDateRange) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPIDateRange) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPIDateRange) GetEndDate() types.Date {
	if o == nil {
		return types.Date{}
	}
	return o.EndDate
}

func (o *SourceGoogleAnalyticsDataAPIDateRange) GetStartDate() types.Date {
	if o == nil {
		return types.Date{}
	}
	return o.StartDate
}

// SourceGoogleAnalyticsDataAPIDimension - Dimension used by the cohort. Required and only supports `firstSessionDate`
type SourceGoogleAnalyticsDataAPIDimension string

const (
	SourceGoogleAnalyticsDataAPIDimensionFirstSessionDate SourceGoogleAnalyticsDataAPIDimension = "firstSessionDate"
)

func (e SourceGoogleAnalyticsDataAPIDimension) ToPointer() *SourceGoogleAnalyticsDataAPIDimension {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPIDimension) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "firstSessionDate":
		*e = SourceGoogleAnalyticsDataAPIDimension(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPIDimension: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPICohorts struct {
	DateRange SourceGoogleAnalyticsDataAPIDateRange `json:"dateRange"`
	// Dimension used by the cohort. Required and only supports `firstSessionDate`
	Dimension SourceGoogleAnalyticsDataAPIDimension `json:"dimension"`
	// Assigns a name to this cohort. If not set, cohorts are named by their zero based index cohort_0, cohort_1, etc.
	Name *string `json:"name,omitempty"`
}

func (o *SourceGoogleAnalyticsDataAPICohorts) GetDateRange() SourceGoogleAnalyticsDataAPIDateRange {
	if o == nil {
		return SourceGoogleAnalyticsDataAPIDateRange{}
	}
	return o.DateRange
}

func (o *SourceGoogleAnalyticsDataAPICohorts) GetDimension() SourceGoogleAnalyticsDataAPIDimension {
	if o == nil {
		return SourceGoogleAnalyticsDataAPIDimension("")
	}
	return o.Dimension
}

func (o *SourceGoogleAnalyticsDataAPICohorts) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// SourceGoogleAnalyticsDataAPIGranularity - The granularity used to interpret the startOffset and endOffset for the extended reporting date range for a cohort report.
type SourceGoogleAnalyticsDataAPIGranularity string

const (
	SourceGoogleAnalyticsDataAPIGranularityGranularityUnspecified SourceGoogleAnalyticsDataAPIGranularity = "GRANULARITY_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPIGranularityDaily                  SourceGoogleAnalyticsDataAPIGranularity = "DAILY"
	SourceGoogleAnalyticsDataAPIGranularityWeekly                 SourceGoogleAnalyticsDataAPIGranularity = "WEEKLY"
	SourceGoogleAnalyticsDataAPIGranularityMonthly                SourceGoogleAnalyticsDataAPIGranularity = "MONTHLY"
)

func (e SourceGoogleAnalyticsDataAPIGranularity) ToPointer() *SourceGoogleAnalyticsDataAPIGranularity {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPIGranularity) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GRANULARITY_UNSPECIFIED":
		fallthrough
	case "DAILY":
		fallthrough
	case "WEEKLY":
		fallthrough
	case "MONTHLY":
		*e = SourceGoogleAnalyticsDataAPIGranularity(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPIGranularity: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPICohortsRange struct {
	// Specifies the end date of the extended reporting date range for a cohort report.
	EndOffset int64 `json:"endOffset"`
	// The granularity used to interpret the startOffset and endOffset for the extended reporting date range for a cohort report.
	Granularity SourceGoogleAnalyticsDataAPIGranularity `json:"granularity"`
	// Specifies the start date of the extended reporting date range for a cohort report.
	StartOffset *int64 `json:"startOffset,omitempty"`
}

func (o *SourceGoogleAnalyticsDataAPICohortsRange) GetEndOffset() int64 {
	if o == nil {
		return 0
	}
	return o.EndOffset
}

func (o *SourceGoogleAnalyticsDataAPICohortsRange) GetGranularity() SourceGoogleAnalyticsDataAPIGranularity {
	if o == nil {
		return SourceGoogleAnalyticsDataAPIGranularity("")
	}
	return o.Granularity
}

func (o *SourceGoogleAnalyticsDataAPICohortsRange) GetStartOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.StartOffset
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayEnabled string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayEnabledTrue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayEnabled = "true"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayEnabled) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayEnabled {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayEnabled) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "true":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayEnabled(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayEnabled: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasEnabled struct {
	// Optional settings for a cohort report.
	CohortReportSettings *SourceGoogleAnalyticsDataAPICohortReportSettings             `json:"cohortReportSettings,omitempty"`
	Cohorts              []SourceGoogleAnalyticsDataAPICohorts                         `json:"cohorts,omitempty"`
	CohortsRange         *SourceGoogleAnalyticsDataAPICohortsRange                     `json:"cohortsRange,omitempty"`
	enabled              *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayEnabled `const:"true" json:"enabled,omitempty"`
}

func (s SourceGoogleAnalyticsDataAPISchemasEnabled) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasEnabled) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasEnabled) GetCohortReportSettings() *SourceGoogleAnalyticsDataAPICohortReportSettings {
	if o == nil {
		return nil
	}
	return o.CohortReportSettings
}

func (o *SourceGoogleAnalyticsDataAPISchemasEnabled) GetCohorts() []SourceGoogleAnalyticsDataAPICohorts {
	if o == nil {
		return nil
	}
	return o.Cohorts
}

func (o *SourceGoogleAnalyticsDataAPISchemasEnabled) GetCohortsRange() *SourceGoogleAnalyticsDataAPICohortsRange {
	if o == nil {
		return nil
	}
	return o.CohortsRange
}

func (o *SourceGoogleAnalyticsDataAPISchemasEnabled) GetEnabled() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayEnabled {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayEnabledTrue.ToPointer()
}

type SourceGoogleAnalyticsDataAPIEnabled string

const (
	SourceGoogleAnalyticsDataAPIEnabledFalse SourceGoogleAnalyticsDataAPIEnabled = "false"
)

func (e SourceGoogleAnalyticsDataAPIEnabled) ToPointer() *SourceGoogleAnalyticsDataAPIEnabled {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPIEnabled) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "false":
		*e = SourceGoogleAnalyticsDataAPIEnabled(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPIEnabled: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPIDisabled struct {
	enabled *SourceGoogleAnalyticsDataAPIEnabled `const:"false" json:"enabled,omitempty"`
}

func (s SourceGoogleAnalyticsDataAPIDisabled) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPIDisabled) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPIDisabled) GetEnabled() *SourceGoogleAnalyticsDataAPIEnabled {
	return SourceGoogleAnalyticsDataAPIEnabledFalse.ToPointer()
}

type SourceGoogleAnalyticsDataAPICohortReportsType string

const (
	SourceGoogleAnalyticsDataAPICohortReportsTypeSourceGoogleAnalyticsDataAPIDisabled       SourceGoogleAnalyticsDataAPICohortReportsType = "source-google-analytics-data-api_Disabled"
	SourceGoogleAnalyticsDataAPICohortReportsTypeSourceGoogleAnalyticsDataAPISchemasEnabled SourceGoogleAnalyticsDataAPICohortReportsType = "source-google-analytics-data-api_Schemas_Enabled"
)

// SourceGoogleAnalyticsDataAPICohortReports - Cohort reports creates a time series of user retention for the cohort.
type SourceGoogleAnalyticsDataAPICohortReports struct {
	SourceGoogleAnalyticsDataAPIDisabled       *SourceGoogleAnalyticsDataAPIDisabled
	SourceGoogleAnalyticsDataAPISchemasEnabled *SourceGoogleAnalyticsDataAPISchemasEnabled

	Type SourceGoogleAnalyticsDataAPICohortReportsType
}

func CreateSourceGoogleAnalyticsDataAPICohortReportsSourceGoogleAnalyticsDataAPIDisabled(sourceGoogleAnalyticsDataAPIDisabled SourceGoogleAnalyticsDataAPIDisabled) SourceGoogleAnalyticsDataAPICohortReports {
	typ := SourceGoogleAnalyticsDataAPICohortReportsTypeSourceGoogleAnalyticsDataAPIDisabled

	return SourceGoogleAnalyticsDataAPICohortReports{
		SourceGoogleAnalyticsDataAPIDisabled: &sourceGoogleAnalyticsDataAPIDisabled,
		Type:                                 typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPICohortReportsSourceGoogleAnalyticsDataAPISchemasEnabled(sourceGoogleAnalyticsDataAPISchemasEnabled SourceGoogleAnalyticsDataAPISchemasEnabled) SourceGoogleAnalyticsDataAPICohortReports {
	typ := SourceGoogleAnalyticsDataAPICohortReportsTypeSourceGoogleAnalyticsDataAPISchemasEnabled

	return SourceGoogleAnalyticsDataAPICohortReports{
		SourceGoogleAnalyticsDataAPISchemasEnabled: &sourceGoogleAnalyticsDataAPISchemasEnabled,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPICohortReports) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPIDisabled SourceGoogleAnalyticsDataAPIDisabled = SourceGoogleAnalyticsDataAPIDisabled{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPIDisabled, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPIDisabled = &sourceGoogleAnalyticsDataAPIDisabled
		u.Type = SourceGoogleAnalyticsDataAPICohortReportsTypeSourceGoogleAnalyticsDataAPIDisabled
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasEnabled SourceGoogleAnalyticsDataAPISchemasEnabled = SourceGoogleAnalyticsDataAPISchemasEnabled{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasEnabled, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasEnabled = &sourceGoogleAnalyticsDataAPISchemasEnabled
		u.Type = SourceGoogleAnalyticsDataAPICohortReportsTypeSourceGoogleAnalyticsDataAPISchemasEnabled
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPICohortReports) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPIDisabled != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPIDisabled, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasEnabled != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasEnabled, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterNameBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterName = "betweenFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "betweenFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasDoubleValue struct {
	Value     float64                                                                       `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasInt64Value struct {
	Value     string                                                         `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPIFromValueType string

const (
	SourceGoogleAnalyticsDataAPIFromValueTypeSourceGoogleAnalyticsDataAPISchemasInt64Value  SourceGoogleAnalyticsDataAPIFromValueType = "source-google-analytics-data-api_Schemas_int64Value"
	SourceGoogleAnalyticsDataAPIFromValueTypeSourceGoogleAnalyticsDataAPISchemasDoubleValue SourceGoogleAnalyticsDataAPIFromValueType = "source-google-analytics-data-api_Schemas_doubleValue"
)

type SourceGoogleAnalyticsDataAPIFromValue struct {
	SourceGoogleAnalyticsDataAPISchemasInt64Value  *SourceGoogleAnalyticsDataAPISchemasInt64Value
	SourceGoogleAnalyticsDataAPISchemasDoubleValue *SourceGoogleAnalyticsDataAPISchemasDoubleValue

	Type SourceGoogleAnalyticsDataAPIFromValueType
}

func CreateSourceGoogleAnalyticsDataAPIFromValueSourceGoogleAnalyticsDataAPISchemasInt64Value(sourceGoogleAnalyticsDataAPISchemasInt64Value SourceGoogleAnalyticsDataAPISchemasInt64Value) SourceGoogleAnalyticsDataAPIFromValue {
	typ := SourceGoogleAnalyticsDataAPIFromValueTypeSourceGoogleAnalyticsDataAPISchemasInt64Value

	return SourceGoogleAnalyticsDataAPIFromValue{
		SourceGoogleAnalyticsDataAPISchemasInt64Value: &sourceGoogleAnalyticsDataAPISchemasInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPIFromValueSourceGoogleAnalyticsDataAPISchemasDoubleValue(sourceGoogleAnalyticsDataAPISchemasDoubleValue SourceGoogleAnalyticsDataAPISchemasDoubleValue) SourceGoogleAnalyticsDataAPIFromValue {
	typ := SourceGoogleAnalyticsDataAPIFromValueTypeSourceGoogleAnalyticsDataAPISchemasDoubleValue

	return SourceGoogleAnalyticsDataAPIFromValue{
		SourceGoogleAnalyticsDataAPISchemasDoubleValue: &sourceGoogleAnalyticsDataAPISchemasDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPIFromValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasInt64Value SourceGoogleAnalyticsDataAPISchemasInt64Value = SourceGoogleAnalyticsDataAPISchemasInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasInt64Value = &sourceGoogleAnalyticsDataAPISchemasInt64Value
		u.Type = SourceGoogleAnalyticsDataAPIFromValueTypeSourceGoogleAnalyticsDataAPISchemasInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasDoubleValue SourceGoogleAnalyticsDataAPISchemasDoubleValue = SourceGoogleAnalyticsDataAPISchemasDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasDoubleValue = &sourceGoogleAnalyticsDataAPISchemasDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPIFromValueTypeSourceGoogleAnalyticsDataAPISchemasDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPIFromValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter4ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter4ValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter4ValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter4ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter4ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter4ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter4ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter4ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue struct {
	Value     float64                                                                                        `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter4ValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter4ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter4ValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value struct {
	Value     string                                                                                        `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPIToValueType string

const (
	SourceGoogleAnalyticsDataAPIToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value  SourceGoogleAnalyticsDataAPIToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_int64Value"
	SourceGoogleAnalyticsDataAPIToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue SourceGoogleAnalyticsDataAPIToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_doubleValue"
)

type SourceGoogleAnalyticsDataAPIToValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue

	Type SourceGoogleAnalyticsDataAPIToValueType
}

func CreateSourceGoogleAnalyticsDataAPIToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value) SourceGoogleAnalyticsDataAPIToValue {
	typ := SourceGoogleAnalyticsDataAPIToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value

	return SourceGoogleAnalyticsDataAPIToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPIToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue) SourceGoogleAnalyticsDataAPIToValue {
	typ := SourceGoogleAnalyticsDataAPIToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue

	return SourceGoogleAnalyticsDataAPIToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPIToValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value
		u.Type = SourceGoogleAnalyticsDataAPIToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPIToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPIToValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPIBetweenFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterName `const:"betweenFilter" json:"filter_name"`
	FromValue  SourceGoogleAnalyticsDataAPIFromValue                                          `json:"fromValue"`
	ToValue    SourceGoogleAnalyticsDataAPIToValue                                            `json:"toValue"`
}

func (s SourceGoogleAnalyticsDataAPIBetweenFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPIBetweenFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPIBetweenFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterNameBetweenFilter
}

func (o *SourceGoogleAnalyticsDataAPIBetweenFilter) GetFromValue() SourceGoogleAnalyticsDataAPIFromValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPIFromValue{}
	}
	return o.FromValue
}

func (o *SourceGoogleAnalyticsDataAPIBetweenFilter) GetToValue() SourceGoogleAnalyticsDataAPIToValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPIToValue{}
	}
	return o.ToValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterNameNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterName = "numericFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "numericFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasValidEnumsOperationUnspecified SourceGoogleAnalyticsDataAPISchemasValidEnums = "OPERATION_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasValidEnumsEqual                SourceGoogleAnalyticsDataAPISchemasValidEnums = "EQUAL"
	SourceGoogleAnalyticsDataAPISchemasValidEnumsLessThan             SourceGoogleAnalyticsDataAPISchemasValidEnums = "LESS_THAN"
	SourceGoogleAnalyticsDataAPISchemasValidEnumsLessThanOrEqual      SourceGoogleAnalyticsDataAPISchemasValidEnums = "LESS_THAN_OR_EQUAL"
	SourceGoogleAnalyticsDataAPISchemasValidEnumsGreaterThan          SourceGoogleAnalyticsDataAPISchemasValidEnums = "GREATER_THAN"
	SourceGoogleAnalyticsDataAPISchemasValidEnumsGreaterThanOrEqual   SourceGoogleAnalyticsDataAPISchemasValidEnums = "GREATER_THAN_OR_EQUAL"
)

func (e SourceGoogleAnalyticsDataAPISchemasValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPERATION_UNSPECIFIED":
		fallthrough
	case "EQUAL":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "LESS_THAN_OR_EQUAL":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "GREATER_THAN_OR_EQUAL":
		*e = SourceGoogleAnalyticsDataAPISchemasValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPIDoubleValue struct {
	Value     float64                                      `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPIDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPIDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPIDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPIDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasValueType {
	return SourceGoogleAnalyticsDataAPISchemasValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPIValueType string

const (
	SourceGoogleAnalyticsDataAPIValueTypeInt64Value SourceGoogleAnalyticsDataAPIValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPIValueType) ToPointer() *SourceGoogleAnalyticsDataAPIValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPIValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPIValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPIValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPIInt64Value struct {
	Value     string                                `json:"value"`
	valueType SourceGoogleAnalyticsDataAPIValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPIInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPIInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPIInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPIInt64Value) GetValueType() SourceGoogleAnalyticsDataAPIValueType {
	return SourceGoogleAnalyticsDataAPIValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPIValueUnionType string

const (
	SourceGoogleAnalyticsDataAPIValueUnionTypeSourceGoogleAnalyticsDataAPIInt64Value  SourceGoogleAnalyticsDataAPIValueUnionType = "source-google-analytics-data-api_int64Value"
	SourceGoogleAnalyticsDataAPIValueUnionTypeSourceGoogleAnalyticsDataAPIDoubleValue SourceGoogleAnalyticsDataAPIValueUnionType = "source-google-analytics-data-api_doubleValue"
)

type SourceGoogleAnalyticsDataAPIValue struct {
	SourceGoogleAnalyticsDataAPIInt64Value  *SourceGoogleAnalyticsDataAPIInt64Value
	SourceGoogleAnalyticsDataAPIDoubleValue *SourceGoogleAnalyticsDataAPIDoubleValue

	Type SourceGoogleAnalyticsDataAPIValueUnionType
}

func CreateSourceGoogleAnalyticsDataAPIValueSourceGoogleAnalyticsDataAPIInt64Value(sourceGoogleAnalyticsDataAPIInt64Value SourceGoogleAnalyticsDataAPIInt64Value) SourceGoogleAnalyticsDataAPIValue {
	typ := SourceGoogleAnalyticsDataAPIValueUnionTypeSourceGoogleAnalyticsDataAPIInt64Value

	return SourceGoogleAnalyticsDataAPIValue{
		SourceGoogleAnalyticsDataAPIInt64Value: &sourceGoogleAnalyticsDataAPIInt64Value,
		Type:                                   typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPIValueSourceGoogleAnalyticsDataAPIDoubleValue(sourceGoogleAnalyticsDataAPIDoubleValue SourceGoogleAnalyticsDataAPIDoubleValue) SourceGoogleAnalyticsDataAPIValue {
	typ := SourceGoogleAnalyticsDataAPIValueUnionTypeSourceGoogleAnalyticsDataAPIDoubleValue

	return SourceGoogleAnalyticsDataAPIValue{
		SourceGoogleAnalyticsDataAPIDoubleValue: &sourceGoogleAnalyticsDataAPIDoubleValue,
		Type:                                    typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPIValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPIInt64Value SourceGoogleAnalyticsDataAPIInt64Value = SourceGoogleAnalyticsDataAPIInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPIInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPIInt64Value = &sourceGoogleAnalyticsDataAPIInt64Value
		u.Type = SourceGoogleAnalyticsDataAPIValueUnionTypeSourceGoogleAnalyticsDataAPIInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPIDoubleValue SourceGoogleAnalyticsDataAPIDoubleValue = SourceGoogleAnalyticsDataAPIDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPIDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPIDoubleValue = &sourceGoogleAnalyticsDataAPIDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPIValueUnionTypeSourceGoogleAnalyticsDataAPIDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPIValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPIInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPIInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPIDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPIDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPINumericFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterName `const:"numericFilter" json:"filter_name"`
	Operation  []SourceGoogleAnalyticsDataAPISchemasValidEnums                 `json:"operation"`
	Value      SourceGoogleAnalyticsDataAPIValue                               `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPINumericFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPINumericFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPINumericFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterNameNumericFilter
}

func (o *SourceGoogleAnalyticsDataAPINumericFilter) GetOperation() []SourceGoogleAnalyticsDataAPISchemasValidEnums {
	if o == nil {
		return []SourceGoogleAnalyticsDataAPISchemasValidEnums{}
	}
	return o.Operation
}

func (o *SourceGoogleAnalyticsDataAPINumericFilter) GetValue() SourceGoogleAnalyticsDataAPIValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPIValue{}
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasFilterNameInListFilter SourceGoogleAnalyticsDataAPISchemasFilterName = "inListFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inListFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPIInListFilter struct {
	CaseSensitive *bool                                         `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasFilterName `const:"inListFilter" json:"filter_name"`
	Values        []string                                      `json:"values"`
}

func (s SourceGoogleAnalyticsDataAPIInListFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPIInListFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPIInListFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPIInListFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasFilterName {
	return SourceGoogleAnalyticsDataAPISchemasFilterNameInListFilter
}

func (o *SourceGoogleAnalyticsDataAPIInListFilter) GetValues() []string {
	if o == nil {
		return []string{}
	}
	return o.Values
}

type SourceGoogleAnalyticsDataAPIFilterName string

const (
	SourceGoogleAnalyticsDataAPIFilterNameStringFilter SourceGoogleAnalyticsDataAPIFilterName = "stringFilter"
)

func (e SourceGoogleAnalyticsDataAPIFilterName) ToPointer() *SourceGoogleAnalyticsDataAPIFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPIFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stringFilter":
		*e = SourceGoogleAnalyticsDataAPIFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPIFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPIValidEnums string

const (
	SourceGoogleAnalyticsDataAPIValidEnumsMatchTypeUnspecified SourceGoogleAnalyticsDataAPIValidEnums = "MATCH_TYPE_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPIValidEnumsExact                SourceGoogleAnalyticsDataAPIValidEnums = "EXACT"
	SourceGoogleAnalyticsDataAPIValidEnumsBeginsWith           SourceGoogleAnalyticsDataAPIValidEnums = "BEGINS_WITH"
	SourceGoogleAnalyticsDataAPIValidEnumsEndsWith             SourceGoogleAnalyticsDataAPIValidEnums = "ENDS_WITH"
	SourceGoogleAnalyticsDataAPIValidEnumsContains             SourceGoogleAnalyticsDataAPIValidEnums = "CONTAINS"
	SourceGoogleAnalyticsDataAPIValidEnumsFullRegexp           SourceGoogleAnalyticsDataAPIValidEnums = "FULL_REGEXP"
	SourceGoogleAnalyticsDataAPIValidEnumsPartialRegexp        SourceGoogleAnalyticsDataAPIValidEnums = "PARTIAL_REGEXP"
)

func (e SourceGoogleAnalyticsDataAPIValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPIValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPIValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MATCH_TYPE_UNSPECIFIED":
		fallthrough
	case "EXACT":
		fallthrough
	case "BEGINS_WITH":
		fallthrough
	case "ENDS_WITH":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "FULL_REGEXP":
		fallthrough
	case "PARTIAL_REGEXP":
		*e = SourceGoogleAnalyticsDataAPIValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPIValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPIStringFilter struct {
	CaseSensitive *bool                                    `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPIFilterName   `const:"stringFilter" json:"filter_name"`
	MatchType     []SourceGoogleAnalyticsDataAPIValidEnums `json:"matchType,omitempty"`
	Value         string                                   `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPIStringFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPIStringFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPIStringFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPIStringFilter) GetFilterName() SourceGoogleAnalyticsDataAPIFilterName {
	return SourceGoogleAnalyticsDataAPIFilterNameStringFilter
}

func (o *SourceGoogleAnalyticsDataAPIStringFilter) GetMatchType() []SourceGoogleAnalyticsDataAPIValidEnums {
	if o == nil {
		return nil
	}
	return o.MatchType
}

func (o *SourceGoogleAnalyticsDataAPIStringFilter) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionTypeSourceGoogleAnalyticsDataAPIStringFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionType = "source-google-analytics-data-api_stringFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionTypeSourceGoogleAnalyticsDataAPIInListFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionType = "source-google-analytics-data-api_inListFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionTypeSourceGoogleAnalyticsDataAPINumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionType = "source-google-analytics-data-api_numericFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionTypeSourceGoogleAnalyticsDataAPIBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionType = "source-google-analytics-data-api_betweenFilter"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter struct {
	SourceGoogleAnalyticsDataAPIStringFilter  *SourceGoogleAnalyticsDataAPIStringFilter
	SourceGoogleAnalyticsDataAPIInListFilter  *SourceGoogleAnalyticsDataAPIInListFilter
	SourceGoogleAnalyticsDataAPINumericFilter *SourceGoogleAnalyticsDataAPINumericFilter
	SourceGoogleAnalyticsDataAPIBetweenFilter *SourceGoogleAnalyticsDataAPIBetweenFilter

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterSourceGoogleAnalyticsDataAPIStringFilter(sourceGoogleAnalyticsDataAPIStringFilter SourceGoogleAnalyticsDataAPIStringFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionTypeSourceGoogleAnalyticsDataAPIStringFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter{
		SourceGoogleAnalyticsDataAPIStringFilter: &sourceGoogleAnalyticsDataAPIStringFilter,
		Type:                                     typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterSourceGoogleAnalyticsDataAPIInListFilter(sourceGoogleAnalyticsDataAPIInListFilter SourceGoogleAnalyticsDataAPIInListFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionTypeSourceGoogleAnalyticsDataAPIInListFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter{
		SourceGoogleAnalyticsDataAPIInListFilter: &sourceGoogleAnalyticsDataAPIInListFilter,
		Type:                                     typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterSourceGoogleAnalyticsDataAPINumericFilter(sourceGoogleAnalyticsDataAPINumericFilter SourceGoogleAnalyticsDataAPINumericFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionTypeSourceGoogleAnalyticsDataAPINumericFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter{
		SourceGoogleAnalyticsDataAPINumericFilter: &sourceGoogleAnalyticsDataAPINumericFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterSourceGoogleAnalyticsDataAPIBetweenFilter(sourceGoogleAnalyticsDataAPIBetweenFilter SourceGoogleAnalyticsDataAPIBetweenFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionTypeSourceGoogleAnalyticsDataAPIBetweenFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter{
		SourceGoogleAnalyticsDataAPIBetweenFilter: &sourceGoogleAnalyticsDataAPIBetweenFilter,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPIInListFilter SourceGoogleAnalyticsDataAPIInListFilter = SourceGoogleAnalyticsDataAPIInListFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPIInListFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPIInListFilter = &sourceGoogleAnalyticsDataAPIInListFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionTypeSourceGoogleAnalyticsDataAPIInListFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPINumericFilter SourceGoogleAnalyticsDataAPINumericFilter = SourceGoogleAnalyticsDataAPINumericFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPINumericFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPINumericFilter = &sourceGoogleAnalyticsDataAPINumericFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionTypeSourceGoogleAnalyticsDataAPINumericFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPIBetweenFilter SourceGoogleAnalyticsDataAPIBetweenFilter = SourceGoogleAnalyticsDataAPIBetweenFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPIBetweenFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPIBetweenFilter = &sourceGoogleAnalyticsDataAPIBetweenFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionTypeSourceGoogleAnalyticsDataAPIBetweenFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPIStringFilter SourceGoogleAnalyticsDataAPIStringFilter = SourceGoogleAnalyticsDataAPIStringFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPIStringFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPIStringFilter = &sourceGoogleAnalyticsDataAPIStringFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterUnionTypeSourceGoogleAnalyticsDataAPIStringFilter
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPIStringFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPIStringFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPIInListFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPIInListFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPINumericFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPINumericFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPIBetweenFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPIBetweenFilter, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterTypeFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterType = "filter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "filter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterType: %v", v)
	}
}

// SourceGoogleAnalyticsDataAPIFilter - A primitive filter. In the same FilterExpression, all of the filter's field names need to be either all dimensions.
type SourceGoogleAnalyticsDataAPIFilter struct {
	FieldName  string                                                                          `json:"field_name"`
	Filter     SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter                     `json:"filter"`
	filterType *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterType `const:"filter" json:"filter_type,omitempty"`
}

func (s SourceGoogleAnalyticsDataAPIFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPIFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPIFilter) GetFieldName() string {
	if o == nil {
		return ""
	}
	return o.FieldName
}

func (o *SourceGoogleAnalyticsDataAPIFilter) GetFilter() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilter{}
	}
	return o.Filter
}

func (o *SourceGoogleAnalyticsDataAPIFilter) GetFilterType() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterTypeFilter.ToPointer()
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterFilterNameBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterFilterName = "betweenFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "betweenFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue struct {
	Value     float64                                                                                                              `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value struct {
	Value     string                                                                                                         `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_3_expression_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_3_expression_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ToValueValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ToValueValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ToValueValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ToValueValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ToValueValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ToValueValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ToValueValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ToValueValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue struct {
	Value     float64                                                                                                                      `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ToValueValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ToValueValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ToValueValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value struct {
	Value     string                                                                                                                `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilter4ValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_3_expression_filter_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_3_expression_filter_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterFilterName `const:"betweenFilter" json:"filter_name"`
	FromValue  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValue                                                        `json:"fromValue"`
	ToValue    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValue                                                          `json:"toValue"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterFilterNameBetweenFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter) GetFromValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFromValue{}
	}
	return o.FromValue
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter) GetToValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayToValue{}
	}
	return o.ToValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterNameNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterName = "numericFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "numericFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnumsOperationUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums = "OPERATION_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnumsEqual                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums = "EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnumsLessThan             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums = "LESS_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnumsLessThanOrEqual      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums = "LESS_THAN_OR_EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnumsGreaterThan          SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums = "GREATER_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnumsGreaterThanOrEqual   SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums = "GREATER_THAN_OR_EQUAL"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPERATION_UNSPECIFIED":
		fallthrough
	case "EQUAL":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "LESS_THAN_OR_EQUAL":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "GREATER_THAN_OR_EQUAL":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue struct {
	Value     float64                                                                                                  `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value struct {
	Value     string                                                                                         `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueUnionType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_3_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_3_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueUnionType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Int64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3DoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterName `const:"numericFilter" json:"filter_name"`
	Operation  []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums               `json:"operation"`
	Value      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValue                                                      `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterFilterNameNumericFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter) GetOperation() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums {
	if o == nil {
		return []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ValidEnums{}
	}
	return o.Operation
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter) GetValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValue{}
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterNameInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterName = "inListFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inListFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter struct {
	CaseSensitive *bool                                                                                                     `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterName `const:"inListFilter" json:"filter_name"`
	Values        []string                                                                                                  `json:"values"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3ExpressionFilterNameInListFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter) GetValues() []string {
	if o == nil {
		return []string{}
	}
	return o.Values
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterNameStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterName = "stringFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stringFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnumsMatchTypeUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums = "MATCH_TYPE_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnumsExact                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums = "EXACT"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnumsBeginsWith           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums = "BEGINS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnumsEndsWith             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums = "ENDS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnumsContains             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums = "CONTAINS"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnumsFullRegexp           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums = "FULL_REGEXP"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnumsPartialRegexp        SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums = "PARTIAL_REGEXP"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MATCH_TYPE_UNSPECIFIED":
		fallthrough
	case "EXACT":
		fallthrough
	case "BEGINS_WITH":
		fallthrough
	case "ENDS_WITH":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "FULL_REGEXP":
		fallthrough
	case "PARTIAL_REGEXP":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter struct {
	CaseSensitive *bool                                                                                            `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterName  `const:"stringFilter" json:"filter_name"`
	MatchType     []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums `json:"matchType,omitempty"`
	Value         string                                                                                           `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterNameStringFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter) GetMatchType() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValidEnums {
	if o == nil {
		return nil
	}
	return o.MatchType
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterType = "source-google-analytics-data-api_Schemas_custom_reports_array_stringFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterType = "source-google-analytics-data-api_Schemas_custom_reports_array_inListFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterType = "source-google-analytics-data-api_Schemas_custom_reports_array_numericFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterType = "source-google-analytics-data-api_Schemas_custom_reports_array_betweenFilter"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayStringFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayInListFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayNumericFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayBetweenFilter, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayExpression struct {
	FieldName string                                                                                      `json:"field_name"`
	Filter    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter `json:"filter"`
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayExpression) GetFieldName() string {
	if o == nil {
		return ""
	}
	return o.FieldName
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayExpression) GetFilter() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter3Filter{}
	}
	return o.Filter
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterTypeNotExpression SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterType = "notExpression"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "notExpression":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterType: %v", v)
	}
}

// SourceGoogleAnalyticsDataAPINotExpression - The FilterExpression is NOT of notExpression.
type SourceGoogleAnalyticsDataAPINotExpression struct {
	Expression *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayExpression `json:"expression,omitempty"`
	filterType *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterType `const:"notExpression" json:"filter_type,omitempty"`
}

func (s SourceGoogleAnalyticsDataAPINotExpression) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPINotExpression) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPINotExpression) GetExpression() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayExpression {
	if o == nil {
		return nil
	}
	return o.Expression
}

func (o *SourceGoogleAnalyticsDataAPINotExpression) GetFilterType() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayFilterTypeNotExpression.ToPointer()
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterNameBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterName = "betweenFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "betweenFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue struct {
	Value     float64                                                                                                               `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value struct {
	Value     string                                                                                                          `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ToValueValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ToValueValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ToValueValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ToValueValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ToValueValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ToValueValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ToValueValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ToValueValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue struct {
	Value     float64                                                                                                                       `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ToValueValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ToValueValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ToValueValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value struct {
	Value     string                                                                                                                 `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilter4ValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_2_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_2_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2Int64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2DoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterName `const:"betweenFilter" json:"filter_name"`
	FromValue  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValue                    `json:"fromValue"`
	ToValue    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValue                      `json:"toValue"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterFilterNameBetweenFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter) GetFromValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFromValue{}
	}
	return o.FromValue
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter) GetToValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterToValue{}
	}
	return o.ToValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterNameNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterName = "numericFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "numericFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnumsOperationUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums = "OPERATION_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnumsEqual                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums = "EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnumsLessThan             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums = "LESS_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnumsLessThanOrEqual      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums = "LESS_THAN_OR_EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnumsGreaterThan          SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums = "GREATER_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnumsGreaterThanOrEqual   SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums = "GREATER_THAN_OR_EQUAL"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPERATION_UNSPECIFIED":
		fallthrough
	case "EQUAL":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "LESS_THAN_OR_EQUAL":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "GREATER_THAN_OR_EQUAL":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue struct {
	Value     float64                                                                                                   `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value struct {
	Value     string                                                                                         `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueUnionType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueUnionType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterName `const:"numericFilter" json:"filter_name"`
	Operation  []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums                           `json:"operation"`
	Value      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValue                  `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ExpressionsFilterNameNumericFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter) GetOperation() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums {
	if o == nil {
		return []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValidEnums{}
	}
	return o.Operation
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter) GetValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterValue{}
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2FilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2FilterNameInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2FilterName = "inListFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2FilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2FilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2FilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inListFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2FilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2FilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter struct {
	CaseSensitive *bool                                                                                           `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2FilterName `const:"inListFilter" json:"filter_name"`
	Values        []string                                                                                        `json:"values"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2FilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2FilterNameInListFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter) GetValues() []string {
	if o == nil {
		return []string{}
	}
	return o.Values
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterNameStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterName = "stringFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stringFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnumsMatchTypeUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums = "MATCH_TYPE_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnumsExact                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums = "EXACT"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnumsBeginsWith           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums = "BEGINS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnumsEndsWith             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums = "ENDS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnumsContains             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums = "CONTAINS"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnumsFullRegexp           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums = "FULL_REGEXP"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnumsPartialRegexp        SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums = "PARTIAL_REGEXP"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MATCH_TYPE_UNSPECIFIED":
		fallthrough
	case "EXACT":
		fallthrough
	case "BEGINS_WITH":
		fallthrough
	case "ENDS_WITH":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "FULL_REGEXP":
		fallthrough
	case "PARTIAL_REGEXP":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter struct {
	CaseSensitive *bool                                                                                             `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterName    `const:"stringFilter" json:"filter_name"`
	MatchType     []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums `json:"matchType,omitempty"`
	Value         string                                                                                            `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterNameStringFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter) GetMatchType() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter2ValidEnums {
	if o == nil {
		return nil
	}
	return o.MatchType
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_stringFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_inListFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_numericFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_betweenFilter"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterStringFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterInListFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterNumericFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterBetweenFilter, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasExpression struct {
	FieldName string                                                                                     `json:"field_name"`
	Filter    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter `json:"filter"`
}

func (o *SourceGoogleAnalyticsDataAPISchemasExpression) GetFieldName() string {
	if o == nil {
		return ""
	}
	return o.FieldName
}

func (o *SourceGoogleAnalyticsDataAPISchemasExpression) GetFilter() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilterFilter{}
	}
	return o.Filter
}

type SourceGoogleAnalyticsDataAPISchemasFilterType string

const (
	SourceGoogleAnalyticsDataAPISchemasFilterTypeOrGroup SourceGoogleAnalyticsDataAPISchemasFilterType = "orGroup"
)

func (e SourceGoogleAnalyticsDataAPISchemasFilterType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasFilterType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasFilterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "orGroup":
		*e = SourceGoogleAnalyticsDataAPISchemasFilterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasFilterType: %v", v)
	}
}

// SourceGoogleAnalyticsDataAPIOrGroup - The FilterExpressions in orGroup have an OR relationship.
type SourceGoogleAnalyticsDataAPIOrGroup struct {
	Expressions []SourceGoogleAnalyticsDataAPISchemasExpression `json:"expressions"`
	filterType  SourceGoogleAnalyticsDataAPISchemasFilterType   `const:"orGroup" json:"filter_type"`
}

func (s SourceGoogleAnalyticsDataAPIOrGroup) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPIOrGroup) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPIOrGroup) GetExpressions() []SourceGoogleAnalyticsDataAPISchemasExpression {
	if o == nil {
		return []SourceGoogleAnalyticsDataAPISchemasExpression{}
	}
	return o.Expressions
}

func (o *SourceGoogleAnalyticsDataAPIOrGroup) GetFilterType() SourceGoogleAnalyticsDataAPISchemasFilterType {
	return SourceGoogleAnalyticsDataAPISchemasFilterTypeOrGroup
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterFilterNameBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterFilterName = "betweenFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "betweenFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue struct {
	Value     float64                                                                                                                `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value struct {
	Value     string                                                                                                                `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_1_expressions_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_1_expressions_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue struct {
	Value     float64                                                                                        `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ToValueValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ToValueValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ToValueValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ToValueValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ToValueValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ToValueValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ToValueValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ToValueValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value struct {
	Value     string                                                                                                                        `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ToValueValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ToValueValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilter4ToValueValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_1_expressions_filter_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_1_expressions_filter_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterFilterName `const:"betweenFilter" json:"filter_name"`
	FromValue  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValue                                          `json:"fromValue"`
	ToValue    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValue                                            `json:"toValue"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterFilterNameBetweenFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter) GetFromValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFromValue{}
	}
	return o.FromValue
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter) GetToValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterToValue{}
	}
	return o.ToValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterNameNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterName = "numericFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "numericFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnumsOperationUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums = "OPERATION_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnumsEqual                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums = "EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnumsLessThan             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums = "LESS_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnumsLessThanOrEqual      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums = "LESS_THAN_OR_EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnumsGreaterThan          SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums = "GREATER_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnumsGreaterThanOrEqual   SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums = "GREATER_THAN_OR_EQUAL"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPERATION_UNSPECIFIED":
		fallthrough
	case "EQUAL":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "LESS_THAN_OR_EQUAL":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "GREATER_THAN_OR_EQUAL":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue struct {
	Value     float64                                                                                                         `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value struct {
	Value     string                                                                                                    `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueUnionType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_1_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_Dimensions filter_1_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueUnionType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1Int64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1DoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterName `const:"numericFilter" json:"filter_name"`
	Operation  []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums     `json:"operation"`
	Value      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValue                                        `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterFilterNameNumericFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter) GetOperation() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums {
	if o == nil {
		return []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsValidEnums{}
	}
	return o.Operation
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter) GetValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterValue{}
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterNameInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterName = "inListFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inListFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter struct {
	CaseSensitive *bool                                                                                                      `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterName `const:"inListFilter" json:"filter_name"`
	Values        []string                                                                                                   `json:"values"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ExpressionsFilterNameInListFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter) GetValues() []string {
	if o == nil {
		return []string{}
	}
	return o.Values
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1FilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1FilterNameStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1FilterName = "stringFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1FilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1FilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1FilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stringFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1FilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1FilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnumsMatchTypeUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums = "MATCH_TYPE_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnumsExact                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums = "EXACT"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnumsBeginsWith           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums = "BEGINS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnumsEndsWith             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums = "ENDS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnumsContains             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums = "CONTAINS"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnumsFullRegexp           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums = "FULL_REGEXP"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnumsPartialRegexp        SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums = "PARTIAL_REGEXP"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MATCH_TYPE_UNSPECIFIED":
		fallthrough
	case "EXACT":
		fallthrough
	case "BEGINS_WITH":
		fallthrough
	case "ENDS_WITH":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "FULL_REGEXP":
		fallthrough
	case "PARTIAL_REGEXP":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter struct {
	CaseSensitive *bool                                                                                             `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1FilterName   `const:"stringFilter" json:"filter_name"`
	MatchType     []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums `json:"matchType,omitempty"`
	Value         string                                                                                            `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1FilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1FilterNameStringFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter) GetMatchType() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterDimensionsFilter1ValidEnums {
	if o == nil {
		return nil
	}
	return o.MatchType
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_stringFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_inListFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_numericFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_dimensionFilter_betweenFilter"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterStringFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterInListFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterNumericFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterBetweenFilter, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPIExpression struct {
	FieldName string                                                                     `json:"field_name"`
	Filter    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter `json:"filter"`
}

func (o *SourceGoogleAnalyticsDataAPIExpression) GetFieldName() string {
	if o == nil {
		return ""
	}
	return o.FieldName
}

func (o *SourceGoogleAnalyticsDataAPIExpression) GetFilter() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayDimensionFilterFilter{}
	}
	return o.Filter
}

type SourceGoogleAnalyticsDataAPIFilterType string

const (
	SourceGoogleAnalyticsDataAPIFilterTypeAndGroup SourceGoogleAnalyticsDataAPIFilterType = "andGroup"
)

func (e SourceGoogleAnalyticsDataAPIFilterType) ToPointer() *SourceGoogleAnalyticsDataAPIFilterType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPIFilterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "andGroup":
		*e = SourceGoogleAnalyticsDataAPIFilterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPIFilterType: %v", v)
	}
}

// SourceGoogleAnalyticsDataAPIAndGroup - The FilterExpressions in andGroup have an AND relationship.
type SourceGoogleAnalyticsDataAPIAndGroup struct {
	Expressions []SourceGoogleAnalyticsDataAPIExpression `json:"expressions"`
	filterType  SourceGoogleAnalyticsDataAPIFilterType   `const:"andGroup" json:"filter_type"`
}

func (s SourceGoogleAnalyticsDataAPIAndGroup) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPIAndGroup) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPIAndGroup) GetExpressions() []SourceGoogleAnalyticsDataAPIExpression {
	if o == nil {
		return []SourceGoogleAnalyticsDataAPIExpression{}
	}
	return o.Expressions
}

func (o *SourceGoogleAnalyticsDataAPIAndGroup) GetFilterType() SourceGoogleAnalyticsDataAPIFilterType {
	return SourceGoogleAnalyticsDataAPIFilterTypeAndGroup
}

type SourceGoogleAnalyticsDataAPIDimensionsFilterType string

const (
	SourceGoogleAnalyticsDataAPIDimensionsFilterTypeSourceGoogleAnalyticsDataAPIAndGroup      SourceGoogleAnalyticsDataAPIDimensionsFilterType = "source-google-analytics-data-api_andGroup"
	SourceGoogleAnalyticsDataAPIDimensionsFilterTypeSourceGoogleAnalyticsDataAPIOrGroup       SourceGoogleAnalyticsDataAPIDimensionsFilterType = "source-google-analytics-data-api_orGroup"
	SourceGoogleAnalyticsDataAPIDimensionsFilterTypeSourceGoogleAnalyticsDataAPINotExpression SourceGoogleAnalyticsDataAPIDimensionsFilterType = "source-google-analytics-data-api_notExpression"
	SourceGoogleAnalyticsDataAPIDimensionsFilterTypeSourceGoogleAnalyticsDataAPIFilter        SourceGoogleAnalyticsDataAPIDimensionsFilterType = "source-google-analytics-data-api_filter"
)

// SourceGoogleAnalyticsDataAPIDimensionsFilter - Dimensions filter
type SourceGoogleAnalyticsDataAPIDimensionsFilter struct {
	SourceGoogleAnalyticsDataAPIAndGroup      *SourceGoogleAnalyticsDataAPIAndGroup
	SourceGoogleAnalyticsDataAPIOrGroup       *SourceGoogleAnalyticsDataAPIOrGroup
	SourceGoogleAnalyticsDataAPINotExpression *SourceGoogleAnalyticsDataAPINotExpression
	SourceGoogleAnalyticsDataAPIFilter        *SourceGoogleAnalyticsDataAPIFilter

	Type SourceGoogleAnalyticsDataAPIDimensionsFilterType
}

func CreateSourceGoogleAnalyticsDataAPIDimensionsFilterSourceGoogleAnalyticsDataAPIAndGroup(sourceGoogleAnalyticsDataAPIAndGroup SourceGoogleAnalyticsDataAPIAndGroup) SourceGoogleAnalyticsDataAPIDimensionsFilter {
	typ := SourceGoogleAnalyticsDataAPIDimensionsFilterTypeSourceGoogleAnalyticsDataAPIAndGroup

	return SourceGoogleAnalyticsDataAPIDimensionsFilter{
		SourceGoogleAnalyticsDataAPIAndGroup: &sourceGoogleAnalyticsDataAPIAndGroup,
		Type:                                 typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPIDimensionsFilterSourceGoogleAnalyticsDataAPIOrGroup(sourceGoogleAnalyticsDataAPIOrGroup SourceGoogleAnalyticsDataAPIOrGroup) SourceGoogleAnalyticsDataAPIDimensionsFilter {
	typ := SourceGoogleAnalyticsDataAPIDimensionsFilterTypeSourceGoogleAnalyticsDataAPIOrGroup

	return SourceGoogleAnalyticsDataAPIDimensionsFilter{
		SourceGoogleAnalyticsDataAPIOrGroup: &sourceGoogleAnalyticsDataAPIOrGroup,
		Type:                                typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPIDimensionsFilterSourceGoogleAnalyticsDataAPINotExpression(sourceGoogleAnalyticsDataAPINotExpression SourceGoogleAnalyticsDataAPINotExpression) SourceGoogleAnalyticsDataAPIDimensionsFilter {
	typ := SourceGoogleAnalyticsDataAPIDimensionsFilterTypeSourceGoogleAnalyticsDataAPINotExpression

	return SourceGoogleAnalyticsDataAPIDimensionsFilter{
		SourceGoogleAnalyticsDataAPINotExpression: &sourceGoogleAnalyticsDataAPINotExpression,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPIDimensionsFilterSourceGoogleAnalyticsDataAPIFilter(sourceGoogleAnalyticsDataAPIFilter SourceGoogleAnalyticsDataAPIFilter) SourceGoogleAnalyticsDataAPIDimensionsFilter {
	typ := SourceGoogleAnalyticsDataAPIDimensionsFilterTypeSourceGoogleAnalyticsDataAPIFilter

	return SourceGoogleAnalyticsDataAPIDimensionsFilter{
		SourceGoogleAnalyticsDataAPIFilter: &sourceGoogleAnalyticsDataAPIFilter,
		Type:                               typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPIDimensionsFilter) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPIAndGroup SourceGoogleAnalyticsDataAPIAndGroup = SourceGoogleAnalyticsDataAPIAndGroup{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPIAndGroup, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPIAndGroup = &sourceGoogleAnalyticsDataAPIAndGroup
		u.Type = SourceGoogleAnalyticsDataAPIDimensionsFilterTypeSourceGoogleAnalyticsDataAPIAndGroup
		return nil
	}

	var sourceGoogleAnalyticsDataAPIOrGroup SourceGoogleAnalyticsDataAPIOrGroup = SourceGoogleAnalyticsDataAPIOrGroup{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPIOrGroup, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPIOrGroup = &sourceGoogleAnalyticsDataAPIOrGroup
		u.Type = SourceGoogleAnalyticsDataAPIDimensionsFilterTypeSourceGoogleAnalyticsDataAPIOrGroup
		return nil
	}

	var sourceGoogleAnalyticsDataAPINotExpression SourceGoogleAnalyticsDataAPINotExpression = SourceGoogleAnalyticsDataAPINotExpression{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPINotExpression, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPINotExpression = &sourceGoogleAnalyticsDataAPINotExpression
		u.Type = SourceGoogleAnalyticsDataAPIDimensionsFilterTypeSourceGoogleAnalyticsDataAPINotExpression
		return nil
	}

	var sourceGoogleAnalyticsDataAPIFilter SourceGoogleAnalyticsDataAPIFilter = SourceGoogleAnalyticsDataAPIFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPIFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPIFilter = &sourceGoogleAnalyticsDataAPIFilter
		u.Type = SourceGoogleAnalyticsDataAPIDimensionsFilterTypeSourceGoogleAnalyticsDataAPIFilter
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPIDimensionsFilter) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPIAndGroup != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPIAndGroup, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPIOrGroup != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPIOrGroup, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPINotExpression != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPINotExpression, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPIFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPIFilter, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterNameBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterName = "betweenFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "betweenFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue struct {
	Value     float64                                                                                        `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4ValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4ValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value struct {
	Value     string                                                                                   `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4ValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4ValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasFromValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value  SourceGoogleAnalyticsDataAPISchemasFromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_int64Value"
	SourceGoogleAnalyticsDataAPISchemasFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasFromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasFromValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasFromValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasFromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value) SourceGoogleAnalyticsDataAPISchemasFromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value

	return SourceGoogleAnalyticsDataAPISchemasFromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasFromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue) SourceGoogleAnalyticsDataAPISchemasFromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasFromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasFromValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasFromValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilter4ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilter4ValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilter4ValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilter4ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilter4ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilter4ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilter4ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilter4ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue struct {
	Value     float64                                                                                               `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilter4ValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilter4ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilter4ValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value struct {
	Value     string                                                                                               `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasToValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value  SourceGoogleAnalyticsDataAPISchemasToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_4_int64Value"
	SourceGoogleAnalyticsDataAPISchemasToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue SourceGoogleAnalyticsDataAPISchemasToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_4_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasToValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasToValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value) SourceGoogleAnalyticsDataAPISchemasToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value

	return SourceGoogleAnalyticsDataAPISchemasToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue) SourceGoogleAnalyticsDataAPISchemasToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue

	return SourceGoogleAnalyticsDataAPISchemasToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasToValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasToValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4Int64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4DoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasBetweenFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterName `const:"betweenFilter" json:"filter_name"`
	FromValue  SourceGoogleAnalyticsDataAPISchemasFromValue                                                    `json:"fromValue"`
	ToValue    SourceGoogleAnalyticsDataAPISchemasToValue                                                      `json:"toValue"`
}

func (s SourceGoogleAnalyticsDataAPISchemasBetweenFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasBetweenFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasBetweenFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterFilterNameBetweenFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasBetweenFilter) GetFromValue() SourceGoogleAnalyticsDataAPISchemasFromValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasFromValue{}
	}
	return o.FromValue
}

func (o *SourceGoogleAnalyticsDataAPISchemasBetweenFilter) GetToValue() SourceGoogleAnalyticsDataAPISchemasToValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasToValue{}
	}
	return o.ToValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterNameNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterName = "numericFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "numericFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnumsOperationUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums = "OPERATION_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnumsEqual                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums = "EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnumsLessThan             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums = "LESS_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnumsLessThanOrEqual      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums = "LESS_THAN_OR_EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnumsGreaterThan          SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums = "GREATER_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnumsGreaterThanOrEqual   SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums = "GREATER_THAN_OR_EQUAL"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPERATION_UNSPECIFIED":
		fallthrough
	case "EQUAL":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "LESS_THAN_OR_EQUAL":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "GREATER_THAN_OR_EQUAL":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue struct {
	Value     float64                                                                                 `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value struct {
	Value     string                                                                     `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasValueUnionType string

const (
	SourceGoogleAnalyticsDataAPISchemasValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value  SourceGoogleAnalyticsDataAPISchemasValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_int64Value"
	SourceGoogleAnalyticsDataAPISchemasValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasValueUnionType
}

func CreateSourceGoogleAnalyticsDataAPISchemasValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value) SourceGoogleAnalyticsDataAPISchemasValue {
	typ := SourceGoogleAnalyticsDataAPISchemasValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value

	return SourceGoogleAnalyticsDataAPISchemasValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue) SourceGoogleAnalyticsDataAPISchemasValue {
	typ := SourceGoogleAnalyticsDataAPISchemasValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasNumericFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterName `const:"numericFilter" json:"filter_name"`
	Operation  []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums             `json:"operation"`
	Value      SourceGoogleAnalyticsDataAPISchemasValue                                                  `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasNumericFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasNumericFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasNumericFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterNameNumericFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasNumericFilter) GetOperation() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums {
	if o == nil {
		return []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValidEnums{}
	}
	return o.Operation
}

func (o *SourceGoogleAnalyticsDataAPISchemasNumericFilter) GetValue() SourceGoogleAnalyticsDataAPISchemasValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasValue{}
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterNameInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterName = "inListFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inListFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasInListFilter struct {
	CaseSensitive *bool                                                                                    `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterName `const:"inListFilter" json:"filter_name"`
	Values        []string                                                                                 `json:"values"`
}

func (s SourceGoogleAnalyticsDataAPISchemasInListFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasInListFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasInListFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasInListFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterNameInListFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasInListFilter) GetValues() []string {
	if o == nil {
		return []string{}
	}
	return o.Values
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterNameStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterName = "stringFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stringFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnumsMatchTypeUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums = "MATCH_TYPE_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnumsExact                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums = "EXACT"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnumsBeginsWith           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums = "BEGINS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnumsEndsWith             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums = "ENDS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnumsContains             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums = "CONTAINS"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnumsFullRegexp           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums = "FULL_REGEXP"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnumsPartialRegexp        SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums = "PARTIAL_REGEXP"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MATCH_TYPE_UNSPECIFIED":
		fallthrough
	case "EXACT":
		fallthrough
	case "BEGINS_WITH":
		fallthrough
	case "ENDS_WITH":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "FULL_REGEXP":
		fallthrough
	case "PARTIAL_REGEXP":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasStringFilter struct {
	CaseSensitive *bool                                                                       `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterName `const:"stringFilter" json:"filter_name"`
	MatchType     []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums           `json:"matchType,omitempty"`
	Value         string                                                                      `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasStringFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasStringFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasStringFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasStringFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterNameStringFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasStringFilter) GetMatchType() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayValidEnums {
	if o == nil {
		return nil
	}
	return o.MatchType
}

func (o *SourceGoogleAnalyticsDataAPISchemasStringFilter) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasStringFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionType = "source-google-analytics-data-api_Schemas_stringFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasInListFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionType = "source-google-analytics-data-api_Schemas_inListFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionType = "source-google-analytics-data-api_Schemas_numericFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionType = "source-google-analytics-data-api_Schemas_betweenFilter"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter struct {
	SourceGoogleAnalyticsDataAPISchemasStringFilter  *SourceGoogleAnalyticsDataAPISchemasStringFilter
	SourceGoogleAnalyticsDataAPISchemasInListFilter  *SourceGoogleAnalyticsDataAPISchemasInListFilter
	SourceGoogleAnalyticsDataAPISchemasNumericFilter *SourceGoogleAnalyticsDataAPISchemasNumericFilter
	SourceGoogleAnalyticsDataAPISchemasBetweenFilter *SourceGoogleAnalyticsDataAPISchemasBetweenFilter

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterSourceGoogleAnalyticsDataAPISchemasStringFilter(sourceGoogleAnalyticsDataAPISchemasStringFilter SourceGoogleAnalyticsDataAPISchemasStringFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasStringFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasStringFilter: &sourceGoogleAnalyticsDataAPISchemasStringFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterSourceGoogleAnalyticsDataAPISchemasInListFilter(sourceGoogleAnalyticsDataAPISchemasInListFilter SourceGoogleAnalyticsDataAPISchemasInListFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasInListFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasInListFilter: &sourceGoogleAnalyticsDataAPISchemasInListFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterSourceGoogleAnalyticsDataAPISchemasNumericFilter(sourceGoogleAnalyticsDataAPISchemasNumericFilter SourceGoogleAnalyticsDataAPISchemasNumericFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasNumericFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasNumericFilter: &sourceGoogleAnalyticsDataAPISchemasNumericFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterSourceGoogleAnalyticsDataAPISchemasBetweenFilter(sourceGoogleAnalyticsDataAPISchemasBetweenFilter SourceGoogleAnalyticsDataAPISchemasBetweenFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasBetweenFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasBetweenFilter: &sourceGoogleAnalyticsDataAPISchemasBetweenFilter,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasInListFilter SourceGoogleAnalyticsDataAPISchemasInListFilter = SourceGoogleAnalyticsDataAPISchemasInListFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasInListFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasInListFilter = &sourceGoogleAnalyticsDataAPISchemasInListFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasInListFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasNumericFilter SourceGoogleAnalyticsDataAPISchemasNumericFilter = SourceGoogleAnalyticsDataAPISchemasNumericFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasNumericFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasNumericFilter = &sourceGoogleAnalyticsDataAPISchemasNumericFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasNumericFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasBetweenFilter SourceGoogleAnalyticsDataAPISchemasBetweenFilter = SourceGoogleAnalyticsDataAPISchemasBetweenFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasBetweenFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasBetweenFilter = &sourceGoogleAnalyticsDataAPISchemasBetweenFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasBetweenFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasStringFilter SourceGoogleAnalyticsDataAPISchemasStringFilter = SourceGoogleAnalyticsDataAPISchemasStringFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasStringFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasStringFilter = &sourceGoogleAnalyticsDataAPISchemasStringFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasStringFilter
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasStringFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasStringFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasInListFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasInListFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasNumericFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasNumericFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasBetweenFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasBetweenFilter, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterTypeFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterType = "filter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "filter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterType: %v", v)
	}
}

// SourceGoogleAnalyticsDataAPISchemasFilter - A primitive filter. In the same FilterExpression, all of the filter's field names need to be either all metrics.
type SourceGoogleAnalyticsDataAPISchemasFilter struct {
	FieldName  string                                                                                     `json:"field_name"`
	Filter     SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter                    `json:"filter"`
	filterType *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterType `const:"filter" json:"filter_type,omitempty"`
}

func (s SourceGoogleAnalyticsDataAPISchemasFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasFilter) GetFieldName() string {
	if o == nil {
		return ""
	}
	return o.FieldName
}

func (o *SourceGoogleAnalyticsDataAPISchemasFilter) GetFilter() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilter{}
	}
	return o.Filter
}

func (o *SourceGoogleAnalyticsDataAPISchemasFilter) GetFilterType() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter4FilterTypeFilter.ToPointer()
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterFilterNameBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterFilterName = "betweenFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "betweenFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue struct {
	Value     float64                                                                                                        `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value struct {
	Value     string                                                                                                   `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_3_expression_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_3_expression_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ToValueValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ToValueValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ToValueValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ToValueValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ToValueValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ToValueValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ToValueValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ToValueValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue struct {
	Value     float64                                                                                                                `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ToValueValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ToValueValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ToValueValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value struct {
	Value     string                                                                                                          `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilter4ValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_3_expression_filter_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_3_expression_filter_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterFilterName `const:"betweenFilter" json:"filter_name"`
	FromValue  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValue                        `json:"fromValue"`
	ToValue    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValue                          `json:"toValue"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterFilterNameBetweenFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter) GetFromValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FromValue{}
	}
	return o.FromValue
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter) GetToValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ToValue{}
	}
	return o.ToValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterNameNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterName = "numericFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "numericFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnumsOperationUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums = "OPERATION_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnumsEqual                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums = "EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnumsLessThan             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums = "LESS_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnumsLessThanOrEqual      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums = "LESS_THAN_OR_EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnumsGreaterThan          SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums = "GREATER_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnumsGreaterThanOrEqual   SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums = "GREATER_THAN_OR_EQUAL"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPERATION_UNSPECIFIED":
		fallthrough
	case "EQUAL":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "LESS_THAN_OR_EQUAL":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "GREATER_THAN_OR_EQUAL":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue struct {
	Value     float64                                                                                            `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value struct {
	Value     string                                                                                   `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueUnionType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_3_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_3_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Value struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueUnionType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Value {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Value{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Value {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Value{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Value) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Value) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Int64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3DoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterName `const:"numericFilter" json:"filter_name"`
	Operation  []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums     `json:"operation"`
	Value      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Value                      `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterFilterNameNumericFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter) GetOperation() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums {
	if o == nil {
		return []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionValidEnums{}
	}
	return o.Operation
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter) GetValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Value {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Value{}
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterNameInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterName = "inListFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inListFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter struct {
	CaseSensitive *bool                                                                                               `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterName `const:"inListFilter" json:"filter_name"`
	Values        []string                                                                                            `json:"values"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ExpressionFilterNameInListFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter) GetValues() []string {
	if o == nil {
		return []string{}
	}
	return o.Values
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterNameStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterName = "stringFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stringFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnumsMatchTypeUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums = "MATCH_TYPE_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnumsExact                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums = "EXACT"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnumsBeginsWith           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums = "BEGINS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnumsEndsWith             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums = "ENDS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnumsContains             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums = "CONTAINS"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnumsFullRegexp           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums = "FULL_REGEXP"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnumsPartialRegexp        SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums = "PARTIAL_REGEXP"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MATCH_TYPE_UNSPECIFIED":
		fallthrough
	case "EXACT":
		fallthrough
	case "BEGINS_WITH":
		fallthrough
	case "ENDS_WITH":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "FULL_REGEXP":
		fallthrough
	case "PARTIAL_REGEXP":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter struct {
	CaseSensitive *bool                                                                                       `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterName   `const:"stringFilter" json:"filter_name"`
	MatchType     []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums `json:"matchType,omitempty"`
	Value         string                                                                                      `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterNameStringFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter) GetMatchType() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3ValidEnums {
	if o == nil {
		return nil
	}
	return o.MatchType
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_3_stringFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_3_inListFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_3_numericFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_3_betweenFilter"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3StringFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3InListFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3NumericFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3BetweenFilter, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Expression struct {
	FieldName string                                                                                `json:"field_name"`
	Filter    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter `json:"filter"`
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Expression) GetFieldName() string {
	if o == nil {
		return ""
	}
	return o.FieldName
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Expression) GetFilter() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Filter{}
	}
	return o.Filter
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterTypeNotExpression SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterType = "notExpression"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "notExpression":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterType: %v", v)
	}
}

// SourceGoogleAnalyticsDataAPISchemasNotExpression - The FilterExpression is NOT of notExpression.
type SourceGoogleAnalyticsDataAPISchemasNotExpression struct {
	Expression *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Expression `json:"expression,omitempty"`
	filterType *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterType `const:"notExpression" json:"filter_type,omitempty"`
}

func (s SourceGoogleAnalyticsDataAPISchemasNotExpression) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasNotExpression) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasNotExpression) GetExpression() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3Expression {
	if o == nil {
		return nil
	}
	return o.Expression
}

func (o *SourceGoogleAnalyticsDataAPISchemasNotExpression) GetFilterType() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter3FilterTypeNotExpression.ToPointer()
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterFilterNameBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterFilterName = "betweenFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "betweenFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue struct {
	Value     float64                                                                                                         `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value struct {
	Value     string                                                                                                    `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_2_expressions_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_2_expressions_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ToValueValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ToValueValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ToValueValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ToValueValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ToValueValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ToValueValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ToValueValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ToValueValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue struct {
	Value     float64                                                                                                                 `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ToValueValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ToValueValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ToValueValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value struct {
	Value     string                                                                                                           `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilter4ValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_2_expressions_filter_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_2_expressions_filter_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterFilterName `const:"betweenFilter" json:"filter_name"`
	FromValue  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValue                          `json:"fromValue"`
	ToValue    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValue                            `json:"toValue"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterFilterNameBetweenFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter) GetFromValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFromValue{}
	}
	return o.FromValue
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter) GetToValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterToValue{}
	}
	return o.ToValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterNameNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterName = "numericFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "numericFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnumsOperationUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums = "OPERATION_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnumsEqual                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums = "EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnumsLessThan             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums = "LESS_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnumsLessThanOrEqual      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums = "LESS_THAN_OR_EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnumsGreaterThan          SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums = "GREATER_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnumsGreaterThanOrEqual   SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums = "GREATER_THAN_OR_EQUAL"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPERATION_UNSPECIFIED":
		fallthrough
	case "EQUAL":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "LESS_THAN_OR_EQUAL":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "GREATER_THAN_OR_EQUAL":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue struct {
	Value     float64                                                                                             `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value struct {
	Value     string                                                                                   `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueUnionType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_2_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_2_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueUnionType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2Int64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2DoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterName `const:"numericFilter" json:"filter_name"`
	Operation  []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums     `json:"operation"`
	Value      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValue                        `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterFilterNameNumericFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter) GetOperation() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums {
	if o == nil {
		return []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsValidEnums{}
	}
	return o.Operation
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter) GetValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValue{}
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterNameInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterName = "inListFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inListFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter struct {
	CaseSensitive *bool                                                                                                `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterName `const:"inListFilter" json:"filter_name"`
	Values        []string                                                                                             `json:"values"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ExpressionsFilterNameInListFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter) GetValues() []string {
	if o == nil {
		return []string{}
	}
	return o.Values
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2FilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2FilterNameStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2FilterName = "stringFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2FilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2FilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2FilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stringFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2FilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2FilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnumsMatchTypeUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums = "MATCH_TYPE_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnumsExact                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums = "EXACT"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnumsBeginsWith           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums = "BEGINS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnumsEndsWith             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums = "ENDS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnumsContains             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums = "CONTAINS"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnumsFullRegexp           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums = "FULL_REGEXP"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnumsPartialRegexp        SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums = "PARTIAL_REGEXP"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MATCH_TYPE_UNSPECIFIED":
		fallthrough
	case "EXACT":
		fallthrough
	case "BEGINS_WITH":
		fallthrough
	case "ENDS_WITH":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "FULL_REGEXP":
		fallthrough
	case "PARTIAL_REGEXP":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter struct {
	CaseSensitive *bool                                                                                       `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2FilterName   `const:"stringFilter" json:"filter_name"`
	MatchType     []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums `json:"matchType,omitempty"`
	Value         string                                                                                      `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2FilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2FilterNameStringFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter) GetMatchType() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter2ValidEnums {
	if o == nil {
		return nil
	}
	return o.MatchType
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_stringFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_inListFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_numericFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_betweenFilter"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterStringFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterInListFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterNumericFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterBetweenFilter, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterExpression struct {
	FieldName string                                                                               `json:"field_name"`
	Filter    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter `json:"filter"`
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterExpression) GetFieldName() string {
	if o == nil {
		return ""
	}
	return o.FieldName
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterExpression) GetFilter() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilter{}
	}
	return o.Filter
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterTypeOrGroup SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterType = "orGroup"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "orGroup":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterType: %v", v)
	}
}

// SourceGoogleAnalyticsDataAPISchemasOrGroup - The FilterExpressions in orGroup have an OR relationship.
type SourceGoogleAnalyticsDataAPISchemasOrGroup struct {
	Expressions []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterExpression `json:"expressions"`
	filterType  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterType   `const:"orGroup" json:"filter_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasOrGroup) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasOrGroup) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasOrGroup) GetExpressions() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterExpression {
	if o == nil {
		return []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterExpression{}
	}
	return o.Expressions
}

func (o *SourceGoogleAnalyticsDataAPISchemasOrGroup) GetFilterType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterFilterTypeOrGroup
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterNameBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterName = "betweenFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "betweenFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue struct {
	Value     float64                                                                                             `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value struct {
	Value     string                                                                                   `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_1_expressions_filter_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_1_expressions_filter_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue struct {
	Value     float64                                                                                                         `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value struct {
	Value     string                                                                                                    `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_1_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValueType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_1_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValueType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValueTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Int64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1DoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterName `const:"betweenFilter" json:"filter_name"`
	FromValue  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValue                           `json:"fromValue"`
	ToValue    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValue                             `json:"toValue"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterNameBetweenFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter) GetFromValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFromValue{}
	}
	return o.FromValue
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter) GetToValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterToValue{}
	}
	return o.ToValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterNameNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterName = "numericFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "numericFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnumsOperationUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums = "OPERATION_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnumsEqual                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums = "EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnumsLessThan             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums = "LESS_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnumsLessThanOrEqual      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums = "LESS_THAN_OR_EQUAL"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnumsGreaterThan          SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums = "GREATER_THAN"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnumsGreaterThanOrEqual   SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums = "GREATER_THAN_OR_EQUAL"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPERATION_UNSPECIFIED":
		fallthrough
	case "EQUAL":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "LESS_THAN_OR_EQUAL":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "GREATER_THAN_OR_EQUAL":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueValueTypeDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueValueType = "doubleValue"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "doubleValue":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue struct {
	Value     float64                                                                                                               `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueValueType `const:"doubleValue" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueValueTypeDoubleValue
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueTypeInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueType = "int64Value"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "int64Value":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueType: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value struct {
	Value     string                                                                                                           `json:"value"`
	valueType SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueType `const:"int64Value" json:"value_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value) GetValueType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilter3ValueTypeInt64Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueUnionType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_1_expressions_int64Value"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueUnionType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_Metrics filter_1_expressions_doubleValue"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValue struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueUnionType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValue {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValue{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValue) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValueUnionTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValue) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsInt64Value, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsDoubleValue, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter struct {
	filterName SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterName  `const:"numericFilter" json:"filter_name"`
	Operation  []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums `json:"operation"`
	Value      SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValue                     `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterNameNumericFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter) GetOperation() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums {
	if o == nil {
		return []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilterValidEnums{}
	}
	return o.Operation
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter) GetValue() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValue {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterValue{}
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterFilterNameInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterFilterName = "inListFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inListFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter struct {
	CaseSensitive *bool                                                                                                            `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterFilterName `const:"inListFilter" json:"filter_name"`
	Values        []string                                                                                                         `json:"values"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterFilterNameInListFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter) GetValues() []string {
	if o == nil {
		return []string{}
	}
	return o.Values
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterName string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterNameStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterName = "stringFilter"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterName) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterName {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stringFilter":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterName: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnumsMatchTypeUnspecified SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums = "MATCH_TYPE_UNSPECIFIED"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnumsExact                SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums = "EXACT"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnumsBeginsWith           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums = "BEGINS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnumsEndsWith             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums = "ENDS_WITH"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnumsContains             SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums = "CONTAINS"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnumsFullRegexp           SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums = "FULL_REGEXP"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnumsPartialRegexp        SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums = "PARTIAL_REGEXP"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MATCH_TYPE_UNSPECIFIED":
		fallthrough
	case "EXACT":
		fallthrough
	case "BEGINS_WITH":
		fallthrough
	case "ENDS_WITH":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "FULL_REGEXP":
		fallthrough
	case "PARTIAL_REGEXP":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter struct {
	CaseSensitive *bool                                                                                                      `json:"caseSensitive,omitempty"`
	filterName    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterName `const:"stringFilter" json:"filter_name"`
	MatchType     []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums                `json:"matchType,omitempty"`
	Value         string                                                                                                     `json:"value"`
}

func (s SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter) GetCaseSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.CaseSensitive
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter) GetFilterName() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterName {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ExpressionsFilterFilterNameStringFilter
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter) GetMatchType() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1ValidEnums {
	if o == nil {
		return nil
	}
	return o.MatchType
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_stringFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_inListFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_numericFilter"
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterType = "source-google-analytics-data-api_Schemas_custom_reports_array_metricFilter_betweenFilter"
)

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter struct {
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter  *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter

	Type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterType
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter(sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter) SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter {
	typ := SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter

	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter{
		SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter: &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter = &sourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter
		u.Type = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1FilterTypeSourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterStringFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterInListFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterNumericFilter, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterBetweenFilter, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterExpression struct {
	FieldName string                                                                                `json:"field_name"`
	Filter    SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter `json:"filter"`
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterExpression) GetFieldName() string {
	if o == nil {
		return ""
	}
	return o.FieldName
}

func (o *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterExpression) GetFilter() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter {
	if o == nil {
		return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterMetricsFilter1Filter{}
	}
	return o.Filter
}

type SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterType string

const (
	SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterTypeAndGroup SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterType = "andGroup"
)

func (e SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterType) ToPointer() *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterType {
	return &e
}

func (e *SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "andGroup":
		*e = SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterType: %v", v)
	}
}

// SourceGoogleAnalyticsDataAPISchemasAndGroup - The FilterExpressions in andGroup have an AND relationship.
type SourceGoogleAnalyticsDataAPISchemasAndGroup struct {
	Expressions []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterExpression `json:"expressions"`
	filterType  SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterType   `const:"andGroup" json:"filter_type"`
}

func (s SourceGoogleAnalyticsDataAPISchemasAndGroup) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPISchemasAndGroup) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPISchemasAndGroup) GetExpressions() []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterExpression {
	if o == nil {
		return []SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterExpression{}
	}
	return o.Expressions
}

func (o *SourceGoogleAnalyticsDataAPISchemasAndGroup) GetFilterType() SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterType {
	return SourceGoogleAnalyticsDataAPISchemasCustomReportsArrayMetricFilterFilterTypeAndGroup
}

type SourceGoogleAnalyticsDataAPIMetricsFilterType string

const (
	SourceGoogleAnalyticsDataAPIMetricsFilterTypeSourceGoogleAnalyticsDataAPISchemasAndGroup      SourceGoogleAnalyticsDataAPIMetricsFilterType = "source-google-analytics-data-api_Schemas_andGroup"
	SourceGoogleAnalyticsDataAPIMetricsFilterTypeSourceGoogleAnalyticsDataAPISchemasOrGroup       SourceGoogleAnalyticsDataAPIMetricsFilterType = "source-google-analytics-data-api_Schemas_orGroup"
	SourceGoogleAnalyticsDataAPIMetricsFilterTypeSourceGoogleAnalyticsDataAPISchemasNotExpression SourceGoogleAnalyticsDataAPIMetricsFilterType = "source-google-analytics-data-api_Schemas_notExpression"
	SourceGoogleAnalyticsDataAPIMetricsFilterTypeSourceGoogleAnalyticsDataAPISchemasFilter        SourceGoogleAnalyticsDataAPIMetricsFilterType = "source-google-analytics-data-api_Schemas_filter"
)

// SourceGoogleAnalyticsDataAPIMetricsFilter - Metrics filter
type SourceGoogleAnalyticsDataAPIMetricsFilter struct {
	SourceGoogleAnalyticsDataAPISchemasAndGroup      *SourceGoogleAnalyticsDataAPISchemasAndGroup
	SourceGoogleAnalyticsDataAPISchemasOrGroup       *SourceGoogleAnalyticsDataAPISchemasOrGroup
	SourceGoogleAnalyticsDataAPISchemasNotExpression *SourceGoogleAnalyticsDataAPISchemasNotExpression
	SourceGoogleAnalyticsDataAPISchemasFilter        *SourceGoogleAnalyticsDataAPISchemasFilter

	Type SourceGoogleAnalyticsDataAPIMetricsFilterType
}

func CreateSourceGoogleAnalyticsDataAPIMetricsFilterSourceGoogleAnalyticsDataAPISchemasAndGroup(sourceGoogleAnalyticsDataAPISchemasAndGroup SourceGoogleAnalyticsDataAPISchemasAndGroup) SourceGoogleAnalyticsDataAPIMetricsFilter {
	typ := SourceGoogleAnalyticsDataAPIMetricsFilterTypeSourceGoogleAnalyticsDataAPISchemasAndGroup

	return SourceGoogleAnalyticsDataAPIMetricsFilter{
		SourceGoogleAnalyticsDataAPISchemasAndGroup: &sourceGoogleAnalyticsDataAPISchemasAndGroup,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPIMetricsFilterSourceGoogleAnalyticsDataAPISchemasOrGroup(sourceGoogleAnalyticsDataAPISchemasOrGroup SourceGoogleAnalyticsDataAPISchemasOrGroup) SourceGoogleAnalyticsDataAPIMetricsFilter {
	typ := SourceGoogleAnalyticsDataAPIMetricsFilterTypeSourceGoogleAnalyticsDataAPISchemasOrGroup

	return SourceGoogleAnalyticsDataAPIMetricsFilter{
		SourceGoogleAnalyticsDataAPISchemasOrGroup: &sourceGoogleAnalyticsDataAPISchemasOrGroup,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPIMetricsFilterSourceGoogleAnalyticsDataAPISchemasNotExpression(sourceGoogleAnalyticsDataAPISchemasNotExpression SourceGoogleAnalyticsDataAPISchemasNotExpression) SourceGoogleAnalyticsDataAPIMetricsFilter {
	typ := SourceGoogleAnalyticsDataAPIMetricsFilterTypeSourceGoogleAnalyticsDataAPISchemasNotExpression

	return SourceGoogleAnalyticsDataAPIMetricsFilter{
		SourceGoogleAnalyticsDataAPISchemasNotExpression: &sourceGoogleAnalyticsDataAPISchemasNotExpression,
		Type: typ,
	}
}

func CreateSourceGoogleAnalyticsDataAPIMetricsFilterSourceGoogleAnalyticsDataAPISchemasFilter(sourceGoogleAnalyticsDataAPISchemasFilter SourceGoogleAnalyticsDataAPISchemasFilter) SourceGoogleAnalyticsDataAPIMetricsFilter {
	typ := SourceGoogleAnalyticsDataAPIMetricsFilterTypeSourceGoogleAnalyticsDataAPISchemasFilter

	return SourceGoogleAnalyticsDataAPIMetricsFilter{
		SourceGoogleAnalyticsDataAPISchemasFilter: &sourceGoogleAnalyticsDataAPISchemasFilter,
		Type: typ,
	}
}

func (u *SourceGoogleAnalyticsDataAPIMetricsFilter) UnmarshalJSON(data []byte) error {

	var sourceGoogleAnalyticsDataAPISchemasAndGroup SourceGoogleAnalyticsDataAPISchemasAndGroup = SourceGoogleAnalyticsDataAPISchemasAndGroup{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasAndGroup, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasAndGroup = &sourceGoogleAnalyticsDataAPISchemasAndGroup
		u.Type = SourceGoogleAnalyticsDataAPIMetricsFilterTypeSourceGoogleAnalyticsDataAPISchemasAndGroup
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasOrGroup SourceGoogleAnalyticsDataAPISchemasOrGroup = SourceGoogleAnalyticsDataAPISchemasOrGroup{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasOrGroup, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasOrGroup = &sourceGoogleAnalyticsDataAPISchemasOrGroup
		u.Type = SourceGoogleAnalyticsDataAPIMetricsFilterTypeSourceGoogleAnalyticsDataAPISchemasOrGroup
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasNotExpression SourceGoogleAnalyticsDataAPISchemasNotExpression = SourceGoogleAnalyticsDataAPISchemasNotExpression{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasNotExpression, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasNotExpression = &sourceGoogleAnalyticsDataAPISchemasNotExpression
		u.Type = SourceGoogleAnalyticsDataAPIMetricsFilterTypeSourceGoogleAnalyticsDataAPISchemasNotExpression
		return nil
	}

	var sourceGoogleAnalyticsDataAPISchemasFilter SourceGoogleAnalyticsDataAPISchemasFilter = SourceGoogleAnalyticsDataAPISchemasFilter{}
	if err := utils.UnmarshalJSON(data, &sourceGoogleAnalyticsDataAPISchemasFilter, "", true, true); err == nil {
		u.SourceGoogleAnalyticsDataAPISchemasFilter = &sourceGoogleAnalyticsDataAPISchemasFilter
		u.Type = SourceGoogleAnalyticsDataAPIMetricsFilterTypeSourceGoogleAnalyticsDataAPISchemasFilter
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SourceGoogleAnalyticsDataAPIMetricsFilter) MarshalJSON() ([]byte, error) {
	if u.SourceGoogleAnalyticsDataAPISchemasAndGroup != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasAndGroup, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasOrGroup != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasOrGroup, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasNotExpression != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasNotExpression, "", true)
	}

	if u.SourceGoogleAnalyticsDataAPISchemasFilter != nil {
		return utils.MarshalJSON(u.SourceGoogleAnalyticsDataAPISchemasFilter, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type SourceGoogleAnalyticsDataAPICustomReportConfig struct {
	// Cohort reports creates a time series of user retention for the cohort.
	CohortSpec *SourceGoogleAnalyticsDataAPICohortReports `json:"cohortSpec,omitempty"`
	// Dimensions filter
	DimensionFilter *SourceGoogleAnalyticsDataAPIDimensionsFilter `json:"dimensionFilter,omitempty"`
	// A list of dimensions.
	Dimensions []string `json:"dimensions"`
	// Metrics filter
	MetricFilter *SourceGoogleAnalyticsDataAPIMetricsFilter `json:"metricFilter,omitempty"`
	// A list of metrics.
	Metrics []string `json:"metrics"`
	// The name of the custom report, this name would be used as stream name.
	Name string `json:"name"`
}

func (o *SourceGoogleAnalyticsDataAPICustomReportConfig) GetCohortSpec() *SourceGoogleAnalyticsDataAPICohortReports {
	if o == nil {
		return nil
	}
	return o.CohortSpec
}

func (o *SourceGoogleAnalyticsDataAPICustomReportConfig) GetDimensionFilter() *SourceGoogleAnalyticsDataAPIDimensionsFilter {
	if o == nil {
		return nil
	}
	return o.DimensionFilter
}

func (o *SourceGoogleAnalyticsDataAPICustomReportConfig) GetDimensions() []string {
	if o == nil {
		return []string{}
	}
	return o.Dimensions
}

func (o *SourceGoogleAnalyticsDataAPICustomReportConfig) GetMetricFilter() *SourceGoogleAnalyticsDataAPIMetricsFilter {
	if o == nil {
		return nil
	}
	return o.MetricFilter
}

func (o *SourceGoogleAnalyticsDataAPICustomReportConfig) GetMetrics() []string {
	if o == nil {
		return []string{}
	}
	return o.Metrics
}

func (o *SourceGoogleAnalyticsDataAPICustomReportConfig) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type GoogleAnalyticsDataAPI string

const (
	GoogleAnalyticsDataAPIGoogleAnalyticsDataAPI GoogleAnalyticsDataAPI = "google-analytics-data-api"
)

func (e GoogleAnalyticsDataAPI) ToPointer() *GoogleAnalyticsDataAPI {
	return &e
}

func (e *GoogleAnalyticsDataAPI) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "google-analytics-data-api":
		*e = GoogleAnalyticsDataAPI(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAnalyticsDataAPI: %v", v)
	}
}

type SourceGoogleAnalyticsDataAPI struct {
	// Enables conversion of `conversions:*` event metrics from integers to floats. This is beneficial for preventing data rounding when the API returns float values for any `conversions:*` fields.
	ConvertConversionsEvent *bool `default:"false" json:"convert_conversions_event"`
	// Credentials for the service
	Credentials *SourceGoogleAnalyticsDataAPICredentials `json:"credentials,omitempty"`
	// You can add your Custom Analytics report by creating one.
	CustomReportsArray []SourceGoogleAnalyticsDataAPICustomReportConfig `json:"custom_reports_array,omitempty"`
	// The start date from which to replicate report data in the format YYYY-MM-DD. Data generated before this date will not be included in the report. Not applied to custom Cohort reports.
	DateRangesStartDate *types.Date `json:"date_ranges_start_date,omitempty"`
	// If false, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter. More information is available in <a href="https://developers.google.com/analytics/devguides/reporting/data/v1/rest/v1beta/properties/runReport#request-body">the documentation</a>.
	KeepEmptyRows *bool `default:"false" json:"keep_empty_rows"`
	// A list of your Property IDs. The Property ID is a unique number assigned to each property in Google Analytics, found in your GA4 property URL. This ID allows the connector to track the specific events associated with your property. Refer to the <a href='https://developers.google.com/analytics/devguides/reporting/data/v1/property-id#what_is_my_property_id'>Google Analytics documentation</a> to locate your property ID.
	PropertyIds []string               `json:"property_ids"`
	sourceType  GoogleAnalyticsDataAPI `const:"google-analytics-data-api" json:"sourceType"`
	// The interval in days for each data request made to the Google Analytics API. A larger value speeds up data sync, but increases the chance of data sampling, which may result in inaccuracies. We recommend a value of 1 to minimize sampling, unless speed is an absolute priority over accuracy. Acceptable values range from 1 to 364. Does not apply to custom Cohort reports. More information is available in <a href="https://docs.airbyte.com/integrations/sources/google-analytics-data-api">the documentation</a>.
	WindowInDays *int64 `default:"1" json:"window_in_days"`
}

func (s SourceGoogleAnalyticsDataAPI) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceGoogleAnalyticsDataAPI) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceGoogleAnalyticsDataAPI) GetConvertConversionsEvent() *bool {
	if o == nil {
		return nil
	}
	return o.ConvertConversionsEvent
}

func (o *SourceGoogleAnalyticsDataAPI) GetCredentials() *SourceGoogleAnalyticsDataAPICredentials {
	if o == nil {
		return nil
	}
	return o.Credentials
}

func (o *SourceGoogleAnalyticsDataAPI) GetCustomReportsArray() []SourceGoogleAnalyticsDataAPICustomReportConfig {
	if o == nil {
		return nil
	}
	return o.CustomReportsArray
}

func (o *SourceGoogleAnalyticsDataAPI) GetDateRangesStartDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.DateRangesStartDate
}

func (o *SourceGoogleAnalyticsDataAPI) GetKeepEmptyRows() *bool {
	if o == nil {
		return nil
	}
	return o.KeepEmptyRows
}

func (o *SourceGoogleAnalyticsDataAPI) GetPropertyIds() []string {
	if o == nil {
		return []string{}
	}
	return o.PropertyIds
}

func (o *SourceGoogleAnalyticsDataAPI) GetSourceType() GoogleAnalyticsDataAPI {
	return GoogleAnalyticsDataAPIGoogleAnalyticsDataAPI
}

func (o *SourceGoogleAnalyticsDataAPI) GetWindowInDays() *int64 {
	if o == nil {
		return nil
	}
	return o.WindowInDays
}
