// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type Circleci string

const (
	CircleciCircleci Circleci = "circleci"
)

func (e Circleci) ToPointer() *Circleci {
	return &e
}
func (e *Circleci) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "circleci":
		*e = Circleci(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Circleci: %v", v)
	}
}

type SourceCircleci struct {
	APIKey string `json:"api_key"`
	// The org ID found in `https://app.circleci.com/settings/organization/circleci/xxxxx/overview`
	OrgID     string    `json:"org_id"`
	StartDate time.Time `json:"start_date"`
	// Project ID found in the project settings
	ProjectID string `json:"project_id"`
	// Job ID for fetching information
	JobID *string `json:"job_id,omitempty"`
	// workflow ID of a project pipeline
	WorkflowID *string `json:"workflow_id,omitempty"`
	// Workflow name for fetching information
	WorkflowName *string `default:"build-and-test" json:"workflow_name"`
	// Job Number of the workflow
	JobNumber  *string  `default:"2" json:"job_number"`
	sourceType Circleci `const:"circleci" json:"sourceType"`
}

func (s SourceCircleci) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceCircleci) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceCircleci) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *SourceCircleci) GetOrgID() string {
	if o == nil {
		return ""
	}
	return o.OrgID
}

func (o *SourceCircleci) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}

func (o *SourceCircleci) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *SourceCircleci) GetJobID() *string {
	if o == nil {
		return nil
	}
	return o.JobID
}

func (o *SourceCircleci) GetWorkflowID() *string {
	if o == nil {
		return nil
	}
	return o.WorkflowID
}

func (o *SourceCircleci) GetWorkflowName() *string {
	if o == nil {
		return nil
	}
	return o.WorkflowName
}

func (o *SourceCircleci) GetJobNumber() *string {
	if o == nil {
		return nil
	}
	return o.JobNumber
}

func (o *SourceCircleci) GetSourceType() Circleci {
	return CircleciCircleci
}
