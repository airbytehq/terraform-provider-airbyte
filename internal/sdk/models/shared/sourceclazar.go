// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Clazar string

const (
	ClazarClazar Clazar = "clazar"
)

func (e Clazar) ToPointer() *Clazar {
	return &e
}
func (e *Clazar) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "clazar":
		*e = Clazar(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Clazar: %v", v)
	}
}

type SourceClazar struct {
	ClientID     string `json:"client_id"`
	ClientSecret string `json:"client_secret"`
	sourceType   Clazar `const:"clazar" json:"sourceType"`
}

func (s SourceClazar) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceClazar) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceClazar) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *SourceClazar) GetClientSecret() string {
	if o == nil {
		return ""
	}
	return o.ClientSecret
}

func (o *SourceClazar) GetSourceType() Clazar {
	return ClazarClazar
}
