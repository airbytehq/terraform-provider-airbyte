// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
	"time"
)

type Workflowmax string

const (
	WorkflowmaxWorkflowmax Workflowmax = "workflowmax"
)

func (e Workflowmax) ToPointer() *Workflowmax {
	return &e
}
func (e *Workflowmax) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "workflowmax":
		*e = Workflowmax(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Workflowmax: %v", v)
	}
}

type SourceWorkflowmax struct {
	// The account id for workflowmax
	AccountID  string      `json:"account_id"`
	APIKey2    string      `json:"api_key_2"`
	StartDate  time.Time   `json:"start_date"`
	sourceType Workflowmax `const:"workflowmax" json:"sourceType"`
}

func (s SourceWorkflowmax) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SourceWorkflowmax) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SourceWorkflowmax) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *SourceWorkflowmax) GetAPIKey2() string {
	if o == nil {
		return ""
	}
	return o.APIKey2
}

func (o *SourceWorkflowmax) GetStartDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartDate
}

func (o *SourceWorkflowmax) GetSourceType() Workflowmax {
	return WorkflowmaxWorkflowmax
}
