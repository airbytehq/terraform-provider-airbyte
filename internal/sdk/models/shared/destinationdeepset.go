// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/airbytehq/terraform-provider-airbyte/internal/sdk/internal/utils"
)

type Deepset string

const (
	DeepsetDeepset Deepset = "deepset"
)

func (e Deepset) ToPointer() *Deepset {
	return &e
}
func (e *Deepset) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deepset":
		*e = Deepset(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Deepset: %v", v)
	}
}

type DestinationDeepset struct {
	// Your deepset cloud API key
	APIKey string `json:"api_key"`
	// URL of deepset Cloud API (e.g. https://api.cloud.deepset.ai, https://api.us.deepset.ai, etc). Defaults to https://api.cloud.deepset.ai.
	BaseURL *string `default:"https://api.cloud.deepset.ai" json:"base_url"`
	// Name of workspace to which to sync the data.
	Workspace string `json:"workspace"`
	// Number of times to retry an action before giving up.
	Retries         *float64 `default:"5" json:"retries"`
	destinationType Deepset  `const:"deepset" json:"destinationType"`
}

func (d DestinationDeepset) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DestinationDeepset) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DestinationDeepset) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *DestinationDeepset) GetBaseURL() *string {
	if o == nil {
		return nil
	}
	return o.BaseURL
}

func (o *DestinationDeepset) GetWorkspace() string {
	if o == nil {
		return ""
	}
	return o.Workspace
}

func (o *DestinationDeepset) GetRetries() *float64 {
	if o == nil {
		return nil
	}
	return o.Retries
}

func (o *DestinationDeepset) GetDestinationType() Deepset {
	return DeepsetDeepset
}
